ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB73:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                             www.st.com/SLA0044
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "cmsis_os.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 2


  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** UART_HandleTypeDef huart1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Definitions for readUART */
  49:Core/Src/main.c **** osThreadId_t readUARTHandle;
  50:Core/Src/main.c **** const osThreadAttr_t readUART_attributes = {
  51:Core/Src/main.c ****   .name = "readUART",
  52:Core/Src/main.c ****   .stack_size = 128 * 4,
  53:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityNormal,
  54:Core/Src/main.c **** };
  55:Core/Src/main.c **** /* Definitions for Servo01 */
  56:Core/Src/main.c **** osThreadId_t Servo01Handle;
  57:Core/Src/main.c **** const osThreadAttr_t Servo01_attributes = {
  58:Core/Src/main.c ****   .name = "Servo01",
  59:Core/Src/main.c ****   .stack_size = 128 * 4,
  60:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityLow,
  61:Core/Src/main.c **** };
  62:Core/Src/main.c **** /* USER CODE BEGIN PV */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE END PV */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  67:Core/Src/main.c **** void SystemClock_Config(void);
  68:Core/Src/main.c **** static void MX_GPIO_Init(void);
  69:Core/Src/main.c **** static void MX_TIM2_Init(void);
  70:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  71:Core/Src/main.c **** void StartReadUART(void *argument);
  72:Core/Src/main.c **** void StartServo01(void *argument);
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** /* USER CODE END PFP */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  79:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** /* USER CODE END 0 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /**
  84:Core/Src/main.c ****   * @brief  The application entry point.
  85:Core/Src/main.c ****   * @retval int
  86:Core/Src/main.c ****   */
  87:Core/Src/main.c **** int main(void)
  88:Core/Src/main.c **** {
  89:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE END 1 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  96:Core/Src/main.c ****   HAL_Init();
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE END Init */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* Configure the system clock */
 103:Core/Src/main.c ****   SystemClock_Config();
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE END SysInit */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* Initialize all configured peripherals */
 110:Core/Src/main.c ****   MX_GPIO_Init();
 111:Core/Src/main.c ****   MX_TIM2_Init();
 112:Core/Src/main.c ****   MX_USART1_UART_Init();
 113:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 114:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 115:Core/Src/main.c ****   /* USER CODE END 2 */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* Init scheduler */
 118:Core/Src/main.c ****   osKernelInitialize();
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 121:Core/Src/main.c ****   /* add mutexes, ... */
 122:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 125:Core/Src/main.c ****   /* add semaphores, ... */
 126:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 129:Core/Src/main.c ****   /* start timers, add new ones, ... */
 130:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 133:Core/Src/main.c ****   /* add queues, ... */
 134:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* Create the thread(s) */
 137:Core/Src/main.c ****   /* creation of readUART */
 138:Core/Src/main.c ****   readUARTHandle = osThreadNew(StartReadUART, NULL, &readUART_attributes);
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* creation of Servo01 */
 141:Core/Src/main.c ****   Servo01Handle = osThreadNew(StartServo01, NULL, &Servo01_attributes);
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 144:Core/Src/main.c ****   /* add threads, ... */
 145:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_EVENTS */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 4


 148:Core/Src/main.c ****   /* add events, ... */
 149:Core/Src/main.c ****   /* USER CODE END RTOS_EVENTS */
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /* Start scheduler */
 152:Core/Src/main.c ****   osKernelStart();
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 155:Core/Src/main.c ****   /* Infinite loop */
 156:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 157:Core/Src/main.c ****   while (1)
 158:Core/Src/main.c ****   {
 159:Core/Src/main.c ****     /* USER CODE END WHILE */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 162:Core/Src/main.c ****   }
 163:Core/Src/main.c ****   /* USER CODE END 3 */
 164:Core/Src/main.c **** }
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** /**
 167:Core/Src/main.c ****   * @brief System Clock Configuration
 168:Core/Src/main.c ****   * @retval None
 169:Core/Src/main.c ****   */
 170:Core/Src/main.c **** void SystemClock_Config(void)
 171:Core/Src/main.c **** {
 172:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 173:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 176:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 177:Core/Src/main.c ****   */
 178:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 179:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 181:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 182:Core/Src/main.c ****   {
 183:Core/Src/main.c ****     Error_Handler();
 184:Core/Src/main.c ****   }
 185:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 186:Core/Src/main.c ****   */
 187:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 188:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 189:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;
 190:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 191:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 192:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 195:Core/Src/main.c ****   {
 196:Core/Src/main.c ****     Error_Handler();
 197:Core/Src/main.c ****   }
 198:Core/Src/main.c **** }
 199:Core/Src/main.c **** 
 200:Core/Src/main.c **** /**
 201:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 202:Core/Src/main.c ****   * @param None
 203:Core/Src/main.c ****   * @retval None
 204:Core/Src/main.c ****   */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 5


 205:Core/Src/main.c **** static void MX_TIM2_Init(void)
 206:Core/Src/main.c **** {
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 213:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 214:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 219:Core/Src/main.c ****   htim2.Instance = TIM2;
 220:Core/Src/main.c ****   htim2.Init.Prescaler = 15;
 221:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 222:Core/Src/main.c ****   htim2.Init.Period = 9999;
 223:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 224:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 225:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 226:Core/Src/main.c ****   {
 227:Core/Src/main.c ****     Error_Handler();
 228:Core/Src/main.c ****   }
 229:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 230:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 231:Core/Src/main.c ****   {
 232:Core/Src/main.c ****     Error_Handler();
 233:Core/Src/main.c ****   }
 234:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 235:Core/Src/main.c ****   {
 236:Core/Src/main.c ****     Error_Handler();
 237:Core/Src/main.c ****   }
 238:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 239:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 240:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 241:Core/Src/main.c ****   {
 242:Core/Src/main.c ****     Error_Handler();
 243:Core/Src/main.c ****   }
 244:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 245:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 246:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 247:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 248:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 249:Core/Src/main.c ****   {
 250:Core/Src/main.c ****     Error_Handler();
 251:Core/Src/main.c ****   }
 252:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 255:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim2);
 256:Core/Src/main.c **** 
 257:Core/Src/main.c **** }
 258:Core/Src/main.c **** 
 259:Core/Src/main.c **** /**
 260:Core/Src/main.c ****   * @brief USART1 Initialization Function
 261:Core/Src/main.c ****   * @param None
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 6


 262:Core/Src/main.c ****   * @retval None
 263:Core/Src/main.c ****   */
 264:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 265:Core/Src/main.c **** {
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 274:Core/Src/main.c ****   huart1.Instance = USART1;
 275:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 276:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_9B;
 277:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 278:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_EVEN;
 279:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 280:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 281:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 282:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 283:Core/Src/main.c ****   {
 284:Core/Src/main.c ****     Error_Handler();
 285:Core/Src/main.c ****   }
 286:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** }
 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** /**
 293:Core/Src/main.c ****   * @brief GPIO Initialization Function
 294:Core/Src/main.c ****   * @param None
 295:Core/Src/main.c ****   * @retval None
 296:Core/Src/main.c ****   */
 297:Core/Src/main.c **** static void MX_GPIO_Init(void)
 298:Core/Src/main.c **** {
  26              		.loc 1 298 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 301:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  34              		.loc 1 301 3 view .LVU1
  35              	.LBB4:
  36              		.loc 1 301 3 view .LVU2
  37              		.loc 1 301 3 view .LVU3
  38 0002 0A4B     		ldr	r3, .L3
  39 0004 9A69     		ldr	r2, [r3, #24]
  40 0006 42F02002 		orr	r2, r2, #32
  41 000a 9A61     		str	r2, [r3, #24]
  42              		.loc 1 301 3 view .LVU4
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 7


  43 000c 9A69     		ldr	r2, [r3, #24]
  44 000e 02F02002 		and	r2, r2, #32
  45 0012 0092     		str	r2, [sp]
  46              		.loc 1 301 3 view .LVU5
  47 0014 009A     		ldr	r2, [sp]
  48              	.LBE4:
 302:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  49              		.loc 1 302 3 view .LVU6
  50              	.LBB5:
  51              		.loc 1 302 3 view .LVU7
  52              		.loc 1 302 3 view .LVU8
  53 0016 9A69     		ldr	r2, [r3, #24]
  54 0018 42F00402 		orr	r2, r2, #4
  55 001c 9A61     		str	r2, [r3, #24]
  56              		.loc 1 302 3 view .LVU9
  57 001e 9B69     		ldr	r3, [r3, #24]
  58 0020 03F00403 		and	r3, r3, #4
  59 0024 0193     		str	r3, [sp, #4]
  60              		.loc 1 302 3 view .LVU10
  61 0026 019B     		ldr	r3, [sp, #4]
  62              	.LBE5:
 303:Core/Src/main.c **** 
 304:Core/Src/main.c **** }
  63              		.loc 1 304 1 is_stmt 0 view .LVU11
  64 0028 02B0     		add	sp, sp, #8
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 0
  67              		@ sp needed
  68 002a 7047     		bx	lr
  69              	.L4:
  70              		.align	2
  71              	.L3:
  72 002c 00100240 		.word	1073876992
  73              		.cfi_endproc
  74              	.LFE73:
  76              		.section	.text.StartServo01,"ax",%progbits
  77              		.align	1
  78              		.global	StartServo01
  79              		.syntax unified
  80              		.thumb
  81              		.thumb_func
  82              		.fpu softvfp
  84              	StartServo01:
  85              	.LFB75:
 305:Core/Src/main.c **** 
 306:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 307:Core/Src/main.c **** 
 308:Core/Src/main.c **** /* USER CODE END 4 */
 309:Core/Src/main.c **** 
 310:Core/Src/main.c **** /* USER CODE BEGIN Header_StartReadUART */
 311:Core/Src/main.c **** /**
 312:Core/Src/main.c ****   * @brief  Function implementing the readUART thread.
 313:Core/Src/main.c ****   * @param  argument: Not used
 314:Core/Src/main.c ****   * @retval None
 315:Core/Src/main.c ****   */
 316:Core/Src/main.c **** /* USER CODE END Header_StartReadUART */
 317:Core/Src/main.c **** void StartReadUART(void *argument)
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 8


 318:Core/Src/main.c **** {
 319:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 320:Core/Src/main.c ****   /* Infinite loop */
 321:Core/Src/main.c ****   for(;;)
 322:Core/Src/main.c ****   {
 323:Core/Src/main.c ****     char buffer[8];
 324:Core/Src/main.c ****     char msg[30];
 325:Core/Src/main.c ****     uint8_t arr[9] = {0};
 326:Core/Src/main.c ****     uint16_t i = 0, myInt = 0;
 327:Core/Src/main.c ****     if (HAL_UART_Receive(&huart1, buffer, 1, 1000) == HAL_OK && buffer[0] == '!') //only read if se
 328:Core/Src/main.c ****     {
 329:Core/Src/main.c ****       while (buffer[0] != '#') //loop till encounter the end char "#"
 330:Core/Src/main.c ****       {
 331:Core/Src/main.c ****         HAL_UART_Receive(&huart1, buffer, 1, 1000);
 332:Core/Src/main.c ****         // if (buffer[0] == ':') //save all char before ":" in myInt
 333:Core/Src/main.c ****         // {
 334:Core/Src/main.c ****         //   i = 0;
 335:Core/Src/main.c ****         //   myInt = atoi(arr);
 336:Core/Src/main.c ****         //   memset(&arr[0], 0, sizeof(arr)); //clear arr array
 337:Core/Src/main.c ****         //   continue;
 338:Core/Src/main.c ****         // }
 339:Core/Src/main.c ****         if (buffer[0] == '#') //add all char before "#" to myInt
 340:Core/Src/main.c ****         {
 341:Core/Src/main.c ****           myInt += atoi(arr);
 342:Core/Src/main.c ****           memset(&arr[0], 0, sizeof(arr)); //clear arr array
 343:Core/Src/main.c ****         }
 344:Core/Src/main.c ****         arr[i] = buffer[0]; //add buffer char to array
 345:Core/Src/main.c ****         i++;
 346:Core/Src/main.c ****       }
 347:Core/Src/main.c ****       if(myInt>1250){
 348:Core/Src/main.c ****         __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_1, (uint16_t )1250);
 349:Core/Src/main.c ****       }
 350:Core/Src/main.c ****       else if(myInt<250){
 351:Core/Src/main.c ****         __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_1, (uint16_t )250);
 352:Core/Src/main.c ****       }
 353:Core/Src/main.c ****       else{
 354:Core/Src/main.c ****         __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_1, (uint16_t )myInt);
 355:Core/Src/main.c ****       }
 356:Core/Src/main.c ****       sprintf(msg, "Set servo to: %d \n\r", myInt);
 357:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, msg, strlen(msg), 1000);
 358:Core/Src/main.c ****     }
 359:Core/Src/main.c ****     osDelay(1);
 360:Core/Src/main.c ****   }
 361:Core/Src/main.c ****   /* USER CODE END 5 */
 362:Core/Src/main.c **** }
 363:Core/Src/main.c **** 
 364:Core/Src/main.c **** /* USER CODE BEGIN Header_StartServo01 */
 365:Core/Src/main.c **** /**
 366:Core/Src/main.c **** * @brief Function implementing the Servo01 thread.
 367:Core/Src/main.c **** * @param argument: Not used
 368:Core/Src/main.c **** * @retval None
 369:Core/Src/main.c **** */
 370:Core/Src/main.c **** /* USER CODE END Header_StartServo01 */
 371:Core/Src/main.c **** void StartServo01(void *argument)
 372:Core/Src/main.c **** {
  86              		.loc 1 372 1 is_stmt 1 view -0
  87              		.cfi_startproc
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 9


  88              		@ Volatile: function does not return.
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
  92              	.LVL0:
  93              	.L6:
 373:Core/Src/main.c ****   /* USER CODE BEGIN StartServo01 */
 374:Core/Src/main.c ****   /* Infinite loop */
 375:Core/Src/main.c ****   for(;;)
  94              		.loc 1 375 3 discriminator 1 view .LVU13
 376:Core/Src/main.c ****   {
 377:Core/Src/main.c ****     
 378:Core/Src/main.c ****   }
  95              		.loc 1 378 3 discriminator 1 view .LVU14
  96 0000 FEE7     		b	.L6
  97              		.cfi_endproc
  98              	.LFE75:
 100              		.section	.text.StartReadUART,"ax",%progbits
 101              		.align	1
 102              		.global	StartReadUART
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu softvfp
 108              	StartReadUART:
 109              	.LFB74:
 318:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 110              		.loc 1 318 1 view -0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 56
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114              	.LVL1:
 318:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 115              		.loc 1 318 1 is_stmt 0 view .LVU16
 116 0000 30B5     		push	{r4, r5, lr}
 117              	.LCFI2:
 118              		.cfi_def_cfa_offset 12
 119              		.cfi_offset 4, -12
 120              		.cfi_offset 5, -8
 121              		.cfi_offset 14, -4
 122 0002 8FB0     		sub	sp, sp, #60
 123              	.LCFI3:
 124              		.cfi_def_cfa_offset 72
 125 0004 3CE0     		b	.L15
 126              	.LVL2:
 127              	.L19:
 128              	.LBB6:
 129              	.LBB7:
 130              	.LBB8:
 341:Core/Src/main.c ****           memset(&arr[0], 0, sizeof(arr)); //clear arr array
 131              		.loc 1 341 11 is_stmt 1 view .LVU17
 341:Core/Src/main.c ****           memset(&arr[0], 0, sizeof(arr)); //clear arr array
 132              		.loc 1 341 20 is_stmt 0 view .LVU18
 133 0006 03A8     		add	r0, sp, #12
 134 0008 FFF7FEFF 		bl	atoi
 135              	.LVL3:
 341:Core/Src/main.c ****           memset(&arr[0], 0, sizeof(arr)); //clear arr array
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 10


 136              		.loc 1 341 17 view .LVU19
 137 000c 0544     		add	r5, r5, r0
 138              	.LVL4:
 341:Core/Src/main.c ****           memset(&arr[0], 0, sizeof(arr)); //clear arr array
 139              		.loc 1 341 17 view .LVU20
 140 000e ADB2     		uxth	r5, r5
 141              	.LVL5:
 342:Core/Src/main.c ****         }
 142              		.loc 1 342 11 is_stmt 1 view .LVU21
 143 0010 0023     		movs	r3, #0
 144 0012 0393     		str	r3, [sp, #12]
 145 0014 0493     		str	r3, [sp, #16]
 146 0016 8DF81430 		strb	r3, [sp, #20]
 147              	.L10:
 342:Core/Src/main.c ****         }
 148              		.loc 1 342 11 is_stmt 0 view .LVU22
 149              	.LBE8:
 344:Core/Src/main.c ****         i++;
 150              		.loc 1 344 9 is_stmt 1 view .LVU23
 344:Core/Src/main.c ****         i++;
 151              		.loc 1 344 24 is_stmt 0 view .LVU24
 152 001a 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 344:Core/Src/main.c ****         i++;
 153              		.loc 1 344 16 view .LVU25
 154 001e 0EAB     		add	r3, sp, #56
 155 0020 2344     		add	r3, r3, r4
 156 0022 03F82C2C 		strb	r2, [r3, #-44]
 345:Core/Src/main.c ****       }
 157              		.loc 1 345 9 is_stmt 1 view .LVU26
 345:Core/Src/main.c ****       }
 158              		.loc 1 345 10 is_stmt 0 view .LVU27
 159 0026 0134     		adds	r4, r4, #1
 160              	.LVL6:
 345:Core/Src/main.c ****       }
 161              		.loc 1 345 10 view .LVU28
 162 0028 A4B2     		uxth	r4, r4
 163              	.LVL7:
 164              	.L9:
 329:Core/Src/main.c ****       {
 165              		.loc 1 329 20 view .LVU29
 166 002a 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 329:Core/Src/main.c ****       {
 167              		.loc 1 329 13 view .LVU30
 168 002e 232B     		cmp	r3, #35
 169 0030 0BD0     		beq	.L18
 331:Core/Src/main.c ****         // if (buffer[0] == ':') //save all char before ":" in myInt
 170              		.loc 1 331 9 is_stmt 1 view .LVU31
 171 0032 4FF47A73 		mov	r3, #1000
 172 0036 0122     		movs	r2, #1
 173 0038 01A9     		add	r1, sp, #4
 174 003a 2148     		ldr	r0, .L20
 175 003c FFF7FEFF 		bl	HAL_UART_Receive
 176              	.LVL8:
 339:Core/Src/main.c ****         {
 177              		.loc 1 339 9 view .LVU32
 339:Core/Src/main.c ****         {
 178              		.loc 1 339 19 is_stmt 0 view .LVU33
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 11


 179 0040 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 339:Core/Src/main.c ****         {
 180              		.loc 1 339 12 view .LVU34
 181 0044 232B     		cmp	r3, #35
 182 0046 E8D1     		bne	.L10
 183 0048 DDE7     		b	.L19
 184              	.L18:
 347:Core/Src/main.c ****         __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_1, (uint16_t )1250);
 185              		.loc 1 347 7 is_stmt 1 view .LVU35
 347:Core/Src/main.c ****         __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_1, (uint16_t )1250);
 186              		.loc 1 347 9 is_stmt 0 view .LVU36
 187 004a 40F2E243 		movw	r3, #1250
 188 004e 9D42     		cmp	r5, r3
 189 0050 2BD9     		bls	.L12
 348:Core/Src/main.c ****       }
 190              		.loc 1 348 9 is_stmt 1 view .LVU37
 191 0052 1C4B     		ldr	r3, .L20+4
 192 0054 1B68     		ldr	r3, [r3]
 193 0056 40F2E242 		movw	r2, #1250
 194 005a 5A63     		str	r2, [r3, #52]
 195              	.L13:
 356:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, msg, strlen(msg), 1000);
 196              		.loc 1 356 7 view .LVU38
 197 005c 2A46     		mov	r2, r5
 198 005e 1A49     		ldr	r1, .L20+8
 199 0060 06A8     		add	r0, sp, #24
 200 0062 FFF7FEFF 		bl	sprintf
 201              	.LVL9:
 357:Core/Src/main.c ****     }
 202              		.loc 1 357 7 view .LVU39
 357:Core/Src/main.c ****     }
 203              		.loc 1 357 39 is_stmt 0 view .LVU40
 204 0066 06A8     		add	r0, sp, #24
 205 0068 FFF7FEFF 		bl	strlen
 206              	.LVL10:
 357:Core/Src/main.c ****     }
 207              		.loc 1 357 7 view .LVU41
 208 006c 4FF47A73 		mov	r3, #1000
 209 0070 82B2     		uxth	r2, r0
 210 0072 06A9     		add	r1, sp, #24
 211 0074 1248     		ldr	r0, .L20
 212 0076 FFF7FEFF 		bl	HAL_UART_Transmit
 213              	.LVL11:
 214              	.L8:
 357:Core/Src/main.c ****     }
 215              		.loc 1 357 7 view .LVU42
 216              	.LBE7:
 359:Core/Src/main.c ****   }
 217              		.loc 1 359 5 is_stmt 1 view .LVU43
 218 007a 0120     		movs	r0, #1
 219 007c FFF7FEFF 		bl	osDelay
 220              	.LVL12:
 221              	.L15:
 222              	.LBE6:
 321:Core/Src/main.c ****   {
 223              		.loc 1 321 3 view .LVU44
 224              	.LBB10:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 12


 323:Core/Src/main.c ****     char msg[30];
 225              		.loc 1 323 5 view .LVU45
 324:Core/Src/main.c ****     uint8_t arr[9] = {0};
 226              		.loc 1 324 5 view .LVU46
 325:Core/Src/main.c ****     uint16_t i = 0, myInt = 0;
 227              		.loc 1 325 5 view .LVU47
 325:Core/Src/main.c ****     uint16_t i = 0, myInt = 0;
 228              		.loc 1 325 13 is_stmt 0 view .LVU48
 229 0080 0023     		movs	r3, #0
 230 0082 0393     		str	r3, [sp, #12]
 231 0084 0493     		str	r3, [sp, #16]
 232 0086 8DF81430 		strb	r3, [sp, #20]
 326:Core/Src/main.c ****     if (HAL_UART_Receive(&huart1, buffer, 1, 1000) == HAL_OK && buffer[0] == '!') //only read if se
 233              		.loc 1 326 5 is_stmt 1 view .LVU49
 234              	.LVL13:
 327:Core/Src/main.c ****     {
 235              		.loc 1 327 5 view .LVU50
 327:Core/Src/main.c ****     {
 236              		.loc 1 327 9 is_stmt 0 view .LVU51
 237 008a 4FF47A73 		mov	r3, #1000
 238 008e 0122     		movs	r2, #1
 239 0090 01A9     		add	r1, sp, #4
 240 0092 0B48     		ldr	r0, .L20
 241 0094 FFF7FEFF 		bl	HAL_UART_Receive
 242              	.LVL14:
 327:Core/Src/main.c ****     {
 243              		.loc 1 327 8 view .LVU52
 244 0098 0028     		cmp	r0, #0
 245 009a EED1     		bne	.L8
 327:Core/Src/main.c ****     {
 246              		.loc 1 327 71 discriminator 1 view .LVU53
 247 009c 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 327:Core/Src/main.c ****     {
 248              		.loc 1 327 62 discriminator 1 view .LVU54
 249 00a0 212B     		cmp	r3, #33
 250 00a2 EAD1     		bne	.L8
 326:Core/Src/main.c ****     if (HAL_UART_Receive(&huart1, buffer, 1, 1000) == HAL_OK && buffer[0] == '!') //only read if se
 251              		.loc 1 326 21 view .LVU55
 252 00a4 0025     		movs	r5, #0
 326:Core/Src/main.c ****     if (HAL_UART_Receive(&huart1, buffer, 1, 1000) == HAL_OK && buffer[0] == '!') //only read if se
 253              		.loc 1 326 14 view .LVU56
 254 00a6 2C46     		mov	r4, r5
 255 00a8 BFE7     		b	.L9
 256              	.LVL15:
 257              	.L12:
 258              	.LBB9:
 350:Core/Src/main.c ****         __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_1, (uint16_t )250);
 259              		.loc 1 350 12 is_stmt 1 view .LVU57
 350:Core/Src/main.c ****         __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_1, (uint16_t )250);
 260              		.loc 1 350 14 is_stmt 0 view .LVU58
 261 00aa F92D     		cmp	r5, #249
 262 00ac 04D8     		bhi	.L14
 351:Core/Src/main.c ****       }
 263              		.loc 1 351 9 is_stmt 1 view .LVU59
 264 00ae 054B     		ldr	r3, .L20+4
 265 00b0 1B68     		ldr	r3, [r3]
 266 00b2 FA22     		movs	r2, #250
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 13


 267 00b4 5A63     		str	r2, [r3, #52]
 268 00b6 D1E7     		b	.L13
 269              	.L14:
 354:Core/Src/main.c ****       }
 270              		.loc 1 354 9 view .LVU60
 271 00b8 024B     		ldr	r3, .L20+4
 272 00ba 1B68     		ldr	r3, [r3]
 273 00bc 5D63     		str	r5, [r3, #52]
 274 00be CDE7     		b	.L13
 275              	.L21:
 276              		.align	2
 277              	.L20:
 278 00c0 00000000 		.word	huart1
 279 00c4 00000000 		.word	htim2
 280 00c8 00000000 		.word	.LC0
 281              	.LBE9:
 282              	.LBE10:
 283              		.cfi_endproc
 284              	.LFE74:
 286              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 287              		.align	1
 288              		.global	HAL_TIM_PeriodElapsedCallback
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 292              		.fpu softvfp
 294              	HAL_TIM_PeriodElapsedCallback:
 295              	.LVL16:
 296              	.LFB76:
 379:Core/Src/main.c ****   /* USER CODE END StartServo01 */
 380:Core/Src/main.c **** }
 381:Core/Src/main.c **** 
 382:Core/Src/main.c **** /**
 383:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 384:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 385:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 386:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 387:Core/Src/main.c ****   * @param  htim : TIM handle
 388:Core/Src/main.c ****   * @retval None
 389:Core/Src/main.c ****   */
 390:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 391:Core/Src/main.c **** {
 297              		.loc 1 391 1 view -0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              		.loc 1 391 1 is_stmt 0 view .LVU62
 302 0000 08B5     		push	{r3, lr}
 303              	.LCFI4:
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 3, -8
 306              		.cfi_offset 14, -4
 392:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 395:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 307              		.loc 1 395 3 is_stmt 1 view .LVU63
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 14


 308              		.loc 1 395 11 is_stmt 0 view .LVU64
 309 0002 0268     		ldr	r2, [r0]
 310              		.loc 1 395 6 view .LVU65
 311 0004 034B     		ldr	r3, .L26
 312 0006 9A42     		cmp	r2, r3
 313 0008 00D0     		beq	.L25
 314              	.LVL17:
 315              	.L22:
 396:Core/Src/main.c ****     HAL_IncTick();
 397:Core/Src/main.c ****   }
 398:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 401:Core/Src/main.c **** }
 316              		.loc 1 401 1 view .LVU66
 317 000a 08BD     		pop	{r3, pc}
 318              	.LVL18:
 319              	.L25:
 396:Core/Src/main.c ****     HAL_IncTick();
 320              		.loc 1 396 5 is_stmt 1 view .LVU67
 321 000c FFF7FEFF 		bl	HAL_IncTick
 322              	.LVL19:
 323              		.loc 1 401 1 is_stmt 0 view .LVU68
 324 0010 FBE7     		b	.L22
 325              	.L27:
 326 0012 00BF     		.align	2
 327              	.L26:
 328 0014 002C0140 		.word	1073818624
 329              		.cfi_endproc
 330              	.LFE76:
 332              		.section	.text.Error_Handler,"ax",%progbits
 333              		.align	1
 334              		.global	Error_Handler
 335              		.syntax unified
 336              		.thumb
 337              		.thumb_func
 338              		.fpu softvfp
 340              	Error_Handler:
 341              	.LFB77:
 402:Core/Src/main.c **** 
 403:Core/Src/main.c **** /**
 404:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 405:Core/Src/main.c ****   * @retval None
 406:Core/Src/main.c ****   */
 407:Core/Src/main.c **** void Error_Handler(void)
 408:Core/Src/main.c **** {
 342              		.loc 1 408 1 is_stmt 1 view -0
 343              		.cfi_startproc
 344              		@ Volatile: function does not return.
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347              		@ link register save eliminated.
 409:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 410:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 411:Core/Src/main.c ****   __disable_irq();
 348              		.loc 1 411 3 view .LVU70
 349              	.LBB11:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 15


 350              	.LBI11:
 351              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 16


  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 17


 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 352              		.loc 2 140 27 view .LVU71
 353              	.LBB12:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 354              		.loc 2 142 3 view .LVU72
 355              		.syntax unified
 356              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 357 0000 72B6     		cpsid i
 358              	@ 0 "" 2
 359              		.thumb
 360              		.syntax unified
 361              	.L29:
 362              	.LBE12:
 363              	.LBE11:
 412:Core/Src/main.c ****   while (1)
 364              		.loc 1 412 3 discriminator 1 view .LVU73
 413:Core/Src/main.c ****   {
 414:Core/Src/main.c ****   }
 365              		.loc 1 414 3 discriminator 1 view .LVU74
 366 0002 FEE7     		b	.L29
 367              		.cfi_endproc
 368              	.LFE77:
 370              		.section	.text.MX_TIM2_Init,"ax",%progbits
 371              		.align	1
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 375              		.fpu softvfp
 377              	MX_TIM2_Init:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 18


 378              	.LFB71:
 206:Core/Src/main.c **** 
 379              		.loc 1 206 1 view -0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 56
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383 0000 00B5     		push	{lr}
 384              	.LCFI5:
 385              		.cfi_def_cfa_offset 4
 386              		.cfi_offset 14, -4
 387 0002 8FB0     		sub	sp, sp, #60
 388              	.LCFI6:
 389              		.cfi_def_cfa_offset 64
 212:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 390              		.loc 1 212 3 view .LVU76
 212:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 391              		.loc 1 212 26 is_stmt 0 view .LVU77
 392 0004 0023     		movs	r3, #0
 393 0006 0A93     		str	r3, [sp, #40]
 394 0008 0B93     		str	r3, [sp, #44]
 395 000a 0C93     		str	r3, [sp, #48]
 396 000c 0D93     		str	r3, [sp, #52]
 213:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 397              		.loc 1 213 3 is_stmt 1 view .LVU78
 213:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 398              		.loc 1 213 27 is_stmt 0 view .LVU79
 399 000e 0893     		str	r3, [sp, #32]
 400 0010 0993     		str	r3, [sp, #36]
 214:Core/Src/main.c **** 
 401              		.loc 1 214 3 is_stmt 1 view .LVU80
 214:Core/Src/main.c **** 
 402              		.loc 1 214 22 is_stmt 0 view .LVU81
 403 0012 0193     		str	r3, [sp, #4]
 404 0014 0293     		str	r3, [sp, #8]
 405 0016 0393     		str	r3, [sp, #12]
 406 0018 0493     		str	r3, [sp, #16]
 407 001a 0593     		str	r3, [sp, #20]
 408 001c 0693     		str	r3, [sp, #24]
 409 001e 0793     		str	r3, [sp, #28]
 219:Core/Src/main.c ****   htim2.Init.Prescaler = 15;
 410              		.loc 1 219 3 is_stmt 1 view .LVU82
 219:Core/Src/main.c ****   htim2.Init.Prescaler = 15;
 411              		.loc 1 219 18 is_stmt 0 view .LVU83
 412 0020 1E48     		ldr	r0, .L42
 413 0022 4FF08042 		mov	r2, #1073741824
 414 0026 0260     		str	r2, [r0]
 220:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 415              		.loc 1 220 3 is_stmt 1 view .LVU84
 220:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 416              		.loc 1 220 24 is_stmt 0 view .LVU85
 417 0028 0F22     		movs	r2, #15
 418 002a 4260     		str	r2, [r0, #4]
 221:Core/Src/main.c ****   htim2.Init.Period = 9999;
 419              		.loc 1 221 3 is_stmt 1 view .LVU86
 221:Core/Src/main.c ****   htim2.Init.Period = 9999;
 420              		.loc 1 221 26 is_stmt 0 view .LVU87
 421 002c 8360     		str	r3, [r0, #8]
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 19


 222:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 422              		.loc 1 222 3 is_stmt 1 view .LVU88
 222:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 423              		.loc 1 222 21 is_stmt 0 view .LVU89
 424 002e 42F20F72 		movw	r2, #9999
 425 0032 C260     		str	r2, [r0, #12]
 223:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 426              		.loc 1 223 3 is_stmt 1 view .LVU90
 223:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 427              		.loc 1 223 28 is_stmt 0 view .LVU91
 428 0034 0361     		str	r3, [r0, #16]
 224:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 429              		.loc 1 224 3 is_stmt 1 view .LVU92
 224:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 430              		.loc 1 224 32 is_stmt 0 view .LVU93
 431 0036 8361     		str	r3, [r0, #24]
 225:Core/Src/main.c ****   {
 432              		.loc 1 225 3 is_stmt 1 view .LVU94
 225:Core/Src/main.c ****   {
 433              		.loc 1 225 7 is_stmt 0 view .LVU95
 434 0038 FFF7FEFF 		bl	HAL_TIM_Base_Init
 435              	.LVL20:
 225:Core/Src/main.c ****   {
 436              		.loc 1 225 6 view .LVU96
 437 003c 20BB     		cbnz	r0, .L37
 229:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 438              		.loc 1 229 3 is_stmt 1 view .LVU97
 229:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 439              		.loc 1 229 34 is_stmt 0 view .LVU98
 440 003e 4FF48053 		mov	r3, #4096
 441 0042 0A93     		str	r3, [sp, #40]
 230:Core/Src/main.c ****   {
 442              		.loc 1 230 3 is_stmt 1 view .LVU99
 230:Core/Src/main.c ****   {
 443              		.loc 1 230 7 is_stmt 0 view .LVU100
 444 0044 0AA9     		add	r1, sp, #40
 445 0046 1548     		ldr	r0, .L42
 446 0048 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 447              	.LVL21:
 230:Core/Src/main.c ****   {
 448              		.loc 1 230 6 view .LVU101
 449 004c F0B9     		cbnz	r0, .L38
 234:Core/Src/main.c ****   {
 450              		.loc 1 234 3 is_stmt 1 view .LVU102
 234:Core/Src/main.c ****   {
 451              		.loc 1 234 7 is_stmt 0 view .LVU103
 452 004e 1348     		ldr	r0, .L42
 453 0050 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 454              	.LVL22:
 234:Core/Src/main.c ****   {
 455              		.loc 1 234 6 view .LVU104
 456 0054 E0B9     		cbnz	r0, .L39
 238:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 457              		.loc 1 238 3 is_stmt 1 view .LVU105
 238:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 458              		.loc 1 238 37 is_stmt 0 view .LVU106
 459 0056 0023     		movs	r3, #0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 20


 460 0058 0893     		str	r3, [sp, #32]
 239:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 461              		.loc 1 239 3 is_stmt 1 view .LVU107
 239:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 462              		.loc 1 239 33 is_stmt 0 view .LVU108
 463 005a 0993     		str	r3, [sp, #36]
 240:Core/Src/main.c ****   {
 464              		.loc 1 240 3 is_stmt 1 view .LVU109
 240:Core/Src/main.c ****   {
 465              		.loc 1 240 7 is_stmt 0 view .LVU110
 466 005c 08A9     		add	r1, sp, #32
 467 005e 0F48     		ldr	r0, .L42
 468 0060 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 469              	.LVL23:
 240:Core/Src/main.c ****   {
 470              		.loc 1 240 6 view .LVU111
 471 0064 B0B9     		cbnz	r0, .L40
 244:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 472              		.loc 1 244 3 is_stmt 1 view .LVU112
 244:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 473              		.loc 1 244 20 is_stmt 0 view .LVU113
 474 0066 6023     		movs	r3, #96
 475 0068 0193     		str	r3, [sp, #4]
 245:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 476              		.loc 1 245 3 is_stmt 1 view .LVU114
 245:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 477              		.loc 1 245 19 is_stmt 0 view .LVU115
 478 006a 0022     		movs	r2, #0
 479 006c 0292     		str	r2, [sp, #8]
 246:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 480              		.loc 1 246 3 is_stmt 1 view .LVU116
 246:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 481              		.loc 1 246 24 is_stmt 0 view .LVU117
 482 006e 0392     		str	r2, [sp, #12]
 247:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 483              		.loc 1 247 3 is_stmt 1 view .LVU118
 247:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 484              		.loc 1 247 24 is_stmt 0 view .LVU119
 485 0070 0592     		str	r2, [sp, #20]
 248:Core/Src/main.c ****   {
 486              		.loc 1 248 3 is_stmt 1 view .LVU120
 248:Core/Src/main.c ****   {
 487              		.loc 1 248 7 is_stmt 0 view .LVU121
 488 0072 01A9     		add	r1, sp, #4
 489 0074 0948     		ldr	r0, .L42
 490 0076 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 491              	.LVL24:
 248:Core/Src/main.c ****   {
 492              		.loc 1 248 6 view .LVU122
 493 007a 68B9     		cbnz	r0, .L41
 255:Core/Src/main.c **** 
 494              		.loc 1 255 3 is_stmt 1 view .LVU123
 495 007c 0748     		ldr	r0, .L42
 496 007e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 497              	.LVL25:
 257:Core/Src/main.c **** 
 498              		.loc 1 257 1 is_stmt 0 view .LVU124
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 21


 499 0082 0FB0     		add	sp, sp, #60
 500              	.LCFI7:
 501              		.cfi_remember_state
 502              		.cfi_def_cfa_offset 4
 503              		@ sp needed
 504 0084 5DF804FB 		ldr	pc, [sp], #4
 505              	.L37:
 506              	.LCFI8:
 507              		.cfi_restore_state
 227:Core/Src/main.c ****   }
 508              		.loc 1 227 5 is_stmt 1 view .LVU125
 509 0088 FFF7FEFF 		bl	Error_Handler
 510              	.LVL26:
 511              	.L38:
 232:Core/Src/main.c ****   }
 512              		.loc 1 232 5 view .LVU126
 513 008c FFF7FEFF 		bl	Error_Handler
 514              	.LVL27:
 515              	.L39:
 236:Core/Src/main.c ****   }
 516              		.loc 1 236 5 view .LVU127
 517 0090 FFF7FEFF 		bl	Error_Handler
 518              	.LVL28:
 519              	.L40:
 242:Core/Src/main.c ****   }
 520              		.loc 1 242 5 view .LVU128
 521 0094 FFF7FEFF 		bl	Error_Handler
 522              	.LVL29:
 523              	.L41:
 250:Core/Src/main.c ****   }
 524              		.loc 1 250 5 view .LVU129
 525 0098 FFF7FEFF 		bl	Error_Handler
 526              	.LVL30:
 527              	.L43:
 528              		.align	2
 529              	.L42:
 530 009c 00000000 		.word	htim2
 531              		.cfi_endproc
 532              	.LFE71:
 534              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 535              		.align	1
 536              		.syntax unified
 537              		.thumb
 538              		.thumb_func
 539              		.fpu softvfp
 541              	MX_USART1_UART_Init:
 542              	.LFB72:
 265:Core/Src/main.c **** 
 543              		.loc 1 265 1 view -0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547 0000 08B5     		push	{r3, lr}
 548              	.LCFI9:
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 3, -8
 551              		.cfi_offset 14, -4
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 22


 274:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 552              		.loc 1 274 3 view .LVU131
 274:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 553              		.loc 1 274 19 is_stmt 0 view .LVU132
 554 0002 0C48     		ldr	r0, .L48
 555 0004 0C4B     		ldr	r3, .L48+4
 556 0006 0360     		str	r3, [r0]
 275:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_9B;
 557              		.loc 1 275 3 is_stmt 1 view .LVU133
 275:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_9B;
 558              		.loc 1 275 24 is_stmt 0 view .LVU134
 559 0008 4FF41653 		mov	r3, #9600
 560 000c 4360     		str	r3, [r0, #4]
 276:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 561              		.loc 1 276 3 is_stmt 1 view .LVU135
 276:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 562              		.loc 1 276 26 is_stmt 0 view .LVU136
 563 000e 4FF48053 		mov	r3, #4096
 564 0012 8360     		str	r3, [r0, #8]
 277:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_EVEN;
 565              		.loc 1 277 3 is_stmt 1 view .LVU137
 277:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_EVEN;
 566              		.loc 1 277 24 is_stmt 0 view .LVU138
 567 0014 0023     		movs	r3, #0
 568 0016 C360     		str	r3, [r0, #12]
 278:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 569              		.loc 1 278 3 is_stmt 1 view .LVU139
 278:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 570              		.loc 1 278 22 is_stmt 0 view .LVU140
 571 0018 4FF48062 		mov	r2, #1024
 572 001c 0261     		str	r2, [r0, #16]
 279:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 573              		.loc 1 279 3 is_stmt 1 view .LVU141
 279:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 574              		.loc 1 279 20 is_stmt 0 view .LVU142
 575 001e 0C22     		movs	r2, #12
 576 0020 4261     		str	r2, [r0, #20]
 280:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 577              		.loc 1 280 3 is_stmt 1 view .LVU143
 280:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 578              		.loc 1 280 25 is_stmt 0 view .LVU144
 579 0022 8361     		str	r3, [r0, #24]
 281:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 580              		.loc 1 281 3 is_stmt 1 view .LVU145
 281:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 581              		.loc 1 281 28 is_stmt 0 view .LVU146
 582 0024 C361     		str	r3, [r0, #28]
 282:Core/Src/main.c ****   {
 583              		.loc 1 282 3 is_stmt 1 view .LVU147
 282:Core/Src/main.c ****   {
 584              		.loc 1 282 7 is_stmt 0 view .LVU148
 585 0026 FFF7FEFF 		bl	HAL_UART_Init
 586              	.LVL31:
 282:Core/Src/main.c ****   {
 587              		.loc 1 282 6 view .LVU149
 588 002a 00B9     		cbnz	r0, .L47
 290:Core/Src/main.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 23


 589              		.loc 1 290 1 view .LVU150
 590 002c 08BD     		pop	{r3, pc}
 591              	.L47:
 284:Core/Src/main.c ****   }
 592              		.loc 1 284 5 is_stmt 1 view .LVU151
 593 002e FFF7FEFF 		bl	Error_Handler
 594              	.LVL32:
 595              	.L49:
 596 0032 00BF     		.align	2
 597              	.L48:
 598 0034 00000000 		.word	huart1
 599 0038 00380140 		.word	1073821696
 600              		.cfi_endproc
 601              	.LFE72:
 603              		.section	.text.SystemClock_Config,"ax",%progbits
 604              		.align	1
 605              		.global	SystemClock_Config
 606              		.syntax unified
 607              		.thumb
 608              		.thumb_func
 609              		.fpu softvfp
 611              	SystemClock_Config:
 612              	.LFB70:
 171:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 613              		.loc 1 171 1 view -0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 64
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617 0000 00B5     		push	{lr}
 618              	.LCFI10:
 619              		.cfi_def_cfa_offset 4
 620              		.cfi_offset 14, -4
 621 0002 91B0     		sub	sp, sp, #68
 622              	.LCFI11:
 623              		.cfi_def_cfa_offset 72
 172:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 624              		.loc 1 172 3 view .LVU153
 172:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 625              		.loc 1 172 22 is_stmt 0 view .LVU154
 626 0004 2022     		movs	r2, #32
 627 0006 0021     		movs	r1, #0
 628 0008 0DEB0200 		add	r0, sp, r2
 629 000c FFF7FEFF 		bl	memset
 630              	.LVL33:
 173:Core/Src/main.c **** 
 631              		.loc 1 173 3 is_stmt 1 view .LVU155
 173:Core/Src/main.c **** 
 632              		.loc 1 173 22 is_stmt 0 view .LVU156
 633 0010 0023     		movs	r3, #0
 634 0012 0193     		str	r3, [sp, #4]
 635 0014 0293     		str	r3, [sp, #8]
 636 0016 0393     		str	r3, [sp, #12]
 637 0018 0493     		str	r3, [sp, #16]
 638 001a 0593     		str	r3, [sp, #20]
 178:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 639              		.loc 1 178 3 is_stmt 1 view .LVU157
 178:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 24


 640              		.loc 1 178 36 is_stmt 0 view .LVU158
 641 001c 0123     		movs	r3, #1
 642 001e 0693     		str	r3, [sp, #24]
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 643              		.loc 1 179 3 is_stmt 1 view .LVU159
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 644              		.loc 1 179 30 is_stmt 0 view .LVU160
 645 0020 4FF48033 		mov	r3, #65536
 646 0024 0793     		str	r3, [sp, #28]
 180:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 647              		.loc 1 180 3 is_stmt 1 view .LVU161
 181:Core/Src/main.c ****   {
 648              		.loc 1 181 3 view .LVU162
 181:Core/Src/main.c ****   {
 649              		.loc 1 181 7 is_stmt 0 view .LVU163
 650 0026 06A8     		add	r0, sp, #24
 651 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 652              	.LVL34:
 181:Core/Src/main.c ****   {
 653              		.loc 1 181 6 view .LVU164
 654 002c 70B9     		cbnz	r0, .L54
 187:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 655              		.loc 1 187 3 is_stmt 1 view .LVU165
 187:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 656              		.loc 1 187 31 is_stmt 0 view .LVU166
 657 002e 0F23     		movs	r3, #15
 658 0030 0193     		str	r3, [sp, #4]
 189:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 659              		.loc 1 189 3 is_stmt 1 view .LVU167
 189:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 660              		.loc 1 189 34 is_stmt 0 view .LVU168
 661 0032 0123     		movs	r3, #1
 662 0034 0293     		str	r3, [sp, #8]
 190:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 663              		.loc 1 190 3 is_stmt 1 view .LVU169
 190:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 664              		.loc 1 190 35 is_stmt 0 view .LVU170
 665 0036 0021     		movs	r1, #0
 666 0038 0391     		str	r1, [sp, #12]
 191:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 667              		.loc 1 191 3 is_stmt 1 view .LVU171
 191:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 668              		.loc 1 191 36 is_stmt 0 view .LVU172
 669 003a 0491     		str	r1, [sp, #16]
 192:Core/Src/main.c **** 
 670              		.loc 1 192 3 is_stmt 1 view .LVU173
 192:Core/Src/main.c **** 
 671              		.loc 1 192 36 is_stmt 0 view .LVU174
 672 003c 0591     		str	r1, [sp, #20]
 194:Core/Src/main.c ****   {
 673              		.loc 1 194 3 is_stmt 1 view .LVU175
 194:Core/Src/main.c ****   {
 674              		.loc 1 194 7 is_stmt 0 view .LVU176
 675 003e 01A8     		add	r0, sp, #4
 676 0040 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 677              	.LVL35:
 194:Core/Src/main.c ****   {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 25


 678              		.loc 1 194 6 view .LVU177
 679 0044 20B9     		cbnz	r0, .L55
 198:Core/Src/main.c **** 
 680              		.loc 1 198 1 view .LVU178
 681 0046 11B0     		add	sp, sp, #68
 682              	.LCFI12:
 683              		.cfi_remember_state
 684              		.cfi_def_cfa_offset 4
 685              		@ sp needed
 686 0048 5DF804FB 		ldr	pc, [sp], #4
 687              	.L54:
 688              	.LCFI13:
 689              		.cfi_restore_state
 183:Core/Src/main.c ****   }
 690              		.loc 1 183 5 is_stmt 1 view .LVU179
 691 004c FFF7FEFF 		bl	Error_Handler
 692              	.LVL36:
 693              	.L55:
 196:Core/Src/main.c ****   }
 694              		.loc 1 196 5 view .LVU180
 695 0050 FFF7FEFF 		bl	Error_Handler
 696              	.LVL37:
 697              		.cfi_endproc
 698              	.LFE70:
 700              		.section	.text.main,"ax",%progbits
 701              		.align	1
 702              		.global	main
 703              		.syntax unified
 704              		.thumb
 705              		.thumb_func
 706              		.fpu softvfp
 708              	main:
 709              	.LFB69:
  88:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 710              		.loc 1 88 1 view -0
 711              		.cfi_startproc
 712              		@ Volatile: function does not return.
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 715 0000 08B5     		push	{r3, lr}
 716              	.LCFI14:
 717              		.cfi_def_cfa_offset 8
 718              		.cfi_offset 3, -8
 719              		.cfi_offset 14, -4
  96:Core/Src/main.c **** 
 720              		.loc 1 96 3 view .LVU182
 721 0002 FFF7FEFF 		bl	HAL_Init
 722              	.LVL38:
 103:Core/Src/main.c **** 
 723              		.loc 1 103 3 view .LVU183
 724 0006 FFF7FEFF 		bl	SystemClock_Config
 725              	.LVL39:
 110:Core/Src/main.c ****   MX_TIM2_Init();
 726              		.loc 1 110 3 view .LVU184
 727 000a FFF7FEFF 		bl	MX_GPIO_Init
 728              	.LVL40:
 111:Core/Src/main.c ****   MX_USART1_UART_Init();
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 26


 729              		.loc 1 111 3 view .LVU185
 730 000e FFF7FEFF 		bl	MX_TIM2_Init
 731              	.LVL41:
 112:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 732              		.loc 1 112 3 view .LVU186
 733 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 734              	.LVL42:
 114:Core/Src/main.c ****   /* USER CODE END 2 */
 735              		.loc 1 114 3 view .LVU187
 736 0016 0021     		movs	r1, #0
 737 0018 0A48     		ldr	r0, .L59
 738 001a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 739              	.LVL43:
 118:Core/Src/main.c **** 
 740              		.loc 1 118 3 view .LVU188
 741 001e FFF7FEFF 		bl	osKernelInitialize
 742              	.LVL44:
 138:Core/Src/main.c **** 
 743              		.loc 1 138 3 view .LVU189
 138:Core/Src/main.c **** 
 744              		.loc 1 138 20 is_stmt 0 view .LVU190
 745 0022 094A     		ldr	r2, .L59+4
 746 0024 0021     		movs	r1, #0
 747 0026 0948     		ldr	r0, .L59+8
 748 0028 FFF7FEFF 		bl	osThreadNew
 749              	.LVL45:
 138:Core/Src/main.c **** 
 750              		.loc 1 138 18 view .LVU191
 751 002c 084B     		ldr	r3, .L59+12
 752 002e 1860     		str	r0, [r3]
 141:Core/Src/main.c **** 
 753              		.loc 1 141 3 is_stmt 1 view .LVU192
 141:Core/Src/main.c **** 
 754              		.loc 1 141 19 is_stmt 0 view .LVU193
 755 0030 084A     		ldr	r2, .L59+16
 756 0032 0021     		movs	r1, #0
 757 0034 0848     		ldr	r0, .L59+20
 758 0036 FFF7FEFF 		bl	osThreadNew
 759              	.LVL46:
 141:Core/Src/main.c **** 
 760              		.loc 1 141 17 view .LVU194
 761 003a 084B     		ldr	r3, .L59+24
 762 003c 1860     		str	r0, [r3]
 152:Core/Src/main.c **** 
 763              		.loc 1 152 3 is_stmt 1 view .LVU195
 764 003e FFF7FEFF 		bl	osKernelStart
 765              	.LVL47:
 766              	.L57:
 157:Core/Src/main.c ****   {
 767              		.loc 1 157 3 discriminator 1 view .LVU196
 162:Core/Src/main.c ****   /* USER CODE END 3 */
 768              		.loc 1 162 3 discriminator 1 view .LVU197
 769 0042 FEE7     		b	.L57
 770              	.L60:
 771              		.align	2
 772              	.L59:
 773 0044 00000000 		.word	htim2
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 27


 774 0048 00000000 		.word	.LANCHOR0
 775 004c 00000000 		.word	StartReadUART
 776 0050 00000000 		.word	readUARTHandle
 777 0054 00000000 		.word	.LANCHOR1
 778 0058 00000000 		.word	StartServo01
 779 005c 00000000 		.word	Servo01Handle
 780              		.cfi_endproc
 781              	.LFE69:
 783              		.global	Servo01_attributes
 784              		.comm	Servo01Handle,4,4
 785              		.global	readUART_attributes
 786              		.comm	readUARTHandle,4,4
 787              		.comm	huart1,68,4
 788              		.comm	htim2,72,4
 789              		.section	.rodata.Servo01_attributes,"a"
 790              		.align	2
 791              		.set	.LANCHOR1,. + 0
 794              	Servo01_attributes:
 795 0000 00000000 		.word	.LC1
 796 0004 00000000 		.space	16
 796      00000000 
 796      00000000 
 796      00000000 
 797 0014 00020000 		.word	512
 798 0018 08000000 		.word	8
 799 001c 00000000 		.space	8
 799      00000000 
 800              		.section	.rodata.StartReadUART.str1.4,"aMS",%progbits,1
 801              		.align	2
 802              	.LC0:
 803 0000 53657420 		.ascii	"Set servo to: %d \012\015\000"
 803      73657276 
 803      6F20746F 
 803      3A202564 
 803      200A0D00 
 804              		.section	.rodata.readUART_attributes,"a"
 805              		.align	2
 806              		.set	.LANCHOR0,. + 0
 809              	readUART_attributes:
 810 0000 08000000 		.word	.LC2
 811 0004 00000000 		.space	16
 811      00000000 
 811      00000000 
 811      00000000 
 812 0014 00020000 		.word	512
 813 0018 18000000 		.word	24
 814 001c 00000000 		.space	8
 814      00000000 
 815              		.section	.rodata.str1.4,"aMS",%progbits,1
 816              		.align	2
 817              	.LC1:
 818 0000 53657276 		.ascii	"Servo01\000"
 818      6F303100 
 819              	.LC2:
 820 0008 72656164 		.ascii	"readUART\000"
 820      55415254 
 820      00
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 28


 821              		.text
 822              	.Letext0:
 823              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 824              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 825              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 826              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 827              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 828              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 829              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 830              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 831              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 832              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 833              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 834              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 835              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 836              		.file 16 "<built-in>"
 837              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 838              		.file 18 "Core/Inc/main.h"
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 29


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:16     .text.MX_GPIO_Init:00000000 $t
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:72     .text.MX_GPIO_Init:0000002c $d
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:77     .text.StartServo01:00000000 $t
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:84     .text.StartServo01:00000000 StartServo01
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:101    .text.StartReadUART:00000000 $t
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:108    .text.StartReadUART:00000000 StartReadUART
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:278    .text.StartReadUART:000000c0 $d
                            *COM*:00000044 huart1
                            *COM*:00000048 htim2
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:287    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:294    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:328    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:333    .text.Error_Handler:00000000 $t
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:340    .text.Error_Handler:00000000 Error_Handler
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:371    .text.MX_TIM2_Init:00000000 $t
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:377    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:530    .text.MX_TIM2_Init:0000009c $d
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:535    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:541    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:598    .text.MX_USART1_UART_Init:00000034 $d
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:604    .text.SystemClock_Config:00000000 $t
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:611    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:701    .text.main:00000000 $t
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:708    .text.main:00000000 main
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:773    .text.main:00000044 $d
                            *COM*:00000004 readUARTHandle
                            *COM*:00000004 Servo01Handle
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:794    .rodata.Servo01_attributes:00000000 Servo01_attributes
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:809    .rodata.readUART_attributes:00000000 readUART_attributes
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:790    .rodata.Servo01_attributes:00000000 $d
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:801    .rodata.StartReadUART.str1.4:00000000 $d
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:805    .rodata.readUART_attributes:00000000 $d
C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s:816    .rodata.str1.4:00000000 $d

UNDEFINED SYMBOLS
atoi
HAL_UART_Receive
sprintf
strlen
HAL_UART_Transmit
osDelay
HAL_IncTick
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_PWM_Start
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWIm0Xl.s 			page 30


osKernelInitialize
osThreadNew
osKernelStart
