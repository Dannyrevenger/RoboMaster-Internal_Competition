ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB76:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                             www.st.com/SLA0044
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "cmsis_os.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** #include <stdio.h>
  27:Core/Src/main.c **** #include <stdlib.h>
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** UART_HandleTypeDef huart1;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Definitions for readUART_Servo */
  50:Core/Src/main.c **** osThreadId_t readUART_ServoHandle;
  51:Core/Src/main.c **** const osThreadAttr_t readUART_Servo_attributes = {
  52:Core/Src/main.c ****   .name = "readUART_Servo",
  53:Core/Src/main.c ****   .stack_size = 128 * 4,
  54:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityNormal,
  55:Core/Src/main.c **** };
  56:Core/Src/main.c **** /* Definitions for Servo01 */
  57:Core/Src/main.c **** osThreadId_t Servo01Handle;
  58:Core/Src/main.c **** const osThreadAttr_t Servo01_attributes = {
  59:Core/Src/main.c ****   .name = "Servo01",
  60:Core/Src/main.c ****   .stack_size = 128 * 4,
  61:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityNormal,
  62:Core/Src/main.c **** };
  63:Core/Src/main.c **** /* USER CODE BEGIN PV */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END PV */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  68:Core/Src/main.c **** void SystemClock_Config(void);
  69:Core/Src/main.c **** static void MX_GPIO_Init(void);
  70:Core/Src/main.c **** static void MX_TIM2_Init(void);
  71:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  72:Core/Src/main.c **** void StartReadUART_Servo(void *argument);
  73:Core/Src/main.c **** void StartServo01(void *argument);
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* USER CODE END PFP */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  80:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  81:Core/Src/main.c **** float current_pos0 = 750;
  82:Core/Src/main.c **** float current_pos1 = 750;
  83:Core/Src/main.c **** float current_pos2 = 750;
  84:Core/Src/main.c **** float current_pos3 = 750;
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** /* USER CODE END 0 */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /**
  89:Core/Src/main.c ****   * @brief  The application entry point.
  90:Core/Src/main.c ****   * @retval int
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 3


  91:Core/Src/main.c ****   */
  92:Core/Src/main.c **** int main(void)
  93:Core/Src/main.c **** {
  94:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE END 1 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 101:Core/Src/main.c ****   HAL_Init();
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE END Init */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* Configure the system clock */
 108:Core/Src/main.c ****   SystemClock_Config();
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE END SysInit */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* Initialize all configured peripherals */
 115:Core/Src/main.c ****   MX_GPIO_Init();
 116:Core/Src/main.c ****   MX_TIM2_Init();
 117:Core/Src/main.c ****   MX_USART1_UART_Init();
 118:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 119:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 120:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 121:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3);
 122:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_4);
 123:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_1, (uint16_t )current_pos0); //go to initial position
 124:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_2, (uint16_t )current_pos1); //go to initial position
 125:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_3, (uint16_t )current_pos2); //go to initial position
 126:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_4, (uint16_t )current_pos3); //go to initial position
 127:Core/Src/main.c ****   /* USER CODE END 2 */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* Init scheduler */
 130:Core/Src/main.c ****   osKernelInitialize();
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 133:Core/Src/main.c ****   /* add mutexes, ... */
 134:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 137:Core/Src/main.c ****   /* add semaphores, ... */
 138:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 141:Core/Src/main.c ****   /* start timers, add new ones, ... */
 142:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 145:Core/Src/main.c ****   /* add queues, ... */
 146:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 147:Core/Src/main.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 4


 148:Core/Src/main.c ****   /* Create the thread(s) */
 149:Core/Src/main.c ****   /* creation of readUART_Servo */
 150:Core/Src/main.c ****   readUART_ServoHandle = osThreadNew(StartReadUART_Servo, NULL, &readUART_Servo_attributes);
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /* creation of Servo01 */
 153:Core/Src/main.c ****   Servo01Handle = osThreadNew(StartServo01, NULL, &Servo01_attributes);
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 156:Core/Src/main.c ****   /* add threads, ... */
 157:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 160:Core/Src/main.c ****   /* add events, ... */
 161:Core/Src/main.c ****   /* USER CODE END RTOS_EVENTS */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /* Start scheduler */
 164:Core/Src/main.c ****   osKernelStart();
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 167:Core/Src/main.c ****   /* Infinite loop */
 168:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 169:Core/Src/main.c ****   while (1)
 170:Core/Src/main.c ****   {
 171:Core/Src/main.c ****     /* USER CODE END WHILE */
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 174:Core/Src/main.c ****   }
 175:Core/Src/main.c ****   /* USER CODE END 3 */
 176:Core/Src/main.c **** }
 177:Core/Src/main.c **** 
 178:Core/Src/main.c **** /**
 179:Core/Src/main.c ****   * @brief System Clock Configuration
 180:Core/Src/main.c ****   * @retval None
 181:Core/Src/main.c ****   */
 182:Core/Src/main.c **** void SystemClock_Config(void)
 183:Core/Src/main.c **** {
 184:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 185:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 188:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 189:Core/Src/main.c ****   */
 190:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 191:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 193:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 194:Core/Src/main.c ****   {
 195:Core/Src/main.c ****     Error_Handler();
 196:Core/Src/main.c ****   }
 197:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 198:Core/Src/main.c ****   */
 199:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 200:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 201:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;
 202:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 203:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 204:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 5


 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 207:Core/Src/main.c ****   {
 208:Core/Src/main.c ****     Error_Handler();
 209:Core/Src/main.c ****   }
 210:Core/Src/main.c **** }
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** /**
 213:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 214:Core/Src/main.c ****   * @param None
 215:Core/Src/main.c ****   * @retval None
 216:Core/Src/main.c ****   */
 217:Core/Src/main.c **** static void MX_TIM2_Init(void)
 218:Core/Src/main.c **** {
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 225:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 226:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 231:Core/Src/main.c ****   htim2.Instance = TIM2;
 232:Core/Src/main.c ****   htim2.Init.Prescaler = 15;
 233:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 234:Core/Src/main.c ****   htim2.Init.Period = 9999;
 235:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 236:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 237:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 238:Core/Src/main.c ****   {
 239:Core/Src/main.c ****     Error_Handler();
 240:Core/Src/main.c ****   }
 241:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 242:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 243:Core/Src/main.c ****   {
 244:Core/Src/main.c ****     Error_Handler();
 245:Core/Src/main.c ****   }
 246:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 247:Core/Src/main.c ****   {
 248:Core/Src/main.c ****     Error_Handler();
 249:Core/Src/main.c ****   }
 250:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 251:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 252:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 253:Core/Src/main.c ****   {
 254:Core/Src/main.c ****     Error_Handler();
 255:Core/Src/main.c ****   }
 256:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 257:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 258:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 259:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 260:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 261:Core/Src/main.c ****   {
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 6


 262:Core/Src/main.c ****     Error_Handler();
 263:Core/Src/main.c ****   }
 264:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 265:Core/Src/main.c ****   {
 266:Core/Src/main.c ****     Error_Handler();
 267:Core/Src/main.c ****   }
 268:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 269:Core/Src/main.c ****   {
 270:Core/Src/main.c ****     Error_Handler();
 271:Core/Src/main.c ****   }
 272:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 273:Core/Src/main.c ****   {
 274:Core/Src/main.c ****     Error_Handler();
 275:Core/Src/main.c ****   }
 276:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 279:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim2);
 280:Core/Src/main.c **** 
 281:Core/Src/main.c **** }
 282:Core/Src/main.c **** 
 283:Core/Src/main.c **** /**
 284:Core/Src/main.c ****   * @brief USART1 Initialization Function
 285:Core/Src/main.c ****   * @param None
 286:Core/Src/main.c ****   * @retval None
 287:Core/Src/main.c ****   */
 288:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 289:Core/Src/main.c **** {
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 298:Core/Src/main.c ****   huart1.Instance = USART1;
 299:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 300:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_9B;
 301:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 302:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_EVEN;
 303:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 304:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 305:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 306:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 307:Core/Src/main.c ****   {
 308:Core/Src/main.c ****     Error_Handler();
 309:Core/Src/main.c ****   }
 310:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 313:Core/Src/main.c **** 
 314:Core/Src/main.c **** }
 315:Core/Src/main.c **** 
 316:Core/Src/main.c **** /**
 317:Core/Src/main.c ****   * @brief GPIO Initialization Function
 318:Core/Src/main.c ****   * @param None
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 7


 319:Core/Src/main.c ****   * @retval None
 320:Core/Src/main.c ****   */
 321:Core/Src/main.c **** static void MX_GPIO_Init(void)
 322:Core/Src/main.c **** {
  26              		.loc 1 322 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 325:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  34              		.loc 1 325 3 view .LVU1
  35              	.LBB4:
  36              		.loc 1 325 3 view .LVU2
  37              		.loc 1 325 3 view .LVU3
  38 0002 0A4B     		ldr	r3, .L3
  39 0004 9A69     		ldr	r2, [r3, #24]
  40 0006 42F02002 		orr	r2, r2, #32
  41 000a 9A61     		str	r2, [r3, #24]
  42              		.loc 1 325 3 view .LVU4
  43 000c 9A69     		ldr	r2, [r3, #24]
  44 000e 02F02002 		and	r2, r2, #32
  45 0012 0092     		str	r2, [sp]
  46              		.loc 1 325 3 view .LVU5
  47 0014 009A     		ldr	r2, [sp]
  48              	.LBE4:
 326:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  49              		.loc 1 326 3 view .LVU6
  50              	.LBB5:
  51              		.loc 1 326 3 view .LVU7
  52              		.loc 1 326 3 view .LVU8
  53 0016 9A69     		ldr	r2, [r3, #24]
  54 0018 42F00402 		orr	r2, r2, #4
  55 001c 9A61     		str	r2, [r3, #24]
  56              		.loc 1 326 3 view .LVU9
  57 001e 9B69     		ldr	r3, [r3, #24]
  58 0020 03F00403 		and	r3, r3, #4
  59 0024 0193     		str	r3, [sp, #4]
  60              		.loc 1 326 3 view .LVU10
  61 0026 019B     		ldr	r3, [sp, #4]
  62              	.LBE5:
 327:Core/Src/main.c **** 
 328:Core/Src/main.c **** }
  63              		.loc 1 328 1 is_stmt 0 view .LVU11
  64 0028 02B0     		add	sp, sp, #8
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 0
  67              		@ sp needed
  68 002a 7047     		bx	lr
  69              	.L4:
  70              		.align	2
  71              	.L3:
  72 002c 00100240 		.word	1073876992
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 8


  73              		.cfi_endproc
  74              	.LFE76:
  76              		.section	.text.StartReadUART_Servo,"ax",%progbits
  77              		.align	1
  78              		.global	StartReadUART_Servo
  79              		.syntax unified
  80              		.thumb
  81              		.thumb_func
  82              		.fpu softvfp
  84              	StartReadUART_Servo:
  85              	.LFB77:
 329:Core/Src/main.c **** 
 330:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 331:Core/Src/main.c **** 
 332:Core/Src/main.c **** /* USER CODE END 4 */
 333:Core/Src/main.c **** 
 334:Core/Src/main.c **** /* USER CODE BEGIN Header_StartReadUART_Servo */
 335:Core/Src/main.c **** /**
 336:Core/Src/main.c ****   * @brief  Function implementing the readUART_Servo thread.
 337:Core/Src/main.c ****   * @param  argument: Not used
 338:Core/Src/main.c ****   * @retval None
 339:Core/Src/main.c ****   */
 340:Core/Src/main.c **** /* USER CODE END Header_StartReadUART_Servo */
 341:Core/Src/main.c **** void StartReadUART_Servo(void *argument)
 342:Core/Src/main.c **** {
  86              		.loc 1 342 1 is_stmt 1 view -0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 24
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              	.LVL0:
  91              		.loc 1 342 1 is_stmt 0 view .LVU13
  92 0000 30B5     		push	{r4, r5, lr}
  93              	.LCFI2:
  94              		.cfi_def_cfa_offset 12
  95              		.cfi_offset 4, -12
  96              		.cfi_offset 5, -8
  97              		.cfi_offset 14, -4
  98 0002 87B0     		sub	sp, sp, #28
  99              	.LCFI3:
 100              		.cfi_def_cfa_offset 40
 101 0004 37E0     		b	.L14
 102              	.LVL1:
 103              	.L22:
 104              	.LBB6:
 105              	.LBB7:
 343:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 344:Core/Src/main.c ****   /* Infinite loop */
 345:Core/Src/main.c ****   for(;;)
 346:Core/Src/main.c ****   {
 347:Core/Src/main.c ****     char buffer[8];
 348:Core/Src/main.c ****     char msg[50];
 349:Core/Src/main.c ****     uint8_t arr[9] = {0};
 350:Core/Src/main.c ****     uint16_t i = 0;
 351:Core/Src/main.c ****     uint8_t joint = 0;
 352:Core/Src/main.c ****     uint16_t goal_pos0 = 0, goal_pos1 = 0, goal_pos2 = 0, goal_pos3 = 0, goal_pos = 0;
 353:Core/Src/main.c ****     if (HAL_UART_Receive(&huart1, buffer, 1, 1000) == HAL_OK && buffer[0] == '!') //only read if se
 354:Core/Src/main.c ****     {
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 9


 355:Core/Src/main.c ****       while (buffer[0] != '#') //loop till encounter the end char "#"
 356:Core/Src/main.c ****       {
 357:Core/Src/main.c ****         HAL_UART_Receive(&huart1, buffer, 1, 1000);
 358:Core/Src/main.c ****         // if (buffer[0] == ':') //save all char before ":" in goal_pos
 359:Core/Src/main.c ****         // {
 360:Core/Src/main.c ****         //   if (joint == 0){
 361:Core/Src/main.c ****         //     joint++;
 362:Core/Src/main.c ****         //     i = 0;
 363:Core/Src/main.c ****         //     goal_pos0 = atoi(arr);
 364:Core/Src/main.c ****         //     memset(&arr[0], 0, sizeof(arr)); //clear arr array
 365:Core/Src/main.c ****         //     continue;
 366:Core/Src/main.c ****         //   }
 367:Core/Src/main.c ****         // }
 368:Core/Src/main.c ****         if (buffer[0] == '#') //add all char before "#" to goal_pos
 369:Core/Src/main.c ****         {
 370:Core/Src/main.c ****           goal_pos = atoi(arr);
 106              		.loc 1 370 11 is_stmt 1 view .LVU14
 107              		.loc 1 370 22 is_stmt 0 view .LVU15
 108 0006 03A8     		add	r0, sp, #12
 109 0008 FFF7FEFF 		bl	atoi
 110              	.LVL2:
 111              		.loc 1 370 20 view .LVU16
 112 000c 85B2     		uxth	r5, r0
 113              	.LVL3:
 371:Core/Src/main.c ****           memset(&arr[0], 0, sizeof(arr)); //clear arr array
 114              		.loc 1 371 11 is_stmt 1 view .LVU17
 115 000e 0023     		movs	r3, #0
 116 0010 0393     		str	r3, [sp, #12]
 117 0012 0493     		str	r3, [sp, #16]
 118 0014 8DF81430 		strb	r3, [sp, #20]
 119              	.L8:
 120              		.loc 1 371 11 is_stmt 0 view .LVU18
 121              	.LBE7:
 372:Core/Src/main.c ****         }
 373:Core/Src/main.c ****         arr[i] = buffer[0]; //add buffer char to array
 122              		.loc 1 373 9 is_stmt 1 view .LVU19
 123              		.loc 1 373 24 is_stmt 0 view .LVU20
 124 0018 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 125              		.loc 1 373 16 view .LVU21
 126 001c 06AB     		add	r3, sp, #24
 127 001e 2344     		add	r3, r3, r4
 128 0020 03F80C2C 		strb	r2, [r3, #-12]
 374:Core/Src/main.c ****         i++;
 129              		.loc 1 374 9 is_stmt 1 view .LVU22
 130              		.loc 1 374 10 is_stmt 0 view .LVU23
 131 0024 0134     		adds	r4, r4, #1
 132              	.LVL4:
 133              		.loc 1 374 10 view .LVU24
 134 0026 A4B2     		uxth	r4, r4
 135              	.LVL5:
 136              	.L7:
 355:Core/Src/main.c ****       {
 137              		.loc 1 355 20 view .LVU25
 138 0028 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 355:Core/Src/main.c ****       {
 139              		.loc 1 355 13 view .LVU26
 140 002c 232B     		cmp	r3, #35
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 10


 141 002e 0BD0     		beq	.L21
 357:Core/Src/main.c ****         // if (buffer[0] == ':') //save all char before ":" in goal_pos
 142              		.loc 1 357 9 is_stmt 1 view .LVU27
 143 0030 4FF47A73 		mov	r3, #1000
 144 0034 0122     		movs	r2, #1
 145 0036 01A9     		add	r1, sp, #4
 146 0038 2548     		ldr	r0, .L24
 147 003a FFF7FEFF 		bl	HAL_UART_Receive
 148              	.LVL6:
 368:Core/Src/main.c ****         {
 149              		.loc 1 368 9 view .LVU28
 368:Core/Src/main.c ****         {
 150              		.loc 1 368 19 is_stmt 0 view .LVU29
 151 003e 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 368:Core/Src/main.c ****         {
 152              		.loc 1 368 12 view .LVU30
 153 0042 232B     		cmp	r3, #35
 154 0044 E8D1     		bne	.L8
 155 0046 DEE7     		b	.L22
 156              	.L21:
 375:Core/Src/main.c ****       }
 376:Core/Src/main.c ****       
 377:Core/Src/main.c ****       // keep pwm values between 250 and 1250
 378:Core/Src/main.c ****       // if(goal_pos0>1250){
 379:Core/Src/main.c ****       //   goal_pos0 = 1250;
 380:Core/Src/main.c ****       // }
 381:Core/Src/main.c ****       // else if(goal_pos0<250){
 382:Core/Src/main.c ****       //   goal_pos0 = 250;
 383:Core/Src/main.c ****       // }
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****       // if(goal_pos1>1250){
 386:Core/Src/main.c ****       //   goal_pos1 = 1250;
 387:Core/Src/main.c ****       // }
 388:Core/Src/main.c ****       // else if(goal_pos1<250){
 389:Core/Src/main.c ****       //   goal_pos1 = 250;
 390:Core/Src/main.c ****       // }
 391:Core/Src/main.c ****       // if(goal_pos2>1250){
 392:Core/Src/main.c ****       //   goal_pos2 = 1250;
 393:Core/Src/main.c ****       // }
 394:Core/Src/main.c ****       // else if(goal_pos2<250){
 395:Core/Src/main.c ****       //   goal_pos2 = 250;
 396:Core/Src/main.c ****       // }
 397:Core/Src/main.c ****       // if(goal_pos3>1250){
 398:Core/Src/main.c ****       //   goal_pos3 = 1250;
 399:Core/Src/main.c ****       // }
 400:Core/Src/main.c ****       // else if(goal_pos3<250){
 401:Core/Src/main.c ****       //   goal_pos3 = 250;
 402:Core/Src/main.c ****       // }
 403:Core/Src/main.c **** 
 404:Core/Src/main.c ****       if (goal_pos == 0){
 157              		.loc 1 404 7 is_stmt 1 view .LVU31
 158              		.loc 1 404 10 is_stmt 0 view .LVU32
 159 0048 55B3     		cbz	r5, .L16
 352:Core/Src/main.c ****     if (HAL_UART_Receive(&huart1, buffer, 1, 1000) == HAL_OK && buffer[0] == '!') //only read if se
 160              		.loc 1 352 59 view .LVU33
 161 004a 0021     		movs	r1, #0
 352:Core/Src/main.c ****     if (HAL_UART_Receive(&huart1, buffer, 1, 1000) == HAL_OK && buffer[0] == '!') //only read if se
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 11


 162              		.loc 1 352 14 view .LVU34
 163 004c 0A46     		mov	r2, r1
 164              	.L10:
 165              	.LVL7:
 405:Core/Src/main.c ****         goal_pos0 = 750;
 406:Core/Src/main.c ****         goal_pos1 = 750;
 407:Core/Src/main.c ****         goal_pos2 = 750;
 408:Core/Src/main.c ****         goal_pos3 = 650;
 409:Core/Src/main.c ****       }
 410:Core/Src/main.c ****       if (goal_pos == 1){
 166              		.loc 1 410 7 is_stmt 1 view .LVU35
 167              		.loc 1 410 10 is_stmt 0 view .LVU36
 168 004e 012D     		cmp	r5, #1
 169 0050 2BD0     		beq	.L23
 170              	.LVL8:
 171              	.L11:
 411:Core/Src/main.c ****         goal_pos0 = 750;
 412:Core/Src/main.c ****         goal_pos1 = 750;
 413:Core/Src/main.c ****         goal_pos2 = 750;
 414:Core/Src/main.c ****         goal_pos3 = 950;
 415:Core/Src/main.c ****       }
 416:Core/Src/main.c ****       if (goal_pos == 2){
 172              		.loc 1 416 7 is_stmt 1 view .LVU37
 173              		.loc 1 416 10 is_stmt 0 view .LVU38
 174 0052 022D     		cmp	r5, #2
 175 0054 2ED0     		beq	.L18
 176 0056 1046     		mov	r0, r2
 177              	.LVL9:
 178              	.L12:
 417:Core/Src/main.c ****         goal_pos0 = 250;
 418:Core/Src/main.c ****         goal_pos1 = 750;
 419:Core/Src/main.c ****         goal_pos2 = 750;
 420:Core/Src/main.c ****         goal_pos3 = 950;
 421:Core/Src/main.c ****       }
 422:Core/Src/main.c ****       if (goal_pos == 3){
 179              		.loc 1 422 7 is_stmt 1 view .LVU39
 180              		.loc 1 422 10 is_stmt 0 view .LVU40
 181 0058 032D     		cmp	r5, #3
 182 005a 31D0     		beq	.L19
 183 005c 0446     		mov	r4, r0
 184              	.LVL10:
 185              	.L13:
 423:Core/Src/main.c ****         goal_pos0 = 750;
 424:Core/Src/main.c ****         goal_pos1 = 550;
 425:Core/Src/main.c ****         goal_pos2 = 750;
 426:Core/Src/main.c ****         goal_pos3 = 950;
 427:Core/Src/main.c ****       }
 428:Core/Src/main.c ****       // sprintf(msg, "Set servo to: %f \n\r", goal_pos);
 429:Core/Src/main.c ****       // HAL_UART_Transmit(&huart1, msg, strlen(msg), 1000);
 430:Core/Src/main.c ****       // float servo0Smoothed;
 431:Core/Src/main.c ****       // float servo1Smoothed;
 432:Core/Src/main.c ****       // float servo2Smoothed;
 433:Core/Src/main.c ****       // float servo3Smoothed;
 434:Core/Src/main.c ****       
 435:Core/Src/main.c ****       //while(1){
 436:Core/Src/main.c ****         // servo0Smoothed = (goal_pos0 * 0.05) + (current_pos0 * 0.95);
 437:Core/Src/main.c ****         // servo1Smoothed = (goal_pos1 * 0.05) + (current_pos1 * 0.95);
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 12


 438:Core/Src/main.c ****         // servo2Smoothed = (goal_pos2 * 0.05) + (current_pos2 * 0.95);
 439:Core/Src/main.c ****         // servo3Smoothed = (goal_pos3 * 0.05) + (current_pos3 * 0.95);
 440:Core/Src/main.c ****         __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_1, (uint16_t )goal_pos0);
 186              		.loc 1 440 9 is_stmt 1 view .LVU41
 187 005e 1D4B     		ldr	r3, .L24+4
 188 0060 1B68     		ldr	r3, [r3]
 189 0062 5A63     		str	r2, [r3, #52]
 441:Core/Src/main.c ****         __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_2, (uint16_t )goal_pos1);
 190              		.loc 1 441 9 view .LVU42
 191 0064 9863     		str	r0, [r3, #56]
 442:Core/Src/main.c ****         __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_3, (uint16_t )goal_pos2);
 192              		.loc 1 442 9 view .LVU43
 193 0066 DC63     		str	r4, [r3, #60]
 443:Core/Src/main.c ****         __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_4, (uint16_t )goal_pos3);
 194              		.loc 1 443 9 view .LVU44
 195 0068 1964     		str	r1, [r3, #64]
 444:Core/Src/main.c ****         // sprintf(msg, "servo smoothed: %f \n\r", servo1Smoothed);
 445:Core/Src/main.c ****         // HAL_UART_Transmit(&huart1, msg, strlen(msg), 1000);
 446:Core/Src/main.c ****         osDelay(30);
 196              		.loc 1 446 9 view .LVU45
 197 006a 1E20     		movs	r0, #30
 198              	.LVL11:
 199              		.loc 1 446 9 is_stmt 0 view .LVU46
 200 006c FFF7FEFF 		bl	osDelay
 201              	.LVL12:
 202              	.L6:
 447:Core/Src/main.c ****         // if (abs(servo1Smoothed - goal_pos1)<10 && abs(servo2Smoothed - goal_pos2)<10){
 448:Core/Src/main.c ****         //   break;
 449:Core/Src/main.c ****         // }
 450:Core/Src/main.c ****         // current_pos0 = servo0Smoothed;
 451:Core/Src/main.c ****         // current_pos1 = servo1Smoothed;
 452:Core/Src/main.c ****         // current_pos2 = servo2Smoothed;
 453:Core/Src/main.c ****         // current_pos3 = servo3Smoothed;
 454:Core/Src/main.c ****       //}
 455:Core/Src/main.c ****     }
 456:Core/Src/main.c ****     osDelay(1);
 203              		.loc 1 456 5 is_stmt 1 view .LVU47
 204 0070 0120     		movs	r0, #1
 205 0072 FFF7FEFF 		bl	osDelay
 206              	.LVL13:
 207              	.L14:
 208              		.loc 1 456 5 is_stmt 0 view .LVU48
 209              	.LBE6:
 345:Core/Src/main.c ****   {
 210              		.loc 1 345 3 is_stmt 1 view .LVU49
 211              	.LBB8:
 347:Core/Src/main.c ****     char msg[50];
 212              		.loc 1 347 5 view .LVU50
 348:Core/Src/main.c ****     uint8_t arr[9] = {0};
 213              		.loc 1 348 5 view .LVU51
 349:Core/Src/main.c ****     uint16_t i = 0;
 214              		.loc 1 349 5 view .LVU52
 349:Core/Src/main.c ****     uint16_t i = 0;
 215              		.loc 1 349 13 is_stmt 0 view .LVU53
 216 0076 0023     		movs	r3, #0
 217 0078 0393     		str	r3, [sp, #12]
 218 007a 0493     		str	r3, [sp, #16]
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 13


 219 007c 8DF81430 		strb	r3, [sp, #20]
 350:Core/Src/main.c ****     uint8_t joint = 0;
 220              		.loc 1 350 5 is_stmt 1 view .LVU54
 221              	.LVL14:
 351:Core/Src/main.c ****     uint16_t goal_pos0 = 0, goal_pos1 = 0, goal_pos2 = 0, goal_pos3 = 0, goal_pos = 0;
 222              		.loc 1 351 5 view .LVU55
 352:Core/Src/main.c ****     if (HAL_UART_Receive(&huart1, buffer, 1, 1000) == HAL_OK && buffer[0] == '!') //only read if se
 223              		.loc 1 352 5 view .LVU56
 353:Core/Src/main.c ****     {
 224              		.loc 1 353 5 view .LVU57
 353:Core/Src/main.c ****     {
 225              		.loc 1 353 9 is_stmt 0 view .LVU58
 226 0080 4FF47A73 		mov	r3, #1000
 227 0084 0122     		movs	r2, #1
 228 0086 01A9     		add	r1, sp, #4
 229 0088 1148     		ldr	r0, .L24
 230 008a FFF7FEFF 		bl	HAL_UART_Receive
 231              	.LVL15:
 353:Core/Src/main.c ****     {
 232              		.loc 1 353 8 view .LVU59
 233 008e 0028     		cmp	r0, #0
 234 0090 EED1     		bne	.L6
 353:Core/Src/main.c ****     {
 235              		.loc 1 353 71 discriminator 1 view .LVU60
 236 0092 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 353:Core/Src/main.c ****     {
 237              		.loc 1 353 62 discriminator 1 view .LVU61
 238 0096 212B     		cmp	r3, #33
 239 0098 EAD1     		bne	.L6
 352:Core/Src/main.c ****     if (HAL_UART_Receive(&huart1, buffer, 1, 1000) == HAL_OK && buffer[0] == '!') //only read if se
 240              		.loc 1 352 74 view .LVU62
 241 009a 0025     		movs	r5, #0
 350:Core/Src/main.c ****     uint8_t joint = 0;
 242              		.loc 1 350 14 view .LVU63
 243 009c 2C46     		mov	r4, r5
 244 009e C3E7     		b	.L7
 245              	.LVL16:
 246              	.L16:
 408:Core/Src/main.c ****       }
 247              		.loc 1 408 19 view .LVU64
 248 00a0 40F28A21 		movw	r1, #650
 405:Core/Src/main.c ****         goal_pos1 = 750;
 249              		.loc 1 405 19 view .LVU65
 250 00a4 40F2EE22 		movw	r2, #750
 251 00a8 D1E7     		b	.L10
 252              	.LVL17:
 253              	.L23:
 414:Core/Src/main.c ****       }
 254              		.loc 1 414 19 view .LVU66
 255 00aa 40F2B631 		movw	r1, #950
 256              	.LVL18:
 411:Core/Src/main.c ****         goal_pos1 = 750;
 257              		.loc 1 411 19 view .LVU67
 258 00ae 40F2EE22 		movw	r2, #750
 259              	.LVL19:
 411:Core/Src/main.c ****         goal_pos1 = 750;
 260              		.loc 1 411 19 view .LVU68
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 14


 261 00b2 CEE7     		b	.L11
 262              	.LVL20:
 263              	.L18:
 420:Core/Src/main.c ****       }
 264              		.loc 1 420 19 view .LVU69
 265 00b4 40F2B631 		movw	r1, #950
 266              	.LVL21:
 418:Core/Src/main.c ****         goal_pos2 = 750;
 267              		.loc 1 418 19 view .LVU70
 268 00b8 40F2EE20 		movw	r0, #750
 417:Core/Src/main.c ****         goal_pos1 = 750;
 269              		.loc 1 417 19 view .LVU71
 270 00bc FA22     		movs	r2, #250
 271              	.LVL22:
 417:Core/Src/main.c ****         goal_pos1 = 750;
 272              		.loc 1 417 19 view .LVU72
 273 00be CBE7     		b	.L12
 274              	.LVL23:
 275              	.L19:
 426:Core/Src/main.c ****       }
 276              		.loc 1 426 19 view .LVU73
 277 00c0 40F2B631 		movw	r1, #950
 278              	.LVL24:
 425:Core/Src/main.c ****         goal_pos3 = 950;
 279              		.loc 1 425 19 view .LVU74
 280 00c4 40F2EE24 		movw	r4, #750
 281              	.LVL25:
 424:Core/Src/main.c ****         goal_pos2 = 750;
 282              		.loc 1 424 19 view .LVU75
 283 00c8 40F22620 		movw	r0, #550
 284              	.LVL26:
 423:Core/Src/main.c ****         goal_pos1 = 550;
 285              		.loc 1 423 19 view .LVU76
 286 00cc 2246     		mov	r2, r4
 287              	.LVL27:
 423:Core/Src/main.c ****         goal_pos1 = 550;
 288              		.loc 1 423 19 view .LVU77
 289 00ce C6E7     		b	.L13
 290              	.L25:
 291              		.align	2
 292              	.L24:
 293 00d0 00000000 		.word	huart1
 294 00d4 00000000 		.word	htim2
 295              	.LBE8:
 296              		.cfi_endproc
 297              	.LFE77:
 299              		.section	.text.StartServo01,"ax",%progbits
 300              		.align	1
 301              		.global	StartServo01
 302              		.syntax unified
 303              		.thumb
 304              		.thumb_func
 305              		.fpu softvfp
 307              	StartServo01:
 308              	.LFB78:
 457:Core/Src/main.c ****   }
 458:Core/Src/main.c ****   osThreadTerminate(NULL);
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 15


 459:Core/Src/main.c ****   /* USER CODE END 5 */
 460:Core/Src/main.c **** }
 461:Core/Src/main.c **** 
 462:Core/Src/main.c **** /* USER CODE BEGIN Header_StartServo01 */
 463:Core/Src/main.c **** /**
 464:Core/Src/main.c **** * @brief Function implementing the Servo01 thread.
 465:Core/Src/main.c **** * @param argument: Not used
 466:Core/Src/main.c **** * @retval None
 467:Core/Src/main.c **** */
 468:Core/Src/main.c **** /* USER CODE END Header_StartServo01 */
 469:Core/Src/main.c **** void StartServo01(void *argument)
 470:Core/Src/main.c **** {
 309              		.loc 1 470 1 is_stmt 1 view -0
 310              		.cfi_startproc
 311              		@ Volatile: function does not return.
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              	.LVL28:
 315              		.loc 1 470 1 is_stmt 0 view .LVU79
 316 0000 08B5     		push	{r3, lr}
 317              	.LCFI4:
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 3, -8
 320              		.cfi_offset 14, -4
 321              	.LVL29:
 322              	.L27:
 471:Core/Src/main.c ****   /* USER CODE BEGIN StartServo01 */
 472:Core/Src/main.c ****   /* Infinite loop */
 473:Core/Src/main.c ****   for(;;)
 323              		.loc 1 473 3 is_stmt 1 discriminator 1 view .LVU80
 474:Core/Src/main.c ****   {
 475:Core/Src/main.c ****     osDelay(1);
 324              		.loc 1 475 5 discriminator 1 view .LVU81
 325 0002 0120     		movs	r0, #1
 326 0004 FFF7FEFF 		bl	osDelay
 327              	.LVL30:
 328 0008 FBE7     		b	.L27
 329              		.cfi_endproc
 330              	.LFE78:
 332              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 333              		.align	1
 334              		.global	HAL_TIM_PeriodElapsedCallback
 335              		.syntax unified
 336              		.thumb
 337              		.thumb_func
 338              		.fpu softvfp
 340              	HAL_TIM_PeriodElapsedCallback:
 341              	.LVL31:
 342              	.LFB79:
 476:Core/Src/main.c ****   }
 477:Core/Src/main.c ****   /* USER CODE END StartServo01 */
 478:Core/Src/main.c **** }
 479:Core/Src/main.c **** 
 480:Core/Src/main.c **** /**
 481:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 482:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 483:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 16


 484:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 485:Core/Src/main.c ****   * @param  htim : TIM handle
 486:Core/Src/main.c ****   * @retval None
 487:Core/Src/main.c ****   */
 488:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 489:Core/Src/main.c **** {
 343              		.loc 1 489 1 view -0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347              		.loc 1 489 1 is_stmt 0 view .LVU83
 348 0000 08B5     		push	{r3, lr}
 349              	.LCFI5:
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 3, -8
 352              		.cfi_offset 14, -4
 490:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 491:Core/Src/main.c **** 
 492:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 493:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 353              		.loc 1 493 3 is_stmt 1 view .LVU84
 354              		.loc 1 493 11 is_stmt 0 view .LVU85
 355 0002 0268     		ldr	r2, [r0]
 356              		.loc 1 493 6 view .LVU86
 357 0004 034B     		ldr	r3, .L33
 358 0006 9A42     		cmp	r2, r3
 359 0008 00D0     		beq	.L32
 360              	.LVL32:
 361              	.L29:
 494:Core/Src/main.c ****     HAL_IncTick();
 495:Core/Src/main.c ****   }
 496:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 497:Core/Src/main.c **** 
 498:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 499:Core/Src/main.c **** }
 362              		.loc 1 499 1 view .LVU87
 363 000a 08BD     		pop	{r3, pc}
 364              	.LVL33:
 365              	.L32:
 494:Core/Src/main.c ****     HAL_IncTick();
 366              		.loc 1 494 5 is_stmt 1 view .LVU88
 367 000c FFF7FEFF 		bl	HAL_IncTick
 368              	.LVL34:
 369              		.loc 1 499 1 is_stmt 0 view .LVU89
 370 0010 FBE7     		b	.L29
 371              	.L34:
 372 0012 00BF     		.align	2
 373              	.L33:
 374 0014 002C0140 		.word	1073818624
 375              		.cfi_endproc
 376              	.LFE79:
 378              		.section	.text.Error_Handler,"ax",%progbits
 379              		.align	1
 380              		.global	Error_Handler
 381              		.syntax unified
 382              		.thumb
 383              		.thumb_func
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 17


 384              		.fpu softvfp
 386              	Error_Handler:
 387              	.LFB80:
 500:Core/Src/main.c **** 
 501:Core/Src/main.c **** /**
 502:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 503:Core/Src/main.c ****   * @retval None
 504:Core/Src/main.c ****   */
 505:Core/Src/main.c **** void Error_Handler(void)
 506:Core/Src/main.c **** {
 388              		.loc 1 506 1 is_stmt 1 view -0
 389              		.cfi_startproc
 390              		@ Volatile: function does not return.
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 507:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 508:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 509:Core/Src/main.c ****   __disable_irq();
 394              		.loc 1 509 3 view .LVU91
 395              	.LBB9:
 396              	.LBI9:
 397              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 18


  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 19


  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 398              		.loc 2 140 27 view .LVU92
 399              	.LBB10:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 400              		.loc 2 142 3 view .LVU93
 401              		.syntax unified
 402              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 403 0000 72B6     		cpsid i
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 20


 404              	@ 0 "" 2
 405              		.thumb
 406              		.syntax unified
 407              	.L36:
 408              	.LBE10:
 409              	.LBE9:
 510:Core/Src/main.c ****   while (1)
 410              		.loc 1 510 3 discriminator 1 view .LVU94
 511:Core/Src/main.c ****   {
 512:Core/Src/main.c ****   }
 411              		.loc 1 512 3 discriminator 1 view .LVU95
 412 0002 FEE7     		b	.L36
 413              		.cfi_endproc
 414              	.LFE80:
 416              		.section	.text.MX_TIM2_Init,"ax",%progbits
 417              		.align	1
 418              		.syntax unified
 419              		.thumb
 420              		.thumb_func
 421              		.fpu softvfp
 423              	MX_TIM2_Init:
 424              	.LFB74:
 218:Core/Src/main.c **** 
 425              		.loc 1 218 1 view -0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 56
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429 0000 00B5     		push	{lr}
 430              	.LCFI6:
 431              		.cfi_def_cfa_offset 4
 432              		.cfi_offset 14, -4
 433 0002 8FB0     		sub	sp, sp, #60
 434              	.LCFI7:
 435              		.cfi_def_cfa_offset 64
 224:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 436              		.loc 1 224 3 view .LVU97
 224:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 437              		.loc 1 224 26 is_stmt 0 view .LVU98
 438 0004 0023     		movs	r3, #0
 439 0006 0A93     		str	r3, [sp, #40]
 440 0008 0B93     		str	r3, [sp, #44]
 441 000a 0C93     		str	r3, [sp, #48]
 442 000c 0D93     		str	r3, [sp, #52]
 225:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 443              		.loc 1 225 3 is_stmt 1 view .LVU99
 225:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 444              		.loc 1 225 27 is_stmt 0 view .LVU100
 445 000e 0893     		str	r3, [sp, #32]
 446 0010 0993     		str	r3, [sp, #36]
 226:Core/Src/main.c **** 
 447              		.loc 1 226 3 is_stmt 1 view .LVU101
 226:Core/Src/main.c **** 
 448              		.loc 1 226 22 is_stmt 0 view .LVU102
 449 0012 0193     		str	r3, [sp, #4]
 450 0014 0293     		str	r3, [sp, #8]
 451 0016 0393     		str	r3, [sp, #12]
 452 0018 0493     		str	r3, [sp, #16]
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 21


 453 001a 0593     		str	r3, [sp, #20]
 454 001c 0693     		str	r3, [sp, #24]
 455 001e 0793     		str	r3, [sp, #28]
 231:Core/Src/main.c ****   htim2.Init.Prescaler = 15;
 456              		.loc 1 231 3 is_stmt 1 view .LVU103
 231:Core/Src/main.c ****   htim2.Init.Prescaler = 15;
 457              		.loc 1 231 18 is_stmt 0 view .LVU104
 458 0020 2C48     		ldr	r0, .L55
 459 0022 4FF08042 		mov	r2, #1073741824
 460 0026 0260     		str	r2, [r0]
 232:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 461              		.loc 1 232 3 is_stmt 1 view .LVU105
 232:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 462              		.loc 1 232 24 is_stmt 0 view .LVU106
 463 0028 0F22     		movs	r2, #15
 464 002a 4260     		str	r2, [r0, #4]
 233:Core/Src/main.c ****   htim2.Init.Period = 9999;
 465              		.loc 1 233 3 is_stmt 1 view .LVU107
 233:Core/Src/main.c ****   htim2.Init.Period = 9999;
 466              		.loc 1 233 26 is_stmt 0 view .LVU108
 467 002c 8360     		str	r3, [r0, #8]
 234:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 468              		.loc 1 234 3 is_stmt 1 view .LVU109
 234:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 469              		.loc 1 234 21 is_stmt 0 view .LVU110
 470 002e 42F20F72 		movw	r2, #9999
 471 0032 C260     		str	r2, [r0, #12]
 235:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 472              		.loc 1 235 3 is_stmt 1 view .LVU111
 235:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 473              		.loc 1 235 28 is_stmt 0 view .LVU112
 474 0034 0361     		str	r3, [r0, #16]
 236:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 475              		.loc 1 236 3 is_stmt 1 view .LVU113
 236:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 476              		.loc 1 236 32 is_stmt 0 view .LVU114
 477 0036 8361     		str	r3, [r0, #24]
 237:Core/Src/main.c ****   {
 478              		.loc 1 237 3 is_stmt 1 view .LVU115
 237:Core/Src/main.c ****   {
 479              		.loc 1 237 7 is_stmt 0 view .LVU116
 480 0038 FFF7FEFF 		bl	HAL_TIM_Base_Init
 481              	.LVL35:
 237:Core/Src/main.c ****   {
 482              		.loc 1 237 6 view .LVU117
 483 003c 0028     		cmp	r0, #0
 484 003e 39D1     		bne	.L47
 241:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 485              		.loc 1 241 3 is_stmt 1 view .LVU118
 241:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 486              		.loc 1 241 34 is_stmt 0 view .LVU119
 487 0040 4FF48053 		mov	r3, #4096
 488 0044 0A93     		str	r3, [sp, #40]
 242:Core/Src/main.c ****   {
 489              		.loc 1 242 3 is_stmt 1 view .LVU120
 242:Core/Src/main.c ****   {
 490              		.loc 1 242 7 is_stmt 0 view .LVU121
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 22


 491 0046 0AA9     		add	r1, sp, #40
 492 0048 2248     		ldr	r0, .L55
 493 004a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 494              	.LVL36:
 242:Core/Src/main.c ****   {
 495              		.loc 1 242 6 view .LVU122
 496 004e 0028     		cmp	r0, #0
 497 0050 32D1     		bne	.L48
 246:Core/Src/main.c ****   {
 498              		.loc 1 246 3 is_stmt 1 view .LVU123
 246:Core/Src/main.c ****   {
 499              		.loc 1 246 7 is_stmt 0 view .LVU124
 500 0052 2048     		ldr	r0, .L55
 501 0054 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 502              	.LVL37:
 246:Core/Src/main.c ****   {
 503              		.loc 1 246 6 view .LVU125
 504 0058 0028     		cmp	r0, #0
 505 005a 2FD1     		bne	.L49
 250:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 506              		.loc 1 250 3 is_stmt 1 view .LVU126
 250:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 507              		.loc 1 250 37 is_stmt 0 view .LVU127
 508 005c 0023     		movs	r3, #0
 509 005e 0893     		str	r3, [sp, #32]
 251:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 510              		.loc 1 251 3 is_stmt 1 view .LVU128
 251:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 511              		.loc 1 251 33 is_stmt 0 view .LVU129
 512 0060 0993     		str	r3, [sp, #36]
 252:Core/Src/main.c ****   {
 513              		.loc 1 252 3 is_stmt 1 view .LVU130
 252:Core/Src/main.c ****   {
 514              		.loc 1 252 7 is_stmt 0 view .LVU131
 515 0062 08A9     		add	r1, sp, #32
 516 0064 1B48     		ldr	r0, .L55
 517 0066 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 518              	.LVL38:
 252:Core/Src/main.c ****   {
 519              		.loc 1 252 6 view .LVU132
 520 006a 48BB     		cbnz	r0, .L50
 256:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 521              		.loc 1 256 3 is_stmt 1 view .LVU133
 256:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 522              		.loc 1 256 20 is_stmt 0 view .LVU134
 523 006c 6023     		movs	r3, #96
 524 006e 0193     		str	r3, [sp, #4]
 257:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 525              		.loc 1 257 3 is_stmt 1 view .LVU135
 257:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 526              		.loc 1 257 19 is_stmt 0 view .LVU136
 527 0070 0022     		movs	r2, #0
 528 0072 0292     		str	r2, [sp, #8]
 258:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 529              		.loc 1 258 3 is_stmt 1 view .LVU137
 258:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 530              		.loc 1 258 24 is_stmt 0 view .LVU138
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 23


 531 0074 0392     		str	r2, [sp, #12]
 259:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 532              		.loc 1 259 3 is_stmt 1 view .LVU139
 259:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 533              		.loc 1 259 24 is_stmt 0 view .LVU140
 534 0076 0592     		str	r2, [sp, #20]
 260:Core/Src/main.c ****   {
 535              		.loc 1 260 3 is_stmt 1 view .LVU141
 260:Core/Src/main.c ****   {
 536              		.loc 1 260 7 is_stmt 0 view .LVU142
 537 0078 01A9     		add	r1, sp, #4
 538 007a 1648     		ldr	r0, .L55
 539 007c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 540              	.LVL39:
 260:Core/Src/main.c ****   {
 541              		.loc 1 260 6 view .LVU143
 542 0080 00BB     		cbnz	r0, .L51
 264:Core/Src/main.c ****   {
 543              		.loc 1 264 3 is_stmt 1 view .LVU144
 264:Core/Src/main.c ****   {
 544              		.loc 1 264 7 is_stmt 0 view .LVU145
 545 0082 0422     		movs	r2, #4
 546 0084 0DEB0201 		add	r1, sp, r2
 547 0088 1248     		ldr	r0, .L55
 548 008a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 549              	.LVL40:
 264:Core/Src/main.c ****   {
 550              		.loc 1 264 6 view .LVU146
 551 008e D8B9     		cbnz	r0, .L52
 268:Core/Src/main.c ****   {
 552              		.loc 1 268 3 is_stmt 1 view .LVU147
 268:Core/Src/main.c ****   {
 553              		.loc 1 268 7 is_stmt 0 view .LVU148
 554 0090 0822     		movs	r2, #8
 555 0092 01A9     		add	r1, sp, #4
 556 0094 0F48     		ldr	r0, .L55
 557 0096 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 558              	.LVL41:
 268:Core/Src/main.c ****   {
 559              		.loc 1 268 6 view .LVU149
 560 009a B8B9     		cbnz	r0, .L53
 272:Core/Src/main.c ****   {
 561              		.loc 1 272 3 is_stmt 1 view .LVU150
 272:Core/Src/main.c ****   {
 562              		.loc 1 272 7 is_stmt 0 view .LVU151
 563 009c 0C22     		movs	r2, #12
 564 009e 01A9     		add	r1, sp, #4
 565 00a0 0C48     		ldr	r0, .L55
 566 00a2 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 567              	.LVL42:
 272:Core/Src/main.c ****   {
 568              		.loc 1 272 6 view .LVU152
 569 00a6 98B9     		cbnz	r0, .L54
 279:Core/Src/main.c **** 
 570              		.loc 1 279 3 is_stmt 1 view .LVU153
 571 00a8 0A48     		ldr	r0, .L55
 572 00aa FFF7FEFF 		bl	HAL_TIM_MspPostInit
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 24


 573              	.LVL43:
 281:Core/Src/main.c **** 
 574              		.loc 1 281 1 is_stmt 0 view .LVU154
 575 00ae 0FB0     		add	sp, sp, #60
 576              	.LCFI8:
 577              		.cfi_remember_state
 578              		.cfi_def_cfa_offset 4
 579              		@ sp needed
 580 00b0 5DF804FB 		ldr	pc, [sp], #4
 581              	.L47:
 582              	.LCFI9:
 583              		.cfi_restore_state
 239:Core/Src/main.c ****   }
 584              		.loc 1 239 5 is_stmt 1 view .LVU155
 585 00b4 FFF7FEFF 		bl	Error_Handler
 586              	.LVL44:
 587              	.L48:
 244:Core/Src/main.c ****   }
 588              		.loc 1 244 5 view .LVU156
 589 00b8 FFF7FEFF 		bl	Error_Handler
 590              	.LVL45:
 591              	.L49:
 248:Core/Src/main.c ****   }
 592              		.loc 1 248 5 view .LVU157
 593 00bc FFF7FEFF 		bl	Error_Handler
 594              	.LVL46:
 595              	.L50:
 254:Core/Src/main.c ****   }
 596              		.loc 1 254 5 view .LVU158
 597 00c0 FFF7FEFF 		bl	Error_Handler
 598              	.LVL47:
 599              	.L51:
 262:Core/Src/main.c ****   }
 600              		.loc 1 262 5 view .LVU159
 601 00c4 FFF7FEFF 		bl	Error_Handler
 602              	.LVL48:
 603              	.L52:
 266:Core/Src/main.c ****   }
 604              		.loc 1 266 5 view .LVU160
 605 00c8 FFF7FEFF 		bl	Error_Handler
 606              	.LVL49:
 607              	.L53:
 270:Core/Src/main.c ****   }
 608              		.loc 1 270 5 view .LVU161
 609 00cc FFF7FEFF 		bl	Error_Handler
 610              	.LVL50:
 611              	.L54:
 274:Core/Src/main.c ****   }
 612              		.loc 1 274 5 view .LVU162
 613 00d0 FFF7FEFF 		bl	Error_Handler
 614              	.LVL51:
 615              	.L56:
 616              		.align	2
 617              	.L55:
 618 00d4 00000000 		.word	htim2
 619              		.cfi_endproc
 620              	.LFE74:
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 25


 622              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 623              		.align	1
 624              		.syntax unified
 625              		.thumb
 626              		.thumb_func
 627              		.fpu softvfp
 629              	MX_USART1_UART_Init:
 630              	.LFB75:
 289:Core/Src/main.c **** 
 631              		.loc 1 289 1 view -0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 0
 634              		@ frame_needed = 0, uses_anonymous_args = 0
 635 0000 08B5     		push	{r3, lr}
 636              	.LCFI10:
 637              		.cfi_def_cfa_offset 8
 638              		.cfi_offset 3, -8
 639              		.cfi_offset 14, -4
 298:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 640              		.loc 1 298 3 view .LVU164
 298:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 641              		.loc 1 298 19 is_stmt 0 view .LVU165
 642 0002 0C48     		ldr	r0, .L61
 643 0004 0C4B     		ldr	r3, .L61+4
 644 0006 0360     		str	r3, [r0]
 299:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_9B;
 645              		.loc 1 299 3 is_stmt 1 view .LVU166
 299:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_9B;
 646              		.loc 1 299 24 is_stmt 0 view .LVU167
 647 0008 4FF41653 		mov	r3, #9600
 648 000c 4360     		str	r3, [r0, #4]
 300:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 649              		.loc 1 300 3 is_stmt 1 view .LVU168
 300:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 650              		.loc 1 300 26 is_stmt 0 view .LVU169
 651 000e 4FF48053 		mov	r3, #4096
 652 0012 8360     		str	r3, [r0, #8]
 301:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_EVEN;
 653              		.loc 1 301 3 is_stmt 1 view .LVU170
 301:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_EVEN;
 654              		.loc 1 301 24 is_stmt 0 view .LVU171
 655 0014 0023     		movs	r3, #0
 656 0016 C360     		str	r3, [r0, #12]
 302:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 657              		.loc 1 302 3 is_stmt 1 view .LVU172
 302:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 658              		.loc 1 302 22 is_stmt 0 view .LVU173
 659 0018 4FF48062 		mov	r2, #1024
 660 001c 0261     		str	r2, [r0, #16]
 303:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 661              		.loc 1 303 3 is_stmt 1 view .LVU174
 303:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 662              		.loc 1 303 20 is_stmt 0 view .LVU175
 663 001e 0C22     		movs	r2, #12
 664 0020 4261     		str	r2, [r0, #20]
 304:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 665              		.loc 1 304 3 is_stmt 1 view .LVU176
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 26


 304:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 666              		.loc 1 304 25 is_stmt 0 view .LVU177
 667 0022 8361     		str	r3, [r0, #24]
 305:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 668              		.loc 1 305 3 is_stmt 1 view .LVU178
 305:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 669              		.loc 1 305 28 is_stmt 0 view .LVU179
 670 0024 C361     		str	r3, [r0, #28]
 306:Core/Src/main.c ****   {
 671              		.loc 1 306 3 is_stmt 1 view .LVU180
 306:Core/Src/main.c ****   {
 672              		.loc 1 306 7 is_stmt 0 view .LVU181
 673 0026 FFF7FEFF 		bl	HAL_UART_Init
 674              	.LVL52:
 306:Core/Src/main.c ****   {
 675              		.loc 1 306 6 view .LVU182
 676 002a 00B9     		cbnz	r0, .L60
 314:Core/Src/main.c **** 
 677              		.loc 1 314 1 view .LVU183
 678 002c 08BD     		pop	{r3, pc}
 679              	.L60:
 308:Core/Src/main.c ****   }
 680              		.loc 1 308 5 is_stmt 1 view .LVU184
 681 002e FFF7FEFF 		bl	Error_Handler
 682              	.LVL53:
 683              	.L62:
 684 0032 00BF     		.align	2
 685              	.L61:
 686 0034 00000000 		.word	huart1
 687 0038 00380140 		.word	1073821696
 688              		.cfi_endproc
 689              	.LFE75:
 691              		.section	.text.SystemClock_Config,"ax",%progbits
 692              		.align	1
 693              		.global	SystemClock_Config
 694              		.syntax unified
 695              		.thumb
 696              		.thumb_func
 697              		.fpu softvfp
 699              	SystemClock_Config:
 700              	.LFB73:
 183:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 701              		.loc 1 183 1 view -0
 702              		.cfi_startproc
 703              		@ args = 0, pretend = 0, frame = 64
 704              		@ frame_needed = 0, uses_anonymous_args = 0
 705 0000 00B5     		push	{lr}
 706              	.LCFI11:
 707              		.cfi_def_cfa_offset 4
 708              		.cfi_offset 14, -4
 709 0002 91B0     		sub	sp, sp, #68
 710              	.LCFI12:
 711              		.cfi_def_cfa_offset 72
 184:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 712              		.loc 1 184 3 view .LVU186
 184:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 713              		.loc 1 184 22 is_stmt 0 view .LVU187
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 27


 714 0004 2022     		movs	r2, #32
 715 0006 0021     		movs	r1, #0
 716 0008 0DEB0200 		add	r0, sp, r2
 717 000c FFF7FEFF 		bl	memset
 718              	.LVL54:
 185:Core/Src/main.c **** 
 719              		.loc 1 185 3 is_stmt 1 view .LVU188
 185:Core/Src/main.c **** 
 720              		.loc 1 185 22 is_stmt 0 view .LVU189
 721 0010 0023     		movs	r3, #0
 722 0012 0193     		str	r3, [sp, #4]
 723 0014 0293     		str	r3, [sp, #8]
 724 0016 0393     		str	r3, [sp, #12]
 725 0018 0493     		str	r3, [sp, #16]
 726 001a 0593     		str	r3, [sp, #20]
 190:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 727              		.loc 1 190 3 is_stmt 1 view .LVU190
 190:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 728              		.loc 1 190 36 is_stmt 0 view .LVU191
 729 001c 0123     		movs	r3, #1
 730 001e 0693     		str	r3, [sp, #24]
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 731              		.loc 1 191 3 is_stmt 1 view .LVU192
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 732              		.loc 1 191 30 is_stmt 0 view .LVU193
 733 0020 4FF48033 		mov	r3, #65536
 734 0024 0793     		str	r3, [sp, #28]
 192:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 735              		.loc 1 192 3 is_stmt 1 view .LVU194
 193:Core/Src/main.c ****   {
 736              		.loc 1 193 3 view .LVU195
 193:Core/Src/main.c ****   {
 737              		.loc 1 193 7 is_stmt 0 view .LVU196
 738 0026 06A8     		add	r0, sp, #24
 739 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 740              	.LVL55:
 193:Core/Src/main.c ****   {
 741              		.loc 1 193 6 view .LVU197
 742 002c 70B9     		cbnz	r0, .L67
 199:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 743              		.loc 1 199 3 is_stmt 1 view .LVU198
 199:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 744              		.loc 1 199 31 is_stmt 0 view .LVU199
 745 002e 0F23     		movs	r3, #15
 746 0030 0193     		str	r3, [sp, #4]
 201:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 747              		.loc 1 201 3 is_stmt 1 view .LVU200
 201:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 748              		.loc 1 201 34 is_stmt 0 view .LVU201
 749 0032 0123     		movs	r3, #1
 750 0034 0293     		str	r3, [sp, #8]
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 751              		.loc 1 202 3 is_stmt 1 view .LVU202
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 752              		.loc 1 202 35 is_stmt 0 view .LVU203
 753 0036 0021     		movs	r1, #0
 754 0038 0391     		str	r1, [sp, #12]
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 28


 203:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 755              		.loc 1 203 3 is_stmt 1 view .LVU204
 203:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 756              		.loc 1 203 36 is_stmt 0 view .LVU205
 757 003a 0491     		str	r1, [sp, #16]
 204:Core/Src/main.c **** 
 758              		.loc 1 204 3 is_stmt 1 view .LVU206
 204:Core/Src/main.c **** 
 759              		.loc 1 204 36 is_stmt 0 view .LVU207
 760 003c 0591     		str	r1, [sp, #20]
 206:Core/Src/main.c ****   {
 761              		.loc 1 206 3 is_stmt 1 view .LVU208
 206:Core/Src/main.c ****   {
 762              		.loc 1 206 7 is_stmt 0 view .LVU209
 763 003e 01A8     		add	r0, sp, #4
 764 0040 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 765              	.LVL56:
 206:Core/Src/main.c ****   {
 766              		.loc 1 206 6 view .LVU210
 767 0044 20B9     		cbnz	r0, .L68
 210:Core/Src/main.c **** 
 768              		.loc 1 210 1 view .LVU211
 769 0046 11B0     		add	sp, sp, #68
 770              	.LCFI13:
 771              		.cfi_remember_state
 772              		.cfi_def_cfa_offset 4
 773              		@ sp needed
 774 0048 5DF804FB 		ldr	pc, [sp], #4
 775              	.L67:
 776              	.LCFI14:
 777              		.cfi_restore_state
 195:Core/Src/main.c ****   }
 778              		.loc 1 195 5 is_stmt 1 view .LVU212
 779 004c FFF7FEFF 		bl	Error_Handler
 780              	.LVL57:
 781              	.L68:
 208:Core/Src/main.c ****   }
 782              		.loc 1 208 5 view .LVU213
 783 0050 FFF7FEFF 		bl	Error_Handler
 784              	.LVL58:
 785              		.cfi_endproc
 786              	.LFE73:
 788              		.global	__aeabi_f2uiz
 789              		.section	.text.main,"ax",%progbits
 790              		.align	1
 791              		.global	main
 792              		.syntax unified
 793              		.thumb
 794              		.thumb_func
 795              		.fpu softvfp
 797              	main:
 798              	.LFB72:
  93:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 799              		.loc 1 93 1 view -0
 800              		.cfi_startproc
 801              		@ Volatile: function does not return.
 802              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 29


 803              		@ frame_needed = 0, uses_anonymous_args = 0
 804 0000 08B5     		push	{r3, lr}
 805              	.LCFI15:
 806              		.cfi_def_cfa_offset 8
 807              		.cfi_offset 3, -8
 808              		.cfi_offset 14, -4
 101:Core/Src/main.c **** 
 809              		.loc 1 101 3 view .LVU215
 810 0002 FFF7FEFF 		bl	HAL_Init
 811              	.LVL59:
 108:Core/Src/main.c **** 
 812              		.loc 1 108 3 view .LVU216
 813 0006 FFF7FEFF 		bl	SystemClock_Config
 814              	.LVL60:
 115:Core/Src/main.c ****   MX_TIM2_Init();
 815              		.loc 1 115 3 view .LVU217
 816 000a FFF7FEFF 		bl	MX_GPIO_Init
 817              	.LVL61:
 116:Core/Src/main.c ****   MX_USART1_UART_Init();
 818              		.loc 1 116 3 view .LVU218
 819 000e FFF7FEFF 		bl	MX_TIM2_Init
 820              	.LVL62:
 117:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 821              		.loc 1 117 3 view .LVU219
 822 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 823              	.LVL63:
 119:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 824              		.loc 1 119 3 view .LVU220
 825 0016 1E4C     		ldr	r4, .L72
 826 0018 0021     		movs	r1, #0
 827 001a 2046     		mov	r0, r4
 828 001c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 829              	.LVL64:
 120:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3);
 830              		.loc 1 120 3 view .LVU221
 831 0020 0421     		movs	r1, #4
 832 0022 2046     		mov	r0, r4
 833 0024 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 834              	.LVL65:
 121:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_4);
 835              		.loc 1 121 3 view .LVU222
 836 0028 0821     		movs	r1, #8
 837 002a 2046     		mov	r0, r4
 838 002c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 839              	.LVL66:
 122:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_1, (uint16_t )current_pos0); //go to initial position
 840              		.loc 1 122 3 view .LVU223
 841 0030 0C21     		movs	r1, #12
 842 0032 2046     		mov	r0, r4
 843 0034 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 844              	.LVL67:
 123:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_2, (uint16_t )current_pos1); //go to initial position
 845              		.loc 1 123 3 view .LVU224
 846 0038 2468     		ldr	r4, [r4]
 847 003a 164B     		ldr	r3, .L72+4
 848 003c 1868     		ldr	r0, [r3]	@ float
 849 003e FFF7FEFF 		bl	__aeabi_f2uiz
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 30


 850              	.LVL68:
 851 0042 80B2     		uxth	r0, r0
 852 0044 6063     		str	r0, [r4, #52]
 124:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_3, (uint16_t )current_pos2); //go to initial position
 853              		.loc 1 124 3 view .LVU225
 854 0046 144B     		ldr	r3, .L72+8
 855 0048 1868     		ldr	r0, [r3]	@ float
 856 004a FFF7FEFF 		bl	__aeabi_f2uiz
 857              	.LVL69:
 858 004e 80B2     		uxth	r0, r0
 859 0050 A063     		str	r0, [r4, #56]
 125:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_4, (uint16_t )current_pos3); //go to initial position
 860              		.loc 1 125 3 view .LVU226
 861 0052 124B     		ldr	r3, .L72+12
 862 0054 1868     		ldr	r0, [r3]	@ float
 863 0056 FFF7FEFF 		bl	__aeabi_f2uiz
 864              	.LVL70:
 865 005a 80B2     		uxth	r0, r0
 866 005c E063     		str	r0, [r4, #60]
 126:Core/Src/main.c ****   /* USER CODE END 2 */
 867              		.loc 1 126 3 view .LVU227
 868 005e 104B     		ldr	r3, .L72+16
 869 0060 1868     		ldr	r0, [r3]	@ float
 870 0062 FFF7FEFF 		bl	__aeabi_f2uiz
 871              	.LVL71:
 872 0066 80B2     		uxth	r0, r0
 873 0068 2064     		str	r0, [r4, #64]
 130:Core/Src/main.c **** 
 874              		.loc 1 130 3 view .LVU228
 875 006a FFF7FEFF 		bl	osKernelInitialize
 876              	.LVL72:
 150:Core/Src/main.c **** 
 877              		.loc 1 150 3 view .LVU229
 150:Core/Src/main.c **** 
 878              		.loc 1 150 26 is_stmt 0 view .LVU230
 879 006e 0D4A     		ldr	r2, .L72+20
 880 0070 0021     		movs	r1, #0
 881 0072 0D48     		ldr	r0, .L72+24
 882 0074 FFF7FEFF 		bl	osThreadNew
 883              	.LVL73:
 150:Core/Src/main.c **** 
 884              		.loc 1 150 24 view .LVU231
 885 0078 0C4B     		ldr	r3, .L72+28
 886 007a 1860     		str	r0, [r3]
 153:Core/Src/main.c **** 
 887              		.loc 1 153 3 is_stmt 1 view .LVU232
 153:Core/Src/main.c **** 
 888              		.loc 1 153 19 is_stmt 0 view .LVU233
 889 007c 0C4A     		ldr	r2, .L72+32
 890 007e 0021     		movs	r1, #0
 891 0080 0C48     		ldr	r0, .L72+36
 892 0082 FFF7FEFF 		bl	osThreadNew
 893              	.LVL74:
 153:Core/Src/main.c **** 
 894              		.loc 1 153 17 view .LVU234
 895 0086 0C4B     		ldr	r3, .L72+40
 896 0088 1860     		str	r0, [r3]
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 31


 164:Core/Src/main.c **** 
 897              		.loc 1 164 3 is_stmt 1 view .LVU235
 898 008a FFF7FEFF 		bl	osKernelStart
 899              	.LVL75:
 900              	.L70:
 169:Core/Src/main.c ****   {
 901              		.loc 1 169 3 discriminator 1 view .LVU236
 174:Core/Src/main.c ****   /* USER CODE END 3 */
 902              		.loc 1 174 3 discriminator 1 view .LVU237
 903 008e FEE7     		b	.L70
 904              	.L73:
 905              		.align	2
 906              	.L72:
 907 0090 00000000 		.word	htim2
 908 0094 00000000 		.word	.LANCHOR0
 909 0098 00000000 		.word	.LANCHOR1
 910 009c 00000000 		.word	.LANCHOR2
 911 00a0 00000000 		.word	.LANCHOR3
 912 00a4 00000000 		.word	.LANCHOR4
 913 00a8 00000000 		.word	StartReadUART_Servo
 914 00ac 00000000 		.word	readUART_ServoHandle
 915 00b0 00000000 		.word	.LANCHOR5
 916 00b4 00000000 		.word	StartServo01
 917 00b8 00000000 		.word	Servo01Handle
 918              		.cfi_endproc
 919              	.LFE72:
 921              		.global	current_pos3
 922              		.global	current_pos2
 923              		.global	current_pos1
 924              		.global	current_pos0
 925              		.global	Servo01_attributes
 926              		.comm	Servo01Handle,4,4
 927              		.global	readUART_Servo_attributes
 928              		.comm	readUART_ServoHandle,4,4
 929              		.comm	huart1,68,4
 930              		.comm	htim2,72,4
 931              		.section	.data.current_pos0,"aw"
 932              		.align	2
 933              		.set	.LANCHOR0,. + 0
 936              	current_pos0:
 937 0000 00803B44 		.word	1144750080
 938              		.section	.data.current_pos1,"aw"
 939              		.align	2
 940              		.set	.LANCHOR1,. + 0
 943              	current_pos1:
 944 0000 00803B44 		.word	1144750080
 945              		.section	.data.current_pos2,"aw"
 946              		.align	2
 947              		.set	.LANCHOR2,. + 0
 950              	current_pos2:
 951 0000 00803B44 		.word	1144750080
 952              		.section	.data.current_pos3,"aw"
 953              		.align	2
 954              		.set	.LANCHOR3,. + 0
 957              	current_pos3:
 958 0000 00803B44 		.word	1144750080
 959              		.section	.rodata.Servo01_attributes,"a"
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 32


 960              		.align	2
 961              		.set	.LANCHOR5,. + 0
 964              	Servo01_attributes:
 965 0000 00000000 		.word	.LC0
 966 0004 00000000 		.space	16
 966      00000000 
 966      00000000 
 966      00000000 
 967 0014 00020000 		.word	512
 968 0018 18000000 		.word	24
 969 001c 00000000 		.space	8
 969      00000000 
 970              		.section	.rodata.readUART_Servo_attributes,"a"
 971              		.align	2
 972              		.set	.LANCHOR4,. + 0
 975              	readUART_Servo_attributes:
 976 0000 08000000 		.word	.LC1
 977 0004 00000000 		.space	16
 977      00000000 
 977      00000000 
 977      00000000 
 978 0014 00020000 		.word	512
 979 0018 18000000 		.word	24
 980 001c 00000000 		.space	8
 980      00000000 
 981              		.section	.rodata.str1.4,"aMS",%progbits,1
 982              		.align	2
 983              	.LC0:
 984 0000 53657276 		.ascii	"Servo01\000"
 984      6F303100 
 985              	.LC1:
 986 0008 72656164 		.ascii	"readUART_Servo\000"
 986      55415254 
 986      5F536572 
 986      766F00
 987              		.text
 988              	.Letext0:
 989              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 990              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 991              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 992              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 993              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 994              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 995              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 996              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 997              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 998              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 999              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1000              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1001              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 1002              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\lib\\gcc\\arm-none-ea
 1003              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 1004              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 1005              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 1006              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 1007              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1008              		.file 22 "Core/Inc/main.h"
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 33


 1009              		.file 23 "<built-in>"
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 34


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:16     .text.MX_GPIO_Init:00000000 $t
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:72     .text.MX_GPIO_Init:0000002c $d
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:77     .text.StartReadUART_Servo:00000000 $t
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:84     .text.StartReadUART_Servo:00000000 StartReadUART_Servo
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:293    .text.StartReadUART_Servo:000000d0 $d
                            *COM*:00000044 huart1
                            *COM*:00000048 htim2
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:300    .text.StartServo01:00000000 $t
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:307    .text.StartServo01:00000000 StartServo01
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:333    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:340    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:374    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:379    .text.Error_Handler:00000000 $t
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:386    .text.Error_Handler:00000000 Error_Handler
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:417    .text.MX_TIM2_Init:00000000 $t
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:423    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:618    .text.MX_TIM2_Init:000000d4 $d
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:623    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:629    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:686    .text.MX_USART1_UART_Init:00000034 $d
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:692    .text.SystemClock_Config:00000000 $t
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:699    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:790    .text.main:00000000 $t
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:797    .text.main:00000000 main
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:907    .text.main:00000090 $d
                            *COM*:00000004 readUART_ServoHandle
                            *COM*:00000004 Servo01Handle
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:957    .data.current_pos3:00000000 current_pos3
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:950    .data.current_pos2:00000000 current_pos2
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:943    .data.current_pos1:00000000 current_pos1
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:936    .data.current_pos0:00000000 current_pos0
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:964    .rodata.Servo01_attributes:00000000 Servo01_attributes
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:975    .rodata.readUART_Servo_attributes:00000000 readUART_Servo_attributes
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:932    .data.current_pos0:00000000 $d
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:939    .data.current_pos1:00000000 $d
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:946    .data.current_pos2:00000000 $d
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:953    .data.current_pos3:00000000 $d
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:960    .rodata.Servo01_attributes:00000000 $d
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:971    .rodata.readUART_Servo_attributes:00000000 $d
C:\Users\user\AppData\Local\Temp\cc82e7Yg.s:982    .rodata.str1.4:00000000 $d

UNDEFINED SYMBOLS
atoi
HAL_UART_Receive
osDelay
HAL_IncTick
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_UART_Init
memset
ARM GAS  C:\Users\user\AppData\Local\Temp\cc82e7Yg.s 			page 35


HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_f2uiz
HAL_Init
HAL_TIM_PWM_Start
osKernelInitialize
osThreadNew
osKernelStart
