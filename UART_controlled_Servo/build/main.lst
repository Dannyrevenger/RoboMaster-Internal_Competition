ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB76:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                             www.st.com/SLA0044
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "cmsis_os.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** #include <stdio.h>
  27:Core/Src/main.c **** #include <stdlib.h>
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** UART_HandleTypeDef huart1;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Definitions for readUART_Servo */
  50:Core/Src/main.c **** osThreadId_t readUART_ServoHandle;
  51:Core/Src/main.c **** const osThreadAttr_t readUART_Servo_attributes = {
  52:Core/Src/main.c ****   .name = "readUART_Servo",
  53:Core/Src/main.c ****   .stack_size = 128 * 4,
  54:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityNormal,
  55:Core/Src/main.c **** };
  56:Core/Src/main.c **** /* Definitions for Servo01 */
  57:Core/Src/main.c **** osThreadId_t Servo01Handle;
  58:Core/Src/main.c **** const osThreadAttr_t Servo01_attributes = {
  59:Core/Src/main.c ****   .name = "Servo01",
  60:Core/Src/main.c ****   .stack_size = 128 * 4,
  61:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityNormal,
  62:Core/Src/main.c **** };
  63:Core/Src/main.c **** /* USER CODE BEGIN PV */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END PV */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  68:Core/Src/main.c **** void SystemClock_Config(void);
  69:Core/Src/main.c **** static void MX_GPIO_Init(void);
  70:Core/Src/main.c **** static void MX_TIM2_Init(void);
  71:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  72:Core/Src/main.c **** void StartReadUART_Servo(void *argument);
  73:Core/Src/main.c **** void StartServo01(void *argument);
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* USER CODE END PFP */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  80:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  81:Core/Src/main.c **** float current_pos1 = 750;
  82:Core/Src/main.c **** float current_pos2 = 750;
  83:Core/Src/main.c **** /* USER CODE END 0 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /**
  86:Core/Src/main.c ****   * @brief  The application entry point.
  87:Core/Src/main.c ****   * @retval int
  88:Core/Src/main.c ****   */
  89:Core/Src/main.c **** int main(void)
  90:Core/Src/main.c **** {
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END 1 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  98:Core/Src/main.c ****   HAL_Init();
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE END Init */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Configure the system clock */
 105:Core/Src/main.c ****   SystemClock_Config();
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE END SysInit */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* Initialize all configured peripherals */
 112:Core/Src/main.c ****   MX_GPIO_Init();
 113:Core/Src/main.c ****   MX_TIM2_Init();
 114:Core/Src/main.c ****   MX_USART1_UART_Init();
 115:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 116:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 117:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 118:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_1, (uint16_t )current_pos1); //go to initial position
 119:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_2, (uint16_t )current_pos2); //go to initial position
 120:Core/Src/main.c ****   /* USER CODE END 2 */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* Init scheduler */
 123:Core/Src/main.c ****   osKernelInitialize();
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 126:Core/Src/main.c ****   /* add mutexes, ... */
 127:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 130:Core/Src/main.c ****   /* add semaphores, ... */
 131:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 134:Core/Src/main.c ****   /* start timers, add new ones, ... */
 135:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 138:Core/Src/main.c ****   /* add queues, ... */
 139:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /* Create the thread(s) */
 142:Core/Src/main.c ****   /* creation of readUART_Servo */
 143:Core/Src/main.c ****   readUART_ServoHandle = osThreadNew(StartReadUART_Servo, NULL, &readUART_Servo_attributes);
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   /* creation of Servo01 */
 146:Core/Src/main.c ****   Servo01Handle = osThreadNew(StartServo01, NULL, &Servo01_attributes);
 147:Core/Src/main.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 4


 148:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 149:Core/Src/main.c ****   /* add threads, ... */
 150:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 153:Core/Src/main.c ****   /* add events, ... */
 154:Core/Src/main.c ****   /* USER CODE END RTOS_EVENTS */
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   /* Start scheduler */
 157:Core/Src/main.c ****   osKernelStart();
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 160:Core/Src/main.c ****   /* Infinite loop */
 161:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 162:Core/Src/main.c ****   while (1)
 163:Core/Src/main.c ****   {
 164:Core/Src/main.c ****     /* USER CODE END WHILE */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 167:Core/Src/main.c ****   }
 168:Core/Src/main.c ****   /* USER CODE END 3 */
 169:Core/Src/main.c **** }
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** /**
 172:Core/Src/main.c ****   * @brief System Clock Configuration
 173:Core/Src/main.c ****   * @retval None
 174:Core/Src/main.c ****   */
 175:Core/Src/main.c **** void SystemClock_Config(void)
 176:Core/Src/main.c **** {
 177:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 178:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 181:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 182:Core/Src/main.c ****   */
 183:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 184:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 186:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 187:Core/Src/main.c ****   {
 188:Core/Src/main.c ****     Error_Handler();
 189:Core/Src/main.c ****   }
 190:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 191:Core/Src/main.c ****   */
 192:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 193:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 194:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;
 195:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 196:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 197:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 200:Core/Src/main.c ****   {
 201:Core/Src/main.c ****     Error_Handler();
 202:Core/Src/main.c ****   }
 203:Core/Src/main.c **** }
 204:Core/Src/main.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 5


 205:Core/Src/main.c **** /**
 206:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 207:Core/Src/main.c ****   * @param None
 208:Core/Src/main.c ****   * @retval None
 209:Core/Src/main.c ****   */
 210:Core/Src/main.c **** static void MX_TIM2_Init(void)
 211:Core/Src/main.c **** {
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 218:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 219:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 224:Core/Src/main.c ****   htim2.Instance = TIM2;
 225:Core/Src/main.c ****   htim2.Init.Prescaler = 15;
 226:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 227:Core/Src/main.c ****   htim2.Init.Period = 9999;
 228:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 229:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 230:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 231:Core/Src/main.c ****   {
 232:Core/Src/main.c ****     Error_Handler();
 233:Core/Src/main.c ****   }
 234:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 235:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 236:Core/Src/main.c ****   {
 237:Core/Src/main.c ****     Error_Handler();
 238:Core/Src/main.c ****   }
 239:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 240:Core/Src/main.c ****   {
 241:Core/Src/main.c ****     Error_Handler();
 242:Core/Src/main.c ****   }
 243:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 244:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 245:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 246:Core/Src/main.c ****   {
 247:Core/Src/main.c ****     Error_Handler();
 248:Core/Src/main.c ****   }
 249:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 250:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 251:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 252:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 253:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 254:Core/Src/main.c ****   {
 255:Core/Src/main.c ****     Error_Handler();
 256:Core/Src/main.c ****   }
 257:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 258:Core/Src/main.c ****   {
 259:Core/Src/main.c ****     Error_Handler();
 260:Core/Src/main.c ****   }
 261:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 6


 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 264:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim2);
 265:Core/Src/main.c **** 
 266:Core/Src/main.c **** }
 267:Core/Src/main.c **** 
 268:Core/Src/main.c **** /**
 269:Core/Src/main.c ****   * @brief USART1 Initialization Function
 270:Core/Src/main.c ****   * @param None
 271:Core/Src/main.c ****   * @retval None
 272:Core/Src/main.c ****   */
 273:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 274:Core/Src/main.c **** {
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 283:Core/Src/main.c ****   huart1.Instance = USART1;
 284:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 285:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_9B;
 286:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 287:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_EVEN;
 288:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 289:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 290:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 291:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 292:Core/Src/main.c ****   {
 293:Core/Src/main.c ****     Error_Handler();
 294:Core/Src/main.c ****   }
 295:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 298:Core/Src/main.c **** 
 299:Core/Src/main.c **** }
 300:Core/Src/main.c **** 
 301:Core/Src/main.c **** /**
 302:Core/Src/main.c ****   * @brief GPIO Initialization Function
 303:Core/Src/main.c ****   * @param None
 304:Core/Src/main.c ****   * @retval None
 305:Core/Src/main.c ****   */
 306:Core/Src/main.c **** static void MX_GPIO_Init(void)
 307:Core/Src/main.c **** {
  26              		.loc 1 307 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 310:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 7


  34              		.loc 1 310 3 view .LVU1
  35              	.LBB4:
  36              		.loc 1 310 3 view .LVU2
  37              		.loc 1 310 3 view .LVU3
  38 0002 0A4B     		ldr	r3, .L3
  39 0004 9A69     		ldr	r2, [r3, #24]
  40 0006 42F02002 		orr	r2, r2, #32
  41 000a 9A61     		str	r2, [r3, #24]
  42              		.loc 1 310 3 view .LVU4
  43 000c 9A69     		ldr	r2, [r3, #24]
  44 000e 02F02002 		and	r2, r2, #32
  45 0012 0092     		str	r2, [sp]
  46              		.loc 1 310 3 view .LVU5
  47 0014 009A     		ldr	r2, [sp]
  48              	.LBE4:
 311:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  49              		.loc 1 311 3 view .LVU6
  50              	.LBB5:
  51              		.loc 1 311 3 view .LVU7
  52              		.loc 1 311 3 view .LVU8
  53 0016 9A69     		ldr	r2, [r3, #24]
  54 0018 42F00402 		orr	r2, r2, #4
  55 001c 9A61     		str	r2, [r3, #24]
  56              		.loc 1 311 3 view .LVU9
  57 001e 9B69     		ldr	r3, [r3, #24]
  58 0020 03F00403 		and	r3, r3, #4
  59 0024 0193     		str	r3, [sp, #4]
  60              		.loc 1 311 3 view .LVU10
  61 0026 019B     		ldr	r3, [sp, #4]
  62              	.LBE5:
 312:Core/Src/main.c **** 
 313:Core/Src/main.c **** }
  63              		.loc 1 313 1 is_stmt 0 view .LVU11
  64 0028 02B0     		add	sp, sp, #8
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 0
  67              		@ sp needed
  68 002a 7047     		bx	lr
  69              	.L4:
  70              		.align	2
  71              	.L3:
  72 002c 00100240 		.word	1073876992
  73              		.cfi_endproc
  74              	.LFE76:
  76              		.global	__aeabi_i2f
  77              		.global	__aeabi_fcmpgt
  78              		.global	__aeabi_fcmplt
  79              		.global	__aeabi_f2d
  80              		.global	__aeabi_dmul
  81              		.global	__aeabi_dadd
  82              		.global	__aeabi_d2f
  83              		.global	__aeabi_f2uiz
  84              		.global	__aeabi_fsub
  85              		.global	__aeabi_f2iz
  86              		.section	.text.StartReadUART_Servo,"ax",%progbits
  87              		.align	1
  88              		.global	StartReadUART_Servo
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 8


  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu softvfp
  94              	StartReadUART_Servo:
  95              	.LFB77:
 314:Core/Src/main.c **** 
 315:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 316:Core/Src/main.c **** 
 317:Core/Src/main.c **** /* USER CODE END 4 */
 318:Core/Src/main.c **** 
 319:Core/Src/main.c **** /* USER CODE BEGIN Header_StartReadUART_Servo */
 320:Core/Src/main.c **** /**
 321:Core/Src/main.c ****   * @brief  Function implementing the readUART_Servo thread.
 322:Core/Src/main.c ****   * @param  argument: Not used
 323:Core/Src/main.c ****   * @retval None
 324:Core/Src/main.c ****   */
 325:Core/Src/main.c **** /* USER CODE END Header_StartReadUART_Servo */
 326:Core/Src/main.c **** void StartReadUART_Servo(void *argument)
 327:Core/Src/main.c **** {
  96              		.loc 1 327 1 is_stmt 1 view -0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 72
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              	.LVL0:
 101              		.loc 1 327 1 is_stmt 0 view .LVU13
 102 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 103              	.LCFI2:
 104              		.cfi_def_cfa_offset 28
 105              		.cfi_offset 4, -28
 106              		.cfi_offset 5, -24
 107              		.cfi_offset 6, -20
 108              		.cfi_offset 7, -16
 109              		.cfi_offset 8, -12
 110              		.cfi_offset 9, -8
 111              		.cfi_offset 14, -4
 112 0004 93B0     		sub	sp, sp, #76
 113              	.LCFI3:
 114              		.cfi_def_cfa_offset 104
 115 0006 C1E0     		b	.L16
 116              	.LVL1:
 117              	.L24:
 118              	.LBB6:
 119              	.LBB7:
 120              	.LBB8:
 328:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 329:Core/Src/main.c ****   /* Infinite loop */
 330:Core/Src/main.c ****   for(;;)
 331:Core/Src/main.c ****   {
 332:Core/Src/main.c ****     char buffer[8];
 333:Core/Src/main.c ****     char msg[50];
 334:Core/Src/main.c ****     uint8_t arr[9] = {0};
 335:Core/Src/main.c ****     uint16_t i = 0;
 336:Core/Src/main.c ****     float goal_pos1 = 0, goal_pos2 = 0;
 337:Core/Src/main.c ****     if (HAL_UART_Receive(&huart1, buffer, 1, 1000) == HAL_OK && buffer[0] == '!') //only read if se
 338:Core/Src/main.c ****     {
 339:Core/Src/main.c ****       while (buffer[0] != '#') //loop till encounter the end char "#"
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 9


 340:Core/Src/main.c ****       {
 341:Core/Src/main.c ****         HAL_UART_Receive(&huart1, buffer, 1, 1000);
 342:Core/Src/main.c ****         if (buffer[0] == ':') //save all char before ":" in goal_pos
 343:Core/Src/main.c ****         {
 344:Core/Src/main.c ****           i = 0;
 121              		.loc 1 344 11 is_stmt 1 view .LVU14
 345:Core/Src/main.c ****           goal_pos1 = atoi(arr);
 122              		.loc 1 345 11 view .LVU15
 123              		.loc 1 345 23 is_stmt 0 view .LVU16
 124 0008 02A8     		add	r0, sp, #8
 125 000a FFF7FEFF 		bl	atoi
 126              	.LVL2:
 127              		.loc 1 345 21 view .LVU17
 128 000e FFF7FEFF 		bl	__aeabi_i2f
 129              	.LVL3:
 130 0012 0546     		mov	r5, r0
 131              	.LVL4:
 346:Core/Src/main.c ****           memset(&arr[0], 0, sizeof(arr)); //clear arr array
 132              		.loc 1 346 11 is_stmt 1 view .LVU18
 133 0014 0024     		movs	r4, #0
 134 0016 0294     		str	r4, [sp, #8]
 135 0018 0394     		str	r4, [sp, #12]
 136 001a 8DF81040 		strb	r4, [sp, #16]
 347:Core/Src/main.c ****           continue;
 137              		.loc 1 347 11 view .LVU19
 138 001e 07E0     		b	.L7
 139              	.LVL5:
 140              	.L10:
 141              		.loc 1 347 11 is_stmt 0 view .LVU20
 142              	.LBE8:
 348:Core/Src/main.c ****         }
 349:Core/Src/main.c ****         if (buffer[0] == '#') //add all char before "#" to goal_pos
 350:Core/Src/main.c ****         {
 351:Core/Src/main.c ****           goal_pos2 = atoi(arr);
 352:Core/Src/main.c ****           memset(&arr[0], 0, sizeof(arr)); //clear arr array
 353:Core/Src/main.c ****         }
 354:Core/Src/main.c ****         arr[i] = buffer[0]; //add buffer char to array
 143              		.loc 1 354 9 is_stmt 1 view .LVU21
 144              		.loc 1 354 24 is_stmt 0 view .LVU22
 145 0020 9DF80020 		ldrb	r2, [sp]	@ zero_extendqisi2
 146              		.loc 1 354 16 view .LVU23
 147 0024 12AB     		add	r3, sp, #72
 148 0026 2344     		add	r3, r3, r4
 149 0028 03F8402C 		strb	r2, [r3, #-64]
 355:Core/Src/main.c ****         i++;
 150              		.loc 1 355 9 is_stmt 1 view .LVU24
 151              		.loc 1 355 10 is_stmt 0 view .LVU25
 152 002c 0134     		adds	r4, r4, #1
 153              	.LVL6:
 154              		.loc 1 355 10 view .LVU26
 155 002e A4B2     		uxth	r4, r4
 156              	.LVL7:
 157              	.L7:
 339:Core/Src/main.c ****       {
 158              		.loc 1 339 20 view .LVU27
 159 0030 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 339:Core/Src/main.c ****       {
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 10


 160              		.loc 1 339 13 view .LVU28
 161 0034 232B     		cmp	r3, #35
 162 0036 18D0     		beq	.L23
 341:Core/Src/main.c ****         if (buffer[0] == ':') //save all char before ":" in goal_pos
 163              		.loc 1 341 9 is_stmt 1 view .LVU29
 164 0038 4FF47A73 		mov	r3, #1000
 165 003c 0122     		movs	r2, #1
 166 003e 6946     		mov	r1, sp
 167 0040 6148     		ldr	r0, .L25+16
 168 0042 FFF7FEFF 		bl	HAL_UART_Receive
 169              	.LVL8:
 342:Core/Src/main.c ****         {
 170              		.loc 1 342 9 view .LVU30
 342:Core/Src/main.c ****         {
 171              		.loc 1 342 19 is_stmt 0 view .LVU31
 172 0046 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 342:Core/Src/main.c ****         {
 173              		.loc 1 342 12 view .LVU32
 174 004a 3A2B     		cmp	r3, #58
 175 004c DCD0     		beq	.L24
 349:Core/Src/main.c ****         {
 176              		.loc 1 349 9 is_stmt 1 view .LVU33
 349:Core/Src/main.c ****         {
 177              		.loc 1 349 12 is_stmt 0 view .LVU34
 178 004e 232B     		cmp	r3, #35
 179 0050 E6D1     		bne	.L10
 180              	.LBB9:
 351:Core/Src/main.c ****           memset(&arr[0], 0, sizeof(arr)); //clear arr array
 181              		.loc 1 351 11 is_stmt 1 view .LVU35
 351:Core/Src/main.c ****           memset(&arr[0], 0, sizeof(arr)); //clear arr array
 182              		.loc 1 351 23 is_stmt 0 view .LVU36
 183 0052 02A8     		add	r0, sp, #8
 184 0054 FFF7FEFF 		bl	atoi
 185              	.LVL9:
 351:Core/Src/main.c ****           memset(&arr[0], 0, sizeof(arr)); //clear arr array
 186              		.loc 1 351 21 view .LVU37
 187 0058 FFF7FEFF 		bl	__aeabi_i2f
 188              	.LVL10:
 189 005c 0646     		mov	r6, r0
 190              	.LVL11:
 352:Core/Src/main.c ****         }
 191              		.loc 1 352 11 is_stmt 1 view .LVU38
 192 005e 0023     		movs	r3, #0
 193 0060 0293     		str	r3, [sp, #8]
 194 0062 0393     		str	r3, [sp, #12]
 195 0064 8DF81030 		strb	r3, [sp, #16]
 196 0068 DAE7     		b	.L10
 197              	.LVL12:
 198              	.L23:
 352:Core/Src/main.c ****         }
 199              		.loc 1 352 11 is_stmt 0 view .LVU39
 200              	.LBE9:
 356:Core/Src/main.c ****       }
 357:Core/Src/main.c ****       // keep pwm values between 250 and 1250
 358:Core/Src/main.c ****       if(goal_pos1>1250){
 201              		.loc 1 358 7 is_stmt 1 view .LVU40
 202              		.loc 1 358 9 is_stmt 0 view .LVU41
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 11


 203 006a 5849     		ldr	r1, .L25+20
 204 006c 2846     		mov	r0, r5
 205 006e FFF7FEFF 		bl	__aeabi_fcmpgt
 206              	.LVL13:
 207 0072 30B9     		cbnz	r0, .L18
 359:Core/Src/main.c ****         goal_pos1 = 1250;
 360:Core/Src/main.c ****       }
 361:Core/Src/main.c ****       else if(goal_pos1<250){
 208              		.loc 1 361 12 is_stmt 1 view .LVU42
 209              		.loc 1 361 14 is_stmt 0 view .LVU43
 210 0074 5649     		ldr	r1, .L25+24
 211 0076 2846     		mov	r0, r5
 212 0078 FFF7FEFF 		bl	__aeabi_fcmplt
 213              	.LVL14:
 214 007c 10B1     		cbz	r0, .L12
 362:Core/Src/main.c ****         goal_pos1 = 250;
 215              		.loc 1 362 19 view .LVU44
 216 007e 544D     		ldr	r5, .L25+24
 217              	.LVL15:
 218              		.loc 1 362 19 view .LVU45
 219 0080 00E0     		b	.L12
 220              	.LVL16:
 221              	.L18:
 359:Core/Src/main.c ****         goal_pos1 = 1250;
 222              		.loc 1 359 19 view .LVU46
 223 0082 524D     		ldr	r5, .L25+20
 224              	.LVL17:
 225              	.L12:
 363:Core/Src/main.c ****       }
 364:Core/Src/main.c **** 
 365:Core/Src/main.c ****       if(goal_pos2>1250){
 226              		.loc 1 365 7 is_stmt 1 view .LVU47
 227              		.loc 1 365 9 is_stmt 0 view .LVU48
 228 0084 5149     		ldr	r1, .L25+20
 229 0086 3046     		mov	r0, r6
 230 0088 FFF7FEFF 		bl	__aeabi_fcmpgt
 231              	.LVL18:
 232 008c 30B9     		cbnz	r0, .L20
 366:Core/Src/main.c ****         goal_pos2 = 1250;
 367:Core/Src/main.c ****       }
 368:Core/Src/main.c ****       else if(goal_pos2<250){
 233              		.loc 1 368 12 is_stmt 1 view .LVU49
 234              		.loc 1 368 14 is_stmt 0 view .LVU50
 235 008e 5049     		ldr	r1, .L25+24
 236 0090 3046     		mov	r0, r6
 237 0092 FFF7FEFF 		bl	__aeabi_fcmplt
 238              	.LVL19:
 239 0096 38B1     		cbz	r0, .L15
 369:Core/Src/main.c ****         goal_pos2 = 250;
 240              		.loc 1 369 19 view .LVU51
 241 0098 4D4E     		ldr	r6, .L25+24
 242              	.LVL20:
 243              		.loc 1 369 19 view .LVU52
 244 009a 05E0     		b	.L15
 245              	.LVL21:
 246              	.L20:
 366:Core/Src/main.c ****         goal_pos2 = 1250;
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 12


 247              		.loc 1 366 19 view .LVU53
 248 009c 4B4E     		ldr	r6, .L25+20
 249              	.LVL22:
 366:Core/Src/main.c ****         goal_pos2 = 1250;
 250              		.loc 1 366 19 view .LVU54
 251 009e 03E0     		b	.L15
 252              	.LVL23:
 253              	.L14:
 254              	.LBB10:
 370:Core/Src/main.c ****       }
 371:Core/Src/main.c ****       
 372:Core/Src/main.c ****       // sprintf(msg, "Set servo to: %f \n\r", goal_pos);
 373:Core/Src/main.c ****       // HAL_UART_Transmit(&huart1, msg, strlen(msg), 1000);
 374:Core/Src/main.c ****       float servo1Smoothed;
 375:Core/Src/main.c ****       float servo2Smoothed;
 376:Core/Src/main.c ****       
 377:Core/Src/main.c ****       while(1){
 378:Core/Src/main.c ****         servo1Smoothed = (goal_pos1 * 0.05) + (current_pos1 * 0.95);
 379:Core/Src/main.c ****         servo2Smoothed = (goal_pos2 * 0.05) + (current_pos2 * 0.95);
 380:Core/Src/main.c ****         
 381:Core/Src/main.c ****         __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_1, (uint16_t )servo1Smoothed);
 382:Core/Src/main.c ****         __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_2, (uint16_t )servo2Smoothed);
 383:Core/Src/main.c ****         sprintf(msg, "servo smoothed: %f \n\r", servo1Smoothed);
 384:Core/Src/main.c ****         HAL_UART_Transmit(&huart1, msg, strlen(msg), 1000);
 385:Core/Src/main.c ****         osDelay(10);
 386:Core/Src/main.c ****         if (abs(servo1Smoothed - goal_pos1)<10 && abs(servo2Smoothed - goal_pos2)<10){
 387:Core/Src/main.c ****           break;
 388:Core/Src/main.c ****         }
 389:Core/Src/main.c ****         current_pos1 = servo1Smoothed;
 255              		.loc 1 389 9 is_stmt 1 view .LVU55
 256              		.loc 1 389 22 is_stmt 0 view .LVU56
 257 00a0 4C4B     		ldr	r3, .L25+28
 258 00a2 1C60     		str	r4, [r3]	@ float
 390:Core/Src/main.c ****         current_pos2 = servo2Smoothed;
 259              		.loc 1 390 9 is_stmt 1 view .LVU57
 260              		.loc 1 390 22 is_stmt 0 view .LVU58
 261 00a4 4C4B     		ldr	r3, .L25+32
 262 00a6 1F60     		str	r7, [r3]	@ float
 263              	.LVL24:
 264              	.L15:
 265              		.loc 1 390 22 view .LVU59
 266              	.LBE10:
 374:Core/Src/main.c ****       float servo2Smoothed;
 267              		.loc 1 374 7 is_stmt 1 view .LVU60
 375:Core/Src/main.c ****       
 268              		.loc 1 375 7 view .LVU61
 377:Core/Src/main.c ****         servo1Smoothed = (goal_pos1 * 0.05) + (current_pos1 * 0.95);
 269              		.loc 1 377 7 view .LVU62
 270              	.LBB11:
 378:Core/Src/main.c ****         servo2Smoothed = (goal_pos2 * 0.05) + (current_pos2 * 0.95);
 271              		.loc 1 378 9 view .LVU63
 378:Core/Src/main.c ****         servo2Smoothed = (goal_pos2 * 0.05) + (current_pos2 * 0.95);
 272              		.loc 1 378 37 is_stmt 0 view .LVU64
 273 00a8 2846     		mov	r0, r5
 274 00aa FFF7FEFF 		bl	__aeabi_f2d
 275              	.LVL25:
 276 00ae 42A3     		adr	r3, .L25
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 13


 277 00b0 D3E90023 		ldrd	r2, [r3]
 278 00b4 FFF7FEFF 		bl	__aeabi_dmul
 279              	.LVL26:
 280 00b8 8046     		mov	r8, r0
 281 00ba 8946     		mov	r9, r1
 378:Core/Src/main.c ****         servo2Smoothed = (goal_pos2 * 0.05) + (current_pos2 * 0.95);
 282              		.loc 1 378 61 view .LVU65
 283 00bc 454B     		ldr	r3, .L25+28
 284 00be 1868     		ldr	r0, [r3]	@ float
 285 00c0 FFF7FEFF 		bl	__aeabi_f2d
 286              	.LVL27:
 287 00c4 3EA3     		adr	r3, .L25+8
 288 00c6 D3E90023 		ldrd	r2, [r3]
 289 00ca FFF7FEFF 		bl	__aeabi_dmul
 290              	.LVL28:
 378:Core/Src/main.c ****         servo2Smoothed = (goal_pos2 * 0.05) + (current_pos2 * 0.95);
 291              		.loc 1 378 45 view .LVU66
 292 00ce 0246     		mov	r2, r0
 293 00d0 0B46     		mov	r3, r1
 294 00d2 4046     		mov	r0, r8
 295 00d4 4946     		mov	r1, r9
 296 00d6 FFF7FEFF 		bl	__aeabi_dadd
 297              	.LVL29:
 378:Core/Src/main.c ****         servo2Smoothed = (goal_pos2 * 0.05) + (current_pos2 * 0.95);
 298              		.loc 1 378 24 view .LVU67
 299 00da FFF7FEFF 		bl	__aeabi_d2f
 300              	.LVL30:
 301 00de 0446     		mov	r4, r0
 302              	.LVL31:
 379:Core/Src/main.c ****         
 303              		.loc 1 379 9 is_stmt 1 view .LVU68
 379:Core/Src/main.c ****         
 304              		.loc 1 379 37 is_stmt 0 view .LVU69
 305 00e0 3046     		mov	r0, r6
 306              	.LVL32:
 379:Core/Src/main.c ****         
 307              		.loc 1 379 37 view .LVU70
 308 00e2 FFF7FEFF 		bl	__aeabi_f2d
 309              	.LVL33:
 310 00e6 34A3     		adr	r3, .L25
 311 00e8 D3E90023 		ldrd	r2, [r3]
 312 00ec FFF7FEFF 		bl	__aeabi_dmul
 313              	.LVL34:
 314 00f0 8046     		mov	r8, r0
 315 00f2 8946     		mov	r9, r1
 379:Core/Src/main.c ****         
 316              		.loc 1 379 61 view .LVU71
 317 00f4 384B     		ldr	r3, .L25+32
 318 00f6 1868     		ldr	r0, [r3]	@ float
 319 00f8 FFF7FEFF 		bl	__aeabi_f2d
 320              	.LVL35:
 321 00fc 30A3     		adr	r3, .L25+8
 322 00fe D3E90023 		ldrd	r2, [r3]
 323 0102 FFF7FEFF 		bl	__aeabi_dmul
 324              	.LVL36:
 379:Core/Src/main.c ****         
 325              		.loc 1 379 45 view .LVU72
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 14


 326 0106 0246     		mov	r2, r0
 327 0108 0B46     		mov	r3, r1
 328 010a 4046     		mov	r0, r8
 329 010c 4946     		mov	r1, r9
 330 010e FFF7FEFF 		bl	__aeabi_dadd
 331              	.LVL37:
 379:Core/Src/main.c ****         
 332              		.loc 1 379 24 view .LVU73
 333 0112 FFF7FEFF 		bl	__aeabi_d2f
 334              	.LVL38:
 335 0116 0746     		mov	r7, r0
 336              	.LVL39:
 381:Core/Src/main.c ****         __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_2, (uint16_t )servo2Smoothed);
 337              		.loc 1 381 9 is_stmt 1 view .LVU74
 338 0118 304B     		ldr	r3, .L25+36
 339 011a D3F80080 		ldr	r8, [r3]
 340 011e 2046     		mov	r0, r4
 341              	.LVL40:
 381:Core/Src/main.c ****         __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_2, (uint16_t )servo2Smoothed);
 342              		.loc 1 381 9 is_stmt 0 view .LVU75
 343 0120 FFF7FEFF 		bl	__aeabi_f2uiz
 344              	.LVL41:
 345 0124 80B2     		uxth	r0, r0
 346 0126 C8F83400 		str	r0, [r8, #52]
 382:Core/Src/main.c ****         sprintf(msg, "servo smoothed: %f \n\r", servo1Smoothed);
 347              		.loc 1 382 9 is_stmt 1 view .LVU76
 348 012a 3846     		mov	r0, r7
 349 012c FFF7FEFF 		bl	__aeabi_f2uiz
 350              	.LVL42:
 351 0130 80B2     		uxth	r0, r0
 352 0132 C8F83800 		str	r0, [r8, #56]
 383:Core/Src/main.c ****         HAL_UART_Transmit(&huart1, msg, strlen(msg), 1000);
 353              		.loc 1 383 9 view .LVU77
 354 0136 2046     		mov	r0, r4
 355 0138 FFF7FEFF 		bl	__aeabi_f2d
 356              	.LVL43:
 357 013c 0246     		mov	r2, r0
 358 013e 0B46     		mov	r3, r1
 359 0140 2749     		ldr	r1, .L25+40
 360 0142 05A8     		add	r0, sp, #20
 361 0144 FFF7FEFF 		bl	sprintf
 362              	.LVL44:
 384:Core/Src/main.c ****         osDelay(10);
 363              		.loc 1 384 9 view .LVU78
 384:Core/Src/main.c ****         osDelay(10);
 364              		.loc 1 384 41 is_stmt 0 view .LVU79
 365 0148 05A8     		add	r0, sp, #20
 366 014a FFF7FEFF 		bl	strlen
 367              	.LVL45:
 384:Core/Src/main.c ****         osDelay(10);
 368              		.loc 1 384 9 view .LVU80
 369 014e 4FF47A73 		mov	r3, #1000
 370 0152 82B2     		uxth	r2, r0
 371 0154 05A9     		add	r1, sp, #20
 372 0156 1C48     		ldr	r0, .L25+16
 373 0158 FFF7FEFF 		bl	HAL_UART_Transmit
 374              	.LVL46:
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 15


 385:Core/Src/main.c ****         if (abs(servo1Smoothed - goal_pos1)<10 && abs(servo2Smoothed - goal_pos2)<10){
 375              		.loc 1 385 9 is_stmt 1 view .LVU81
 376 015c 0A20     		movs	r0, #10
 377 015e FFF7FEFF 		bl	osDelay
 378              	.LVL47:
 386:Core/Src/main.c ****           break;
 379              		.loc 1 386 9 view .LVU82
 386:Core/Src/main.c ****           break;
 380              		.loc 1 386 32 is_stmt 0 view .LVU83
 381 0162 2946     		mov	r1, r5
 382 0164 2046     		mov	r0, r4
 383 0166 FFF7FEFF 		bl	__aeabi_fsub
 384              	.LVL48:
 386:Core/Src/main.c ****           break;
 385              		.loc 1 386 44 view .LVU84
 386 016a FFF7FEFF 		bl	__aeabi_f2iz
 387              	.LVL49:
 388 016e 0930     		adds	r0, r0, #9
 386:Core/Src/main.c ****           break;
 389              		.loc 1 386 12 view .LVU85
 390 0170 1228     		cmp	r0, #18
 391 0172 95D8     		bhi	.L14
 386:Core/Src/main.c ****           break;
 392              		.loc 1 386 70 discriminator 1 view .LVU86
 393 0174 3146     		mov	r1, r6
 394 0176 3846     		mov	r0, r7
 395 0178 FFF7FEFF 		bl	__aeabi_fsub
 396              	.LVL50:
 386:Core/Src/main.c ****           break;
 397              		.loc 1 386 82 discriminator 1 view .LVU87
 398 017c FFF7FEFF 		bl	__aeabi_f2iz
 399              	.LVL51:
 400 0180 0930     		adds	r0, r0, #9
 386:Core/Src/main.c ****           break;
 401              		.loc 1 386 48 discriminator 1 view .LVU88
 402 0182 1228     		cmp	r0, #18
 403 0184 8CD8     		bhi	.L14
 404              	.LVL52:
 405              	.L6:
 386:Core/Src/main.c ****           break;
 406              		.loc 1 386 48 discriminator 1 view .LVU89
 407              	.LBE11:
 408              	.LBE7:
 391:Core/Src/main.c ****       }
 392:Core/Src/main.c ****     }
 393:Core/Src/main.c ****     osDelay(1);
 409              		.loc 1 393 5 is_stmt 1 view .LVU90
 410 0186 0120     		movs	r0, #1
 411 0188 FFF7FEFF 		bl	osDelay
 412              	.LVL53:
 413              	.L16:
 414              	.LBE6:
 330:Core/Src/main.c ****   {
 415              		.loc 1 330 3 view .LVU91
 416              	.LBB12:
 332:Core/Src/main.c ****     char msg[50];
 417              		.loc 1 332 5 view .LVU92
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 16


 333:Core/Src/main.c ****     uint8_t arr[9] = {0};
 418              		.loc 1 333 5 view .LVU93
 334:Core/Src/main.c ****     uint16_t i = 0;
 419              		.loc 1 334 5 view .LVU94
 334:Core/Src/main.c ****     uint16_t i = 0;
 420              		.loc 1 334 13 is_stmt 0 view .LVU95
 421 018c 0023     		movs	r3, #0
 422 018e 0293     		str	r3, [sp, #8]
 423 0190 0393     		str	r3, [sp, #12]
 424 0192 8DF81030 		strb	r3, [sp, #16]
 335:Core/Src/main.c ****     float goal_pos1 = 0, goal_pos2 = 0;
 425              		.loc 1 335 5 is_stmt 1 view .LVU96
 426              	.LVL54:
 336:Core/Src/main.c ****     if (HAL_UART_Receive(&huart1, buffer, 1, 1000) == HAL_OK && buffer[0] == '!') //only read if se
 427              		.loc 1 336 5 view .LVU97
 337:Core/Src/main.c ****     {
 428              		.loc 1 337 5 view .LVU98
 337:Core/Src/main.c ****     {
 429              		.loc 1 337 9 is_stmt 0 view .LVU99
 430 0196 4FF47A73 		mov	r3, #1000
 431 019a 0122     		movs	r2, #1
 432 019c 6946     		mov	r1, sp
 433 019e 0A48     		ldr	r0, .L25+16
 434 01a0 FFF7FEFF 		bl	HAL_UART_Receive
 435              	.LVL55:
 337:Core/Src/main.c ****     {
 436              		.loc 1 337 8 view .LVU100
 437 01a4 0028     		cmp	r0, #0
 438 01a6 EED1     		bne	.L6
 337:Core/Src/main.c ****     {
 439              		.loc 1 337 71 discriminator 1 view .LVU101
 440 01a8 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 337:Core/Src/main.c ****     {
 441              		.loc 1 337 62 discriminator 1 view .LVU102
 442 01ac 212B     		cmp	r3, #33
 443 01ae EAD1     		bne	.L6
 336:Core/Src/main.c ****     if (HAL_UART_Receive(&huart1, buffer, 1, 1000) == HAL_OK && buffer[0] == '!') //only read if se
 444              		.loc 1 336 26 view .LVU103
 445 01b0 0026     		movs	r6, #0
 336:Core/Src/main.c ****     if (HAL_UART_Receive(&huart1, buffer, 1, 1000) == HAL_OK && buffer[0] == '!') //only read if se
 446              		.loc 1 336 11 view .LVU104
 447 01b2 3546     		mov	r5, r6
 335:Core/Src/main.c ****     float goal_pos1 = 0, goal_pos2 = 0;
 448              		.loc 1 335 14 view .LVU105
 449 01b4 0024     		movs	r4, #0
 450 01b6 3BE7     		b	.L7
 451              	.L26:
 452              		.align	3
 453              	.L25:
 454 01b8 9A999999 		.word	-1717986918
 455 01bc 9999A93F 		.word	1068079513
 456 01c0 66666666 		.word	1717986918
 457 01c4 6666EE3F 		.word	1072588390
 458 01c8 00000000 		.word	huart1
 459 01cc 00409C44 		.word	1151090688
 460 01d0 00007A43 		.word	1132068864
 461 01d4 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 17


 462 01d8 00000000 		.word	.LANCHOR1
 463 01dc 00000000 		.word	htim2
 464 01e0 00000000 		.word	.LC0
 465              	.LBE12:
 466              		.cfi_endproc
 467              	.LFE77:
 469              		.section	.text.StartServo01,"ax",%progbits
 470              		.align	1
 471              		.global	StartServo01
 472              		.syntax unified
 473              		.thumb
 474              		.thumb_func
 475              		.fpu softvfp
 477              	StartServo01:
 478              	.LFB78:
 394:Core/Src/main.c ****   }
 395:Core/Src/main.c ****   osThreadTerminate(NULL);
 396:Core/Src/main.c ****   /* USER CODE END 5 */
 397:Core/Src/main.c **** }
 398:Core/Src/main.c **** 
 399:Core/Src/main.c **** /* USER CODE BEGIN Header_StartServo01 */
 400:Core/Src/main.c **** /**
 401:Core/Src/main.c **** * @brief Function implementing the Servo01 thread.
 402:Core/Src/main.c **** * @param argument: Not used
 403:Core/Src/main.c **** * @retval None
 404:Core/Src/main.c **** */
 405:Core/Src/main.c **** /* USER CODE END Header_StartServo01 */
 406:Core/Src/main.c **** void StartServo01(void *argument)
 407:Core/Src/main.c **** {
 479              		.loc 1 407 1 is_stmt 1 view -0
 480              		.cfi_startproc
 481              		@ Volatile: function does not return.
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484              	.LVL56:
 485              		.loc 1 407 1 is_stmt 0 view .LVU107
 486 0000 08B5     		push	{r3, lr}
 487              	.LCFI4:
 488              		.cfi_def_cfa_offset 8
 489              		.cfi_offset 3, -8
 490              		.cfi_offset 14, -4
 491              	.LVL57:
 492              	.L28:
 408:Core/Src/main.c ****   /* USER CODE BEGIN StartServo01 */
 409:Core/Src/main.c ****   /* Infinite loop */
 410:Core/Src/main.c ****   for(;;)
 493              		.loc 1 410 3 is_stmt 1 discriminator 1 view .LVU108
 411:Core/Src/main.c ****   {
 412:Core/Src/main.c ****     osDelay(1);
 494              		.loc 1 412 5 discriminator 1 view .LVU109
 495 0002 0120     		movs	r0, #1
 496 0004 FFF7FEFF 		bl	osDelay
 497              	.LVL58:
 498 0008 FBE7     		b	.L28
 499              		.cfi_endproc
 500              	.LFE78:
 502              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 18


 503              		.align	1
 504              		.global	HAL_TIM_PeriodElapsedCallback
 505              		.syntax unified
 506              		.thumb
 507              		.thumb_func
 508              		.fpu softvfp
 510              	HAL_TIM_PeriodElapsedCallback:
 511              	.LVL59:
 512              	.LFB79:
 413:Core/Src/main.c ****   }
 414:Core/Src/main.c ****   /* USER CODE END StartServo01 */
 415:Core/Src/main.c **** }
 416:Core/Src/main.c **** 
 417:Core/Src/main.c **** /**
 418:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 419:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 420:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 421:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 422:Core/Src/main.c ****   * @param  htim : TIM handle
 423:Core/Src/main.c ****   * @retval None
 424:Core/Src/main.c ****   */
 425:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 426:Core/Src/main.c **** {
 513              		.loc 1 426 1 view -0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 0
 516              		@ frame_needed = 0, uses_anonymous_args = 0
 517              		.loc 1 426 1 is_stmt 0 view .LVU111
 518 0000 08B5     		push	{r3, lr}
 519              	.LCFI5:
 520              		.cfi_def_cfa_offset 8
 521              		.cfi_offset 3, -8
 522              		.cfi_offset 14, -4
 427:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 430:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 523              		.loc 1 430 3 is_stmt 1 view .LVU112
 524              		.loc 1 430 11 is_stmt 0 view .LVU113
 525 0002 0268     		ldr	r2, [r0]
 526              		.loc 1 430 6 view .LVU114
 527 0004 034B     		ldr	r3, .L34
 528 0006 9A42     		cmp	r2, r3
 529 0008 00D0     		beq	.L33
 530              	.LVL60:
 531              	.L30:
 431:Core/Src/main.c ****     HAL_IncTick();
 432:Core/Src/main.c ****   }
 433:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 434:Core/Src/main.c **** 
 435:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 436:Core/Src/main.c **** }
 532              		.loc 1 436 1 view .LVU115
 533 000a 08BD     		pop	{r3, pc}
 534              	.LVL61:
 535              	.L33:
 431:Core/Src/main.c ****     HAL_IncTick();
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 19


 536              		.loc 1 431 5 is_stmt 1 view .LVU116
 537 000c FFF7FEFF 		bl	HAL_IncTick
 538              	.LVL62:
 539              		.loc 1 436 1 is_stmt 0 view .LVU117
 540 0010 FBE7     		b	.L30
 541              	.L35:
 542 0012 00BF     		.align	2
 543              	.L34:
 544 0014 002C0140 		.word	1073818624
 545              		.cfi_endproc
 546              	.LFE79:
 548              		.section	.text.Error_Handler,"ax",%progbits
 549              		.align	1
 550              		.global	Error_Handler
 551              		.syntax unified
 552              		.thumb
 553              		.thumb_func
 554              		.fpu softvfp
 556              	Error_Handler:
 557              	.LFB80:
 437:Core/Src/main.c **** 
 438:Core/Src/main.c **** /**
 439:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 440:Core/Src/main.c ****   * @retval None
 441:Core/Src/main.c ****   */
 442:Core/Src/main.c **** void Error_Handler(void)
 443:Core/Src/main.c **** {
 558              		.loc 1 443 1 is_stmt 1 view -0
 559              		.cfi_startproc
 560              		@ Volatile: function does not return.
 561              		@ args = 0, pretend = 0, frame = 0
 562              		@ frame_needed = 0, uses_anonymous_args = 0
 563              		@ link register save eliminated.
 444:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 445:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 446:Core/Src/main.c ****   __disable_irq();
 564              		.loc 1 446 3 view .LVU119
 565              	.LBB13:
 566              	.LBI13:
 567              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 20


  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 21


  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 22


 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 568              		.loc 2 140 27 view .LVU120
 569              	.LBB14:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 570              		.loc 2 142 3 view .LVU121
 571              		.syntax unified
 572              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 573 0000 72B6     		cpsid i
 574              	@ 0 "" 2
 575              		.thumb
 576              		.syntax unified
 577              	.L37:
 578              	.LBE14:
 579              	.LBE13:
 447:Core/Src/main.c ****   while (1)
 580              		.loc 1 447 3 discriminator 1 view .LVU122
 448:Core/Src/main.c ****   {
 449:Core/Src/main.c ****   }
 581              		.loc 1 449 3 discriminator 1 view .LVU123
 582 0002 FEE7     		b	.L37
 583              		.cfi_endproc
 584              	.LFE80:
 586              		.section	.text.MX_TIM2_Init,"ax",%progbits
 587              		.align	1
 588              		.syntax unified
 589              		.thumb
 590              		.thumb_func
 591              		.fpu softvfp
 593              	MX_TIM2_Init:
 594              	.LFB74:
 211:Core/Src/main.c **** 
 595              		.loc 1 211 1 view -0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 56
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599 0000 00B5     		push	{lr}
 600              	.LCFI6:
 601              		.cfi_def_cfa_offset 4
 602              		.cfi_offset 14, -4
 603 0002 8FB0     		sub	sp, sp, #60
 604              	.LCFI7:
 605              		.cfi_def_cfa_offset 64
 217:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 606              		.loc 1 217 3 view .LVU125
 217:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 607              		.loc 1 217 26 is_stmt 0 view .LVU126
 608 0004 0023     		movs	r3, #0
 609 0006 0A93     		str	r3, [sp, #40]
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 23


 610 0008 0B93     		str	r3, [sp, #44]
 611 000a 0C93     		str	r3, [sp, #48]
 612 000c 0D93     		str	r3, [sp, #52]
 218:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 613              		.loc 1 218 3 is_stmt 1 view .LVU127
 218:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 614              		.loc 1 218 27 is_stmt 0 view .LVU128
 615 000e 0893     		str	r3, [sp, #32]
 616 0010 0993     		str	r3, [sp, #36]
 219:Core/Src/main.c **** 
 617              		.loc 1 219 3 is_stmt 1 view .LVU129
 219:Core/Src/main.c **** 
 618              		.loc 1 219 22 is_stmt 0 view .LVU130
 619 0012 0193     		str	r3, [sp, #4]
 620 0014 0293     		str	r3, [sp, #8]
 621 0016 0393     		str	r3, [sp, #12]
 622 0018 0493     		str	r3, [sp, #16]
 623 001a 0593     		str	r3, [sp, #20]
 624 001c 0693     		str	r3, [sp, #24]
 625 001e 0793     		str	r3, [sp, #28]
 224:Core/Src/main.c ****   htim2.Init.Prescaler = 15;
 626              		.loc 1 224 3 is_stmt 1 view .LVU131
 224:Core/Src/main.c ****   htim2.Init.Prescaler = 15;
 627              		.loc 1 224 18 is_stmt 0 view .LVU132
 628 0020 2348     		ldr	r0, .L52
 629 0022 4FF08042 		mov	r2, #1073741824
 630 0026 0260     		str	r2, [r0]
 225:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 631              		.loc 1 225 3 is_stmt 1 view .LVU133
 225:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 632              		.loc 1 225 24 is_stmt 0 view .LVU134
 633 0028 0F22     		movs	r2, #15
 634 002a 4260     		str	r2, [r0, #4]
 226:Core/Src/main.c ****   htim2.Init.Period = 9999;
 635              		.loc 1 226 3 is_stmt 1 view .LVU135
 226:Core/Src/main.c ****   htim2.Init.Period = 9999;
 636              		.loc 1 226 26 is_stmt 0 view .LVU136
 637 002c 8360     		str	r3, [r0, #8]
 227:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 638              		.loc 1 227 3 is_stmt 1 view .LVU137
 227:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 639              		.loc 1 227 21 is_stmt 0 view .LVU138
 640 002e 42F20F72 		movw	r2, #9999
 641 0032 C260     		str	r2, [r0, #12]
 228:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 642              		.loc 1 228 3 is_stmt 1 view .LVU139
 228:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 643              		.loc 1 228 28 is_stmt 0 view .LVU140
 644 0034 0361     		str	r3, [r0, #16]
 229:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 645              		.loc 1 229 3 is_stmt 1 view .LVU141
 229:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 646              		.loc 1 229 32 is_stmt 0 view .LVU142
 647 0036 8361     		str	r3, [r0, #24]
 230:Core/Src/main.c ****   {
 648              		.loc 1 230 3 is_stmt 1 view .LVU143
 230:Core/Src/main.c ****   {
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 24


 649              		.loc 1 230 7 is_stmt 0 view .LVU144
 650 0038 FFF7FEFF 		bl	HAL_TIM_Base_Init
 651              	.LVL63:
 230:Core/Src/main.c ****   {
 652              		.loc 1 230 6 view .LVU145
 653 003c 58BB     		cbnz	r0, .L46
 234:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 654              		.loc 1 234 3 is_stmt 1 view .LVU146
 234:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 655              		.loc 1 234 34 is_stmt 0 view .LVU147
 656 003e 4FF48053 		mov	r3, #4096
 657 0042 0A93     		str	r3, [sp, #40]
 235:Core/Src/main.c ****   {
 658              		.loc 1 235 3 is_stmt 1 view .LVU148
 235:Core/Src/main.c ****   {
 659              		.loc 1 235 7 is_stmt 0 view .LVU149
 660 0044 0AA9     		add	r1, sp, #40
 661 0046 1A48     		ldr	r0, .L52
 662 0048 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 663              	.LVL64:
 235:Core/Src/main.c ****   {
 664              		.loc 1 235 6 view .LVU150
 665 004c 28BB     		cbnz	r0, .L47
 239:Core/Src/main.c ****   {
 666              		.loc 1 239 3 is_stmt 1 view .LVU151
 239:Core/Src/main.c ****   {
 667              		.loc 1 239 7 is_stmt 0 view .LVU152
 668 004e 1848     		ldr	r0, .L52
 669 0050 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 670              	.LVL65:
 239:Core/Src/main.c ****   {
 671              		.loc 1 239 6 view .LVU153
 672 0054 18BB     		cbnz	r0, .L48
 243:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 673              		.loc 1 243 3 is_stmt 1 view .LVU154
 243:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 674              		.loc 1 243 37 is_stmt 0 view .LVU155
 675 0056 0023     		movs	r3, #0
 676 0058 0893     		str	r3, [sp, #32]
 244:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 677              		.loc 1 244 3 is_stmt 1 view .LVU156
 244:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 678              		.loc 1 244 33 is_stmt 0 view .LVU157
 679 005a 0993     		str	r3, [sp, #36]
 245:Core/Src/main.c ****   {
 680              		.loc 1 245 3 is_stmt 1 view .LVU158
 245:Core/Src/main.c ****   {
 681              		.loc 1 245 7 is_stmt 0 view .LVU159
 682 005c 08A9     		add	r1, sp, #32
 683 005e 1448     		ldr	r0, .L52
 684 0060 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 685              	.LVL66:
 245:Core/Src/main.c ****   {
 686              		.loc 1 245 6 view .LVU160
 687 0064 E8B9     		cbnz	r0, .L49
 249:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 688              		.loc 1 249 3 is_stmt 1 view .LVU161
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 25


 249:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 689              		.loc 1 249 20 is_stmt 0 view .LVU162
 690 0066 6023     		movs	r3, #96
 691 0068 0193     		str	r3, [sp, #4]
 250:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 692              		.loc 1 250 3 is_stmt 1 view .LVU163
 250:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 693              		.loc 1 250 19 is_stmt 0 view .LVU164
 694 006a 0022     		movs	r2, #0
 695 006c 0292     		str	r2, [sp, #8]
 251:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 696              		.loc 1 251 3 is_stmt 1 view .LVU165
 251:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 697              		.loc 1 251 24 is_stmt 0 view .LVU166
 698 006e 0392     		str	r2, [sp, #12]
 252:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 699              		.loc 1 252 3 is_stmt 1 view .LVU167
 252:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 700              		.loc 1 252 24 is_stmt 0 view .LVU168
 701 0070 0592     		str	r2, [sp, #20]
 253:Core/Src/main.c ****   {
 702              		.loc 1 253 3 is_stmt 1 view .LVU169
 253:Core/Src/main.c ****   {
 703              		.loc 1 253 7 is_stmt 0 view .LVU170
 704 0072 01A9     		add	r1, sp, #4
 705 0074 0E48     		ldr	r0, .L52
 706 0076 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 707              	.LVL67:
 253:Core/Src/main.c ****   {
 708              		.loc 1 253 6 view .LVU171
 709 007a A0B9     		cbnz	r0, .L50
 257:Core/Src/main.c ****   {
 710              		.loc 1 257 3 is_stmt 1 view .LVU172
 257:Core/Src/main.c ****   {
 711              		.loc 1 257 7 is_stmt 0 view .LVU173
 712 007c 0422     		movs	r2, #4
 713 007e 0DEB0201 		add	r1, sp, r2
 714 0082 0B48     		ldr	r0, .L52
 715 0084 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 716              	.LVL68:
 257:Core/Src/main.c ****   {
 717              		.loc 1 257 6 view .LVU174
 718 0088 78B9     		cbnz	r0, .L51
 264:Core/Src/main.c **** 
 719              		.loc 1 264 3 is_stmt 1 view .LVU175
 720 008a 0948     		ldr	r0, .L52
 721 008c FFF7FEFF 		bl	HAL_TIM_MspPostInit
 722              	.LVL69:
 266:Core/Src/main.c **** 
 723              		.loc 1 266 1 is_stmt 0 view .LVU176
 724 0090 0FB0     		add	sp, sp, #60
 725              	.LCFI8:
 726              		.cfi_remember_state
 727              		.cfi_def_cfa_offset 4
 728              		@ sp needed
 729 0092 5DF804FB 		ldr	pc, [sp], #4
 730              	.L46:
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 26


 731              	.LCFI9:
 732              		.cfi_restore_state
 232:Core/Src/main.c ****   }
 733              		.loc 1 232 5 is_stmt 1 view .LVU177
 734 0096 FFF7FEFF 		bl	Error_Handler
 735              	.LVL70:
 736              	.L47:
 237:Core/Src/main.c ****   }
 737              		.loc 1 237 5 view .LVU178
 738 009a FFF7FEFF 		bl	Error_Handler
 739              	.LVL71:
 740              	.L48:
 241:Core/Src/main.c ****   }
 741              		.loc 1 241 5 view .LVU179
 742 009e FFF7FEFF 		bl	Error_Handler
 743              	.LVL72:
 744              	.L49:
 247:Core/Src/main.c ****   }
 745              		.loc 1 247 5 view .LVU180
 746 00a2 FFF7FEFF 		bl	Error_Handler
 747              	.LVL73:
 748              	.L50:
 255:Core/Src/main.c ****   }
 749              		.loc 1 255 5 view .LVU181
 750 00a6 FFF7FEFF 		bl	Error_Handler
 751              	.LVL74:
 752              	.L51:
 259:Core/Src/main.c ****   }
 753              		.loc 1 259 5 view .LVU182
 754 00aa FFF7FEFF 		bl	Error_Handler
 755              	.LVL75:
 756              	.L53:
 757 00ae 00BF     		.align	2
 758              	.L52:
 759 00b0 00000000 		.word	htim2
 760              		.cfi_endproc
 761              	.LFE74:
 763              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 764              		.align	1
 765              		.syntax unified
 766              		.thumb
 767              		.thumb_func
 768              		.fpu softvfp
 770              	MX_USART1_UART_Init:
 771              	.LFB75:
 274:Core/Src/main.c **** 
 772              		.loc 1 274 1 view -0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 0
 775              		@ frame_needed = 0, uses_anonymous_args = 0
 776 0000 08B5     		push	{r3, lr}
 777              	.LCFI10:
 778              		.cfi_def_cfa_offset 8
 779              		.cfi_offset 3, -8
 780              		.cfi_offset 14, -4
 283:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 781              		.loc 1 283 3 view .LVU184
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 27


 283:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 782              		.loc 1 283 19 is_stmt 0 view .LVU185
 783 0002 0C48     		ldr	r0, .L58
 784 0004 0C4B     		ldr	r3, .L58+4
 785 0006 0360     		str	r3, [r0]
 284:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_9B;
 786              		.loc 1 284 3 is_stmt 1 view .LVU186
 284:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_9B;
 787              		.loc 1 284 24 is_stmt 0 view .LVU187
 788 0008 4FF41653 		mov	r3, #9600
 789 000c 4360     		str	r3, [r0, #4]
 285:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 790              		.loc 1 285 3 is_stmt 1 view .LVU188
 285:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 791              		.loc 1 285 26 is_stmt 0 view .LVU189
 792 000e 4FF48053 		mov	r3, #4096
 793 0012 8360     		str	r3, [r0, #8]
 286:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_EVEN;
 794              		.loc 1 286 3 is_stmt 1 view .LVU190
 286:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_EVEN;
 795              		.loc 1 286 24 is_stmt 0 view .LVU191
 796 0014 0023     		movs	r3, #0
 797 0016 C360     		str	r3, [r0, #12]
 287:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 798              		.loc 1 287 3 is_stmt 1 view .LVU192
 287:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 799              		.loc 1 287 22 is_stmt 0 view .LVU193
 800 0018 4FF48062 		mov	r2, #1024
 801 001c 0261     		str	r2, [r0, #16]
 288:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 802              		.loc 1 288 3 is_stmt 1 view .LVU194
 288:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 803              		.loc 1 288 20 is_stmt 0 view .LVU195
 804 001e 0C22     		movs	r2, #12
 805 0020 4261     		str	r2, [r0, #20]
 289:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 806              		.loc 1 289 3 is_stmt 1 view .LVU196
 289:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 807              		.loc 1 289 25 is_stmt 0 view .LVU197
 808 0022 8361     		str	r3, [r0, #24]
 290:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 809              		.loc 1 290 3 is_stmt 1 view .LVU198
 290:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 810              		.loc 1 290 28 is_stmt 0 view .LVU199
 811 0024 C361     		str	r3, [r0, #28]
 291:Core/Src/main.c ****   {
 812              		.loc 1 291 3 is_stmt 1 view .LVU200
 291:Core/Src/main.c ****   {
 813              		.loc 1 291 7 is_stmt 0 view .LVU201
 814 0026 FFF7FEFF 		bl	HAL_UART_Init
 815              	.LVL76:
 291:Core/Src/main.c ****   {
 816              		.loc 1 291 6 view .LVU202
 817 002a 00B9     		cbnz	r0, .L57
 299:Core/Src/main.c **** 
 818              		.loc 1 299 1 view .LVU203
 819 002c 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 28


 820              	.L57:
 293:Core/Src/main.c ****   }
 821              		.loc 1 293 5 is_stmt 1 view .LVU204
 822 002e FFF7FEFF 		bl	Error_Handler
 823              	.LVL77:
 824              	.L59:
 825 0032 00BF     		.align	2
 826              	.L58:
 827 0034 00000000 		.word	huart1
 828 0038 00380140 		.word	1073821696
 829              		.cfi_endproc
 830              	.LFE75:
 832              		.section	.text.SystemClock_Config,"ax",%progbits
 833              		.align	1
 834              		.global	SystemClock_Config
 835              		.syntax unified
 836              		.thumb
 837              		.thumb_func
 838              		.fpu softvfp
 840              	SystemClock_Config:
 841              	.LFB73:
 176:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 842              		.loc 1 176 1 view -0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 64
 845              		@ frame_needed = 0, uses_anonymous_args = 0
 846 0000 00B5     		push	{lr}
 847              	.LCFI11:
 848              		.cfi_def_cfa_offset 4
 849              		.cfi_offset 14, -4
 850 0002 91B0     		sub	sp, sp, #68
 851              	.LCFI12:
 852              		.cfi_def_cfa_offset 72
 177:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 853              		.loc 1 177 3 view .LVU206
 177:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 854              		.loc 1 177 22 is_stmt 0 view .LVU207
 855 0004 2022     		movs	r2, #32
 856 0006 0021     		movs	r1, #0
 857 0008 0DEB0200 		add	r0, sp, r2
 858 000c FFF7FEFF 		bl	memset
 859              	.LVL78:
 178:Core/Src/main.c **** 
 860              		.loc 1 178 3 is_stmt 1 view .LVU208
 178:Core/Src/main.c **** 
 861              		.loc 1 178 22 is_stmt 0 view .LVU209
 862 0010 0023     		movs	r3, #0
 863 0012 0193     		str	r3, [sp, #4]
 864 0014 0293     		str	r3, [sp, #8]
 865 0016 0393     		str	r3, [sp, #12]
 866 0018 0493     		str	r3, [sp, #16]
 867 001a 0593     		str	r3, [sp, #20]
 183:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 868              		.loc 1 183 3 is_stmt 1 view .LVU210
 183:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 869              		.loc 1 183 36 is_stmt 0 view .LVU211
 870 001c 0123     		movs	r3, #1
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 29


 871 001e 0693     		str	r3, [sp, #24]
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 872              		.loc 1 184 3 is_stmt 1 view .LVU212
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 873              		.loc 1 184 30 is_stmt 0 view .LVU213
 874 0020 4FF48033 		mov	r3, #65536
 875 0024 0793     		str	r3, [sp, #28]
 185:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 876              		.loc 1 185 3 is_stmt 1 view .LVU214
 186:Core/Src/main.c ****   {
 877              		.loc 1 186 3 view .LVU215
 186:Core/Src/main.c ****   {
 878              		.loc 1 186 7 is_stmt 0 view .LVU216
 879 0026 06A8     		add	r0, sp, #24
 880 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 881              	.LVL79:
 186:Core/Src/main.c ****   {
 882              		.loc 1 186 6 view .LVU217
 883 002c 70B9     		cbnz	r0, .L64
 192:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 884              		.loc 1 192 3 is_stmt 1 view .LVU218
 192:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 885              		.loc 1 192 31 is_stmt 0 view .LVU219
 886 002e 0F23     		movs	r3, #15
 887 0030 0193     		str	r3, [sp, #4]
 194:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 888              		.loc 1 194 3 is_stmt 1 view .LVU220
 194:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 889              		.loc 1 194 34 is_stmt 0 view .LVU221
 890 0032 0123     		movs	r3, #1
 891 0034 0293     		str	r3, [sp, #8]
 195:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 892              		.loc 1 195 3 is_stmt 1 view .LVU222
 195:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 893              		.loc 1 195 35 is_stmt 0 view .LVU223
 894 0036 0021     		movs	r1, #0
 895 0038 0391     		str	r1, [sp, #12]
 196:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 896              		.loc 1 196 3 is_stmt 1 view .LVU224
 196:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 897              		.loc 1 196 36 is_stmt 0 view .LVU225
 898 003a 0491     		str	r1, [sp, #16]
 197:Core/Src/main.c **** 
 899              		.loc 1 197 3 is_stmt 1 view .LVU226
 197:Core/Src/main.c **** 
 900              		.loc 1 197 36 is_stmt 0 view .LVU227
 901 003c 0591     		str	r1, [sp, #20]
 199:Core/Src/main.c ****   {
 902              		.loc 1 199 3 is_stmt 1 view .LVU228
 199:Core/Src/main.c ****   {
 903              		.loc 1 199 7 is_stmt 0 view .LVU229
 904 003e 01A8     		add	r0, sp, #4
 905 0040 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 906              	.LVL80:
 199:Core/Src/main.c ****   {
 907              		.loc 1 199 6 view .LVU230
 908 0044 20B9     		cbnz	r0, .L65
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 30


 203:Core/Src/main.c **** 
 909              		.loc 1 203 1 view .LVU231
 910 0046 11B0     		add	sp, sp, #68
 911              	.LCFI13:
 912              		.cfi_remember_state
 913              		.cfi_def_cfa_offset 4
 914              		@ sp needed
 915 0048 5DF804FB 		ldr	pc, [sp], #4
 916              	.L64:
 917              	.LCFI14:
 918              		.cfi_restore_state
 188:Core/Src/main.c ****   }
 919              		.loc 1 188 5 is_stmt 1 view .LVU232
 920 004c FFF7FEFF 		bl	Error_Handler
 921              	.LVL81:
 922              	.L65:
 201:Core/Src/main.c ****   }
 923              		.loc 1 201 5 view .LVU233
 924 0050 FFF7FEFF 		bl	Error_Handler
 925              	.LVL82:
 926              		.cfi_endproc
 927              	.LFE73:
 929              		.section	.text.main,"ax",%progbits
 930              		.align	1
 931              		.global	main
 932              		.syntax unified
 933              		.thumb
 934              		.thumb_func
 935              		.fpu softvfp
 937              	main:
 938              	.LFB72:
  90:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 939              		.loc 1 90 1 view -0
 940              		.cfi_startproc
 941              		@ Volatile: function does not return.
 942              		@ args = 0, pretend = 0, frame = 0
 943              		@ frame_needed = 0, uses_anonymous_args = 0
 944 0000 08B5     		push	{r3, lr}
 945              	.LCFI15:
 946              		.cfi_def_cfa_offset 8
 947              		.cfi_offset 3, -8
 948              		.cfi_offset 14, -4
  98:Core/Src/main.c **** 
 949              		.loc 1 98 3 view .LVU235
 950 0002 FFF7FEFF 		bl	HAL_Init
 951              	.LVL83:
 105:Core/Src/main.c **** 
 952              		.loc 1 105 3 view .LVU236
 953 0006 FFF7FEFF 		bl	SystemClock_Config
 954              	.LVL84:
 112:Core/Src/main.c ****   MX_TIM2_Init();
 955              		.loc 1 112 3 view .LVU237
 956 000a FFF7FEFF 		bl	MX_GPIO_Init
 957              	.LVL85:
 113:Core/Src/main.c ****   MX_USART1_UART_Init();
 958              		.loc 1 113 3 view .LVU238
 959 000e FFF7FEFF 		bl	MX_TIM2_Init
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 31


 960              	.LVL86:
 114:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 961              		.loc 1 114 3 view .LVU239
 962 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 963              	.LVL87:
 116:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 964              		.loc 1 116 3 view .LVU240
 965 0016 144C     		ldr	r4, .L69
 966 0018 0021     		movs	r1, #0
 967 001a 2046     		mov	r0, r4
 968 001c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 969              	.LVL88:
 117:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_1, (uint16_t )current_pos1); //go to initial position
 970              		.loc 1 117 3 view .LVU241
 971 0020 0421     		movs	r1, #4
 972 0022 2046     		mov	r0, r4
 973 0024 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 974              	.LVL89:
 118:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_2, (uint16_t )current_pos2); //go to initial position
 975              		.loc 1 118 3 view .LVU242
 976 0028 2468     		ldr	r4, [r4]
 977 002a 104B     		ldr	r3, .L69+4
 978 002c 1868     		ldr	r0, [r3]	@ float
 979 002e FFF7FEFF 		bl	__aeabi_f2uiz
 980              	.LVL90:
 981 0032 80B2     		uxth	r0, r0
 982 0034 6063     		str	r0, [r4, #52]
 119:Core/Src/main.c ****   /* USER CODE END 2 */
 983              		.loc 1 119 3 view .LVU243
 984 0036 0E4B     		ldr	r3, .L69+8
 985 0038 1868     		ldr	r0, [r3]	@ float
 986 003a FFF7FEFF 		bl	__aeabi_f2uiz
 987              	.LVL91:
 988 003e 80B2     		uxth	r0, r0
 989 0040 A063     		str	r0, [r4, #56]
 123:Core/Src/main.c **** 
 990              		.loc 1 123 3 view .LVU244
 991 0042 FFF7FEFF 		bl	osKernelInitialize
 992              	.LVL92:
 143:Core/Src/main.c **** 
 993              		.loc 1 143 3 view .LVU245
 143:Core/Src/main.c **** 
 994              		.loc 1 143 26 is_stmt 0 view .LVU246
 995 0046 0B4A     		ldr	r2, .L69+12
 996 0048 0021     		movs	r1, #0
 997 004a 0B48     		ldr	r0, .L69+16
 998 004c FFF7FEFF 		bl	osThreadNew
 999              	.LVL93:
 143:Core/Src/main.c **** 
 1000              		.loc 1 143 24 view .LVU247
 1001 0050 0A4B     		ldr	r3, .L69+20
 1002 0052 1860     		str	r0, [r3]
 146:Core/Src/main.c **** 
 1003              		.loc 1 146 3 is_stmt 1 view .LVU248
 146:Core/Src/main.c **** 
 1004              		.loc 1 146 19 is_stmt 0 view .LVU249
 1005 0054 0A4A     		ldr	r2, .L69+24
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 32


 1006 0056 0021     		movs	r1, #0
 1007 0058 0A48     		ldr	r0, .L69+28
 1008 005a FFF7FEFF 		bl	osThreadNew
 1009              	.LVL94:
 146:Core/Src/main.c **** 
 1010              		.loc 1 146 17 view .LVU250
 1011 005e 0A4B     		ldr	r3, .L69+32
 1012 0060 1860     		str	r0, [r3]
 157:Core/Src/main.c **** 
 1013              		.loc 1 157 3 is_stmt 1 view .LVU251
 1014 0062 FFF7FEFF 		bl	osKernelStart
 1015              	.LVL95:
 1016              	.L67:
 162:Core/Src/main.c ****   {
 1017              		.loc 1 162 3 discriminator 1 view .LVU252
 167:Core/Src/main.c ****   /* USER CODE END 3 */
 1018              		.loc 1 167 3 discriminator 1 view .LVU253
 1019 0066 FEE7     		b	.L67
 1020              	.L70:
 1021              		.align	2
 1022              	.L69:
 1023 0068 00000000 		.word	htim2
 1024 006c 00000000 		.word	.LANCHOR0
 1025 0070 00000000 		.word	.LANCHOR1
 1026 0074 00000000 		.word	.LANCHOR2
 1027 0078 00000000 		.word	StartReadUART_Servo
 1028 007c 00000000 		.word	readUART_ServoHandle
 1029 0080 00000000 		.word	.LANCHOR3
 1030 0084 00000000 		.word	StartServo01
 1031 0088 00000000 		.word	Servo01Handle
 1032              		.cfi_endproc
 1033              	.LFE72:
 1035              		.global	current_pos2
 1036              		.global	current_pos1
 1037              		.global	Servo01_attributes
 1038              		.comm	Servo01Handle,4,4
 1039              		.global	readUART_Servo_attributes
 1040              		.comm	readUART_ServoHandle,4,4
 1041              		.comm	huart1,68,4
 1042              		.comm	htim2,72,4
 1043              		.section	.data.current_pos1,"aw"
 1044              		.align	2
 1045              		.set	.LANCHOR0,. + 0
 1048              	current_pos1:
 1049 0000 00803B44 		.word	1144750080
 1050              		.section	.data.current_pos2,"aw"
 1051              		.align	2
 1052              		.set	.LANCHOR1,. + 0
 1055              	current_pos2:
 1056 0000 00803B44 		.word	1144750080
 1057              		.section	.rodata.Servo01_attributes,"a"
 1058              		.align	2
 1059              		.set	.LANCHOR3,. + 0
 1062              	Servo01_attributes:
 1063 0000 00000000 		.word	.LC1
 1064 0004 00000000 		.space	16
 1064      00000000 
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 33


 1064      00000000 
 1064      00000000 
 1065 0014 00020000 		.word	512
 1066 0018 18000000 		.word	24
 1067 001c 00000000 		.space	8
 1067      00000000 
 1068              		.section	.rodata.StartReadUART_Servo.str1.4,"aMS",%progbits,1
 1069              		.align	2
 1070              	.LC0:
 1071 0000 73657276 		.ascii	"servo smoothed: %f \012\015\000"
 1071      6F20736D 
 1071      6F6F7468 
 1071      65643A20 
 1071      2566200A 
 1072              		.section	.rodata.readUART_Servo_attributes,"a"
 1073              		.align	2
 1074              		.set	.LANCHOR2,. + 0
 1077              	readUART_Servo_attributes:
 1078 0000 08000000 		.word	.LC2
 1079 0004 00000000 		.space	16
 1079      00000000 
 1079      00000000 
 1079      00000000 
 1080 0014 00020000 		.word	512
 1081 0018 18000000 		.word	24
 1082 001c 00000000 		.space	8
 1082      00000000 
 1083              		.section	.rodata.str1.4,"aMS",%progbits,1
 1084              		.align	2
 1085              	.LC1:
 1086 0000 53657276 		.ascii	"Servo01\000"
 1086      6F303100 
 1087              	.LC2:
 1088 0008 72656164 		.ascii	"readUART_Servo\000"
 1088      55415254 
 1088      5F536572 
 1088      766F00
 1089              		.text
 1090              	.Letext0:
 1091              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 1092              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 1093              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 1094              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1095              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1096              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1097              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1098              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1099              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1100              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1101              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1102              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1103              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 1104              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\lib\\gcc\\arm-none-ea
 1105              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 1106              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 1107              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 1108              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 34


 1109              		.file 21 "<built-in>"
 1110              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 1111              		.file 23 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1112              		.file 24 "Core/Inc/main.h"
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 35


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:16     .text.MX_GPIO_Init:00000000 $t
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:72     .text.MX_GPIO_Init:0000002c $d
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:87     .text.StartReadUART_Servo:00000000 $t
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:94     .text.StartReadUART_Servo:00000000 StartReadUART_Servo
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:454    .text.StartReadUART_Servo:000001b8 $d
                            *COM*:00000044 huart1
                            *COM*:00000048 htim2
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:470    .text.StartServo01:00000000 $t
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:477    .text.StartServo01:00000000 StartServo01
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:503    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:510    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:544    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:549    .text.Error_Handler:00000000 $t
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:556    .text.Error_Handler:00000000 Error_Handler
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:587    .text.MX_TIM2_Init:00000000 $t
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:593    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:759    .text.MX_TIM2_Init:000000b0 $d
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:764    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:770    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:827    .text.MX_USART1_UART_Init:00000034 $d
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:833    .text.SystemClock_Config:00000000 $t
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:840    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:930    .text.main:00000000 $t
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:937    .text.main:00000000 main
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:1023   .text.main:00000068 $d
                            *COM*:00000004 readUART_ServoHandle
                            *COM*:00000004 Servo01Handle
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:1055   .data.current_pos2:00000000 current_pos2
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:1048   .data.current_pos1:00000000 current_pos1
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:1062   .rodata.Servo01_attributes:00000000 Servo01_attributes
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:1077   .rodata.readUART_Servo_attributes:00000000 readUART_Servo_attributes
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:1044   .data.current_pos1:00000000 $d
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:1051   .data.current_pos2:00000000 $d
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:1058   .rodata.Servo01_attributes:00000000 $d
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:1069   .rodata.StartReadUART_Servo.str1.4:00000000 $d
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:1073   .rodata.readUART_Servo_attributes:00000000 $d
C:\Users\user\AppData\Local\Temp\cckFUt3w.s:1084   .rodata.str1.4:00000000 $d

UNDEFINED SYMBOLS
__aeabi_i2f
__aeabi_fcmpgt
__aeabi_fcmplt
__aeabi_f2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2f
__aeabi_f2uiz
__aeabi_fsub
__aeabi_f2iz
atoi
HAL_UART_Receive
sprintf
strlen
HAL_UART_Transmit
ARM GAS  C:\Users\user\AppData\Local\Temp\cckFUt3w.s 			page 36


osDelay
HAL_IncTick
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_PWM_Start
osKernelInitialize
osThreadNew
osKernelStart
