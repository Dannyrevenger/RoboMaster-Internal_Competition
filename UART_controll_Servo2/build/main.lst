ARM GAS  C:\Users\user\AppData\Local\Temp\ccZkT0ak.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.Error_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	Error_Handler
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	Error_Handler:
  25              	.LFB70:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "tim.h"
  23:Core/Src/main.c **** #include "usart.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** #include <stdio.h>
  29:Core/Src/main.c **** #include <string.h>
  30:Core/Src/main.c **** #include <stdlib.h>
  31:Core/Src/main.c **** /* USER CODE END Includes */
  32:Core/Src/main.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccZkT0ak.s 			page 2


  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PD */
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE END PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/main.c **** void SystemClock_Config(void);
  55:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /**
  65:Core/Src/main.c ****   * @brief  The application entry point.
  66:Core/Src/main.c ****   * @retval int
  67:Core/Src/main.c ****   */
  68:Core/Src/main.c **** int main(void)
  69:Core/Src/main.c **** {
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* USER CODE END 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Core/Src/main.c ****   HAL_Init();
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Configure the system clock */
  84:Core/Src/main.c ****   SystemClock_Config();
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE END SysInit */
  89:Core/Src/main.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccZkT0ak.s 			page 3


  90:Core/Src/main.c ****   /* Initialize all configured peripherals */
  91:Core/Src/main.c ****   MX_GPIO_Init();
  92:Core/Src/main.c ****   MX_USART1_UART_Init();
  93:Core/Src/main.c ****   MX_TIM2_Init();
  94:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  95:Core/Src/main.c ****   uint16_t current_pos2 = 750;
  96:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
  97:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_2, current_pos2); //START POSITION
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   char buffer[8];
 100:Core/Src/main.c ****   char msg[30];
 101:Core/Src/main.c ****   /* USER CODE END 2 */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Infinite loop */
 104:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 105:Core/Src/main.c ****   while (1)
 106:Core/Src/main.c ****   {
 107:Core/Src/main.c ****     /* USER CODE END WHILE */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****     // START UART
 112:Core/Src/main.c ****     uint8_t arr[9] = {0};
 113:Core/Src/main.c ****     uint8_t i = 0, myInt = 0;
 114:Core/Src/main.c ****     uint16_t goal2;
 115:Core/Src/main.c ****     if (HAL_UART_Receive(&huart1, buffer, 1, 1000) == HAL_OK && buffer[0] == '!') //only read if se
 116:Core/Src/main.c ****     {
 117:Core/Src/main.c ****       while (buffer[0] != '#') //loop till encounter the end char "#"
 118:Core/Src/main.c ****       {
 119:Core/Src/main.c ****         HAL_UART_Receive(&huart1, buffer, 1, 1000);
 120:Core/Src/main.c ****         // if (buffer[0] == ':') //save all char before ":" in myInt
 121:Core/Src/main.c ****         // {
 122:Core/Src/main.c ****         //   i = 0;
 123:Core/Src/main.c ****         //   myInt = atoi(arr);
 124:Core/Src/main.c ****         //   memset(&arr[0], 0, sizeof(arr)); //clear arr array
 125:Core/Src/main.c ****         //   continue;
 126:Core/Src/main.c ****         // }
 127:Core/Src/main.c ****         if (buffer[0] == '#') //add all char before "#" to myInt
 128:Core/Src/main.c ****         {
 129:Core/Src/main.c ****           goal2 = atoi(arr);
 130:Core/Src/main.c ****           memset(&arr[0], 0, sizeof(arr)); //clear arr array
 131:Core/Src/main.c ****         }
 132:Core/Src/main.c ****         arr[i] = buffer[0]; //add buffer char to array
 133:Core/Src/main.c ****         i++;
 134:Core/Src/main.c ****       }
 135:Core/Src/main.c ****       sprintf(msg, "The goal is: %d \n\r", goal2);
 136:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, msg, strlen(msg), 1000);
 137:Core/Src/main.c **** 
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****       //SERVO MOTOR
 140:Core/Src/main.c ****       
 141:Core/Src/main.c ****       if (current_pos2 < goal2){
 142:Core/Src/main.c ****         for(current_pos2; current_pos2 < goal2; current_pos2++)
 143:Core/Src/main.c ****         {
 144:Core/Src/main.c ****         __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_2, current_pos2);
 145:Core/Src/main.c ****         HAL_Delay(1);
 146:Core/Src/main.c ****         }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccZkT0ak.s 			page 4


 147:Core/Src/main.c ****       }
 148:Core/Src/main.c ****       else if (current_pos2 > goal2){
 149:Core/Src/main.c ****         for(current_pos2; current_pos2 > goal2; current_pos2--)
 150:Core/Src/main.c ****         {
 151:Core/Src/main.c ****         __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_2, current_pos2);
 152:Core/Src/main.c ****         HAL_Delay(1);
 153:Core/Src/main.c ****         }
 154:Core/Src/main.c ****       }
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****       // for(x=1250; x>250; x--)
 157:Core/Src/main.c ****       // {
 158:Core/Src/main.c ****       //   __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_2, x);
 159:Core/Src/main.c ****       //   HAL_Delay(1);
 160:Core/Src/main.c ****       // }
 161:Core/Src/main.c ****       //END SERVO MOTOR
 162:Core/Src/main.c ****     }
 163:Core/Src/main.c ****     // END UART
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****     
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   }
 168:Core/Src/main.c ****   /* USER CODE END 3 */
 169:Core/Src/main.c **** }
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** /**
 172:Core/Src/main.c ****   * @brief System Clock Configuration
 173:Core/Src/main.c ****   * @retval None
 174:Core/Src/main.c ****   */
 175:Core/Src/main.c **** void SystemClock_Config(void)
 176:Core/Src/main.c **** {
 177:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 178:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 181:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 182:Core/Src/main.c ****   */
 183:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 184:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 185:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 187:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 188:Core/Src/main.c ****   {
 189:Core/Src/main.c ****     Error_Handler();
 190:Core/Src/main.c ****   }
 191:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 192:Core/Src/main.c ****   */
 193:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 194:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 195:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 196:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 197:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 198:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 201:Core/Src/main.c ****   {
 202:Core/Src/main.c ****     Error_Handler();
 203:Core/Src/main.c ****   }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccZkT0ak.s 			page 5


 204:Core/Src/main.c **** }
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 207:Core/Src/main.c **** 
 208:Core/Src/main.c **** /* USER CODE END 4 */
 209:Core/Src/main.c **** 
 210:Core/Src/main.c **** /**
 211:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 212:Core/Src/main.c ****   * @retval None
 213:Core/Src/main.c ****   */
 214:Core/Src/main.c **** void Error_Handler(void)
 215:Core/Src/main.c **** {
  27              		.loc 1 215 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 216:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 217:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 218:Core/Src/main.c ****   __disable_irq();
  33              		.loc 1 218 3 view .LVU1
  34              	.LBB4:
  35              	.LBI4:
  36              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
ARM GAS  C:\Users\user\AppData\Local\Temp\ccZkT0ak.s 			page 6


  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  C:\Users\user\AppData\Local\Temp\ccZkT0ak.s 			page 7


  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  37              		.loc 2 140 27 view .LVU2
  38              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  39              		.loc 2 142 3 view .LVU3
  40              		.syntax unified
ARM GAS  C:\Users\user\AppData\Local\Temp\ccZkT0ak.s 			page 8


  41              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  42 0000 72B6     		cpsid i
  43              	@ 0 "" 2
  44              		.thumb
  45              		.syntax unified
  46              	.L2:
  47              	.LBE5:
  48              	.LBE4:
 219:Core/Src/main.c ****   while (1)
  49              		.loc 1 219 3 discriminator 1 view .LVU4
 220:Core/Src/main.c ****   {
 221:Core/Src/main.c ****   }
  50              		.loc 1 221 3 discriminator 1 view .LVU5
  51 0002 FEE7     		b	.L2
  52              		.cfi_endproc
  53              	.LFE70:
  55              		.section	.text.SystemClock_Config,"ax",%progbits
  56              		.align	1
  57              		.global	SystemClock_Config
  58              		.syntax unified
  59              		.thumb
  60              		.thumb_func
  61              		.fpu softvfp
  63              	SystemClock_Config:
  64              	.LFB69:
 176:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  65              		.loc 1 176 1 view -0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 64
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69 0000 00B5     		push	{lr}
  70              	.LCFI0:
  71              		.cfi_def_cfa_offset 4
  72              		.cfi_offset 14, -4
  73 0002 91B0     		sub	sp, sp, #68
  74              	.LCFI1:
  75              		.cfi_def_cfa_offset 72
 177:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  76              		.loc 1 177 3 view .LVU7
 177:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  77              		.loc 1 177 22 is_stmt 0 view .LVU8
  78 0004 2422     		movs	r2, #36
  79 0006 0021     		movs	r1, #0
  80 0008 07A8     		add	r0, sp, #28
  81 000a FFF7FEFF 		bl	memset
  82              	.LVL0:
 178:Core/Src/main.c **** 
  83              		.loc 1 178 3 is_stmt 1 view .LVU9
 178:Core/Src/main.c **** 
  84              		.loc 1 178 22 is_stmt 0 view .LVU10
  85 000e 0023     		movs	r3, #0
  86 0010 0193     		str	r3, [sp, #4]
  87 0012 0293     		str	r3, [sp, #8]
  88 0014 0393     		str	r3, [sp, #12]
  89 0016 0493     		str	r3, [sp, #16]
  90 0018 0593     		str	r3, [sp, #20]
 183:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
ARM GAS  C:\Users\user\AppData\Local\Temp\ccZkT0ak.s 			page 9


  91              		.loc 1 183 3 is_stmt 1 view .LVU11
 183:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  92              		.loc 1 183 36 is_stmt 0 view .LVU12
  93 001a 0223     		movs	r3, #2
  94 001c 0693     		str	r3, [sp, #24]
 184:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  95              		.loc 1 184 3 is_stmt 1 view .LVU13
 184:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  96              		.loc 1 184 30 is_stmt 0 view .LVU14
  97 001e 0123     		movs	r3, #1
  98 0020 0A93     		str	r3, [sp, #40]
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  99              		.loc 1 185 3 is_stmt 1 view .LVU15
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 100              		.loc 1 185 41 is_stmt 0 view .LVU16
 101 0022 1023     		movs	r3, #16
 102 0024 0B93     		str	r3, [sp, #44]
 186:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 103              		.loc 1 186 3 is_stmt 1 view .LVU17
 187:Core/Src/main.c ****   {
 104              		.loc 1 187 3 view .LVU18
 187:Core/Src/main.c ****   {
 105              		.loc 1 187 7 is_stmt 0 view .LVU19
 106 0026 06A8     		add	r0, sp, #24
 107 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 108              	.LVL1:
 187:Core/Src/main.c ****   {
 109              		.loc 1 187 6 view .LVU20
 110 002c 68B9     		cbnz	r0, .L7
 193:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 111              		.loc 1 193 3 is_stmt 1 view .LVU21
 193:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 112              		.loc 1 193 31 is_stmt 0 view .LVU22
 113 002e 0F23     		movs	r3, #15
 114 0030 0193     		str	r3, [sp, #4]
 195:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 115              		.loc 1 195 3 is_stmt 1 view .LVU23
 195:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 116              		.loc 1 195 34 is_stmt 0 view .LVU24
 117 0032 0021     		movs	r1, #0
 118 0034 0291     		str	r1, [sp, #8]
 196:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 119              		.loc 1 196 3 is_stmt 1 view .LVU25
 196:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 120              		.loc 1 196 35 is_stmt 0 view .LVU26
 121 0036 0391     		str	r1, [sp, #12]
 197:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 122              		.loc 1 197 3 is_stmt 1 view .LVU27
 197:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 123              		.loc 1 197 36 is_stmt 0 view .LVU28
 124 0038 0491     		str	r1, [sp, #16]
 198:Core/Src/main.c **** 
 125              		.loc 1 198 3 is_stmt 1 view .LVU29
 198:Core/Src/main.c **** 
 126              		.loc 1 198 36 is_stmt 0 view .LVU30
 127 003a 0591     		str	r1, [sp, #20]
 200:Core/Src/main.c ****   {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccZkT0ak.s 			page 10


 128              		.loc 1 200 3 is_stmt 1 view .LVU31
 200:Core/Src/main.c ****   {
 129              		.loc 1 200 7 is_stmt 0 view .LVU32
 130 003c 01A8     		add	r0, sp, #4
 131 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 132              	.LVL2:
 200:Core/Src/main.c ****   {
 133              		.loc 1 200 6 view .LVU33
 134 0042 20B9     		cbnz	r0, .L8
 204:Core/Src/main.c **** 
 135              		.loc 1 204 1 view .LVU34
 136 0044 11B0     		add	sp, sp, #68
 137              	.LCFI2:
 138              		.cfi_remember_state
 139              		.cfi_def_cfa_offset 4
 140              		@ sp needed
 141 0046 5DF804FB 		ldr	pc, [sp], #4
 142              	.L7:
 143              	.LCFI3:
 144              		.cfi_restore_state
 189:Core/Src/main.c ****   }
 145              		.loc 1 189 5 is_stmt 1 view .LVU35
 146 004a FFF7FEFF 		bl	Error_Handler
 147              	.LVL3:
 148              	.L8:
 202:Core/Src/main.c ****   }
 149              		.loc 1 202 5 view .LVU36
 150 004e FFF7FEFF 		bl	Error_Handler
 151              	.LVL4:
 152              		.cfi_endproc
 153              	.LFE69:
 155              		.section	.text.main,"ax",%progbits
 156              		.align	1
 157              		.global	main
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu softvfp
 163              	main:
 164              	.LFB68:
  69:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 165              		.loc 1 69 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 56
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169 0000 70B5     		push	{r4, r5, r6, lr}
 170              	.LCFI4:
 171              		.cfi_def_cfa_offset 16
 172              		.cfi_offset 4, -16
 173              		.cfi_offset 5, -12
 174              		.cfi_offset 6, -8
 175              		.cfi_offset 14, -4
 176 0002 8EB0     		sub	sp, sp, #56
 177              	.LCFI5:
 178              		.cfi_def_cfa_offset 72
 179 0004 0026     		movs	r6, #0
  77:Core/Src/main.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccZkT0ak.s 			page 11


 180              		.loc 1 77 3 view .LVU38
 181 0006 FFF7FEFF 		bl	HAL_Init
 182              	.LVL5:
  84:Core/Src/main.c **** 
 183              		.loc 1 84 3 view .LVU39
 184 000a FFF7FEFF 		bl	SystemClock_Config
 185              	.LVL6:
  91:Core/Src/main.c ****   MX_USART1_UART_Init();
 186              		.loc 1 91 3 view .LVU40
 187 000e FFF7FEFF 		bl	MX_GPIO_Init
 188              	.LVL7:
  92:Core/Src/main.c ****   MX_TIM2_Init();
 189              		.loc 1 92 3 view .LVU41
 190 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 191              	.LVL8:
  93:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 192              		.loc 1 93 3 view .LVU42
 193 0016 FFF7FEFF 		bl	MX_TIM2_Init
 194              	.LVL9:
  95:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 195              		.loc 1 95 3 view .LVU43
  96:Core/Src/main.c ****   __HAL_TIM_SET_COMPARE(&htim2,TIM_CHANNEL_2, current_pos2); //START POSITION
 196              		.loc 1 96 3 view .LVU44
 197 001a 344C     		ldr	r4, .L25
 198 001c 0421     		movs	r1, #4
 199 001e 2046     		mov	r0, r4
 200 0020 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 201              	.LVL10:
  97:Core/Src/main.c **** 
 202              		.loc 1 97 3 view .LVU45
 203 0024 2368     		ldr	r3, [r4]
 204 0026 40F2EE25 		movw	r5, #750
 205 002a 9D63     		str	r5, [r3, #56]
 206 002c 3EE0     		b	.L19
 207              	.LVL11:
 208              	.L23:
 209              	.LBB6:
 129:Core/Src/main.c ****           memset(&arr[0], 0, sizeof(arr)); //clear arr array
 210              		.loc 1 129 11 view .LVU46
 129:Core/Src/main.c ****           memset(&arr[0], 0, sizeof(arr)); //clear arr array
 211              		.loc 1 129 19 is_stmt 0 view .LVU47
 212 002e 01A8     		add	r0, sp, #4
 213 0030 FFF7FEFF 		bl	atoi
 214              	.LVL12:
 129:Core/Src/main.c ****           memset(&arr[0], 0, sizeof(arr)); //clear arr array
 215              		.loc 1 129 17 view .LVU48
 216 0034 86B2     		uxth	r6, r0
 217              	.LVL13:
 130:Core/Src/main.c ****         }
 218              		.loc 1 130 11 is_stmt 1 view .LVU49
 219 0036 0023     		movs	r3, #0
 220 0038 0193     		str	r3, [sp, #4]
 221 003a 0293     		str	r3, [sp, #8]
 222 003c 8DF80C30 		strb	r3, [sp, #12]
 223              	.L12:
 132:Core/Src/main.c ****         i++;
 224              		.loc 1 132 9 view .LVU50
ARM GAS  C:\Users\user\AppData\Local\Temp\ccZkT0ak.s 			page 12


 132:Core/Src/main.c ****         i++;
 225              		.loc 1 132 24 is_stmt 0 view .LVU51
 226 0040 9DF83020 		ldrb	r2, [sp, #48]	@ zero_extendqisi2
 132:Core/Src/main.c ****         i++;
 227              		.loc 1 132 16 view .LVU52
 228 0044 0EAB     		add	r3, sp, #56
 229 0046 2344     		add	r3, r3, r4
 230 0048 03F8342C 		strb	r2, [r3, #-52]
 133:Core/Src/main.c ****       }
 231              		.loc 1 133 9 is_stmt 1 view .LVU53
 133:Core/Src/main.c ****       }
 232              		.loc 1 133 10 is_stmt 0 view .LVU54
 233 004c 0134     		adds	r4, r4, #1
 234              	.LVL14:
 133:Core/Src/main.c ****       }
 235              		.loc 1 133 10 view .LVU55
 236 004e E4B2     		uxtb	r4, r4
 237              	.LVL15:
 238              	.L11:
 117:Core/Src/main.c ****       {
 239              		.loc 1 117 20 view .LVU56
 240 0050 9DF83030 		ldrb	r3, [sp, #48]	@ zero_extendqisi2
 117:Core/Src/main.c ****       {
 241              		.loc 1 117 13 view .LVU57
 242 0054 232B     		cmp	r3, #35
 243 0056 0BD0     		beq	.L22
 119:Core/Src/main.c ****         // if (buffer[0] == ':') //save all char before ":" in myInt
 244              		.loc 1 119 9 is_stmt 1 view .LVU58
 245 0058 4FF47A73 		mov	r3, #1000
 246 005c 0122     		movs	r2, #1
 247 005e 0CA9     		add	r1, sp, #48
 248 0060 2348     		ldr	r0, .L25+4
 249 0062 FFF7FEFF 		bl	HAL_UART_Receive
 250              	.LVL16:
 127:Core/Src/main.c ****         {
 251              		.loc 1 127 9 view .LVU59
 127:Core/Src/main.c ****         {
 252              		.loc 1 127 19 is_stmt 0 view .LVU60
 253 0066 9DF83030 		ldrb	r3, [sp, #48]	@ zero_extendqisi2
 127:Core/Src/main.c ****         {
 254              		.loc 1 127 12 view .LVU61
 255 006a 232B     		cmp	r3, #35
 256 006c E8D1     		bne	.L12
 257 006e DEE7     		b	.L23
 258              	.L22:
 135:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, msg, strlen(msg), 1000);
 259              		.loc 1 135 7 is_stmt 1 view .LVU62
 260 0070 3246     		mov	r2, r6
 261 0072 2049     		ldr	r1, .L25+8
 262 0074 04A8     		add	r0, sp, #16
 263 0076 FFF7FEFF 		bl	sprintf
 264              	.LVL17:
 136:Core/Src/main.c **** 
 265              		.loc 1 136 7 view .LVU63
 136:Core/Src/main.c **** 
 266              		.loc 1 136 39 is_stmt 0 view .LVU64
 267 007a 04A8     		add	r0, sp, #16
ARM GAS  C:\Users\user\AppData\Local\Temp\ccZkT0ak.s 			page 13


 268 007c FFF7FEFF 		bl	strlen
 269              	.LVL18:
 136:Core/Src/main.c **** 
 270              		.loc 1 136 7 view .LVU65
 271 0080 4FF47A73 		mov	r3, #1000
 272 0084 82B2     		uxth	r2, r0
 273 0086 04A9     		add	r1, sp, #16
 274 0088 1948     		ldr	r0, .L25+4
 275 008a FFF7FEFF 		bl	HAL_UART_Transmit
 276              	.LVL19:
 141:Core/Src/main.c ****         for(current_pos2; current_pos2 < goal2; current_pos2++)
 277              		.loc 1 141 7 is_stmt 1 view .LVU66
 141:Core/Src/main.c ****         for(current_pos2; current_pos2 < goal2; current_pos2++)
 278              		.loc 1 141 10 is_stmt 0 view .LVU67
 279 008e B542     		cmp	r5, r6
 280 0090 0AD3     		bcc	.L14
 148:Core/Src/main.c ****         for(current_pos2; current_pos2 > goal2; current_pos2--)
 281              		.loc 1 148 12 is_stmt 1 view .LVU68
 148:Core/Src/main.c ****         for(current_pos2; current_pos2 > goal2; current_pos2--)
 282              		.loc 1 148 15 is_stmt 0 view .LVU69
 283 0092 B542     		cmp	r5, r6
 284 0094 0AD9     		bls	.L19
 285 0096 25E0     		b	.L17
 286              	.L24:
 144:Core/Src/main.c ****         HAL_Delay(1);
 287              		.loc 1 144 9 is_stmt 1 discriminator 2 view .LVU70
 288 0098 144B     		ldr	r3, .L25
 289 009a 1B68     		ldr	r3, [r3]
 290 009c 9D63     		str	r5, [r3, #56]
 145:Core/Src/main.c ****         }
 291              		.loc 1 145 9 discriminator 2 view .LVU71
 292 009e 0120     		movs	r0, #1
 293 00a0 FFF7FEFF 		bl	HAL_Delay
 294              	.LVL20:
 142:Core/Src/main.c ****         {
 295              		.loc 1 142 61 is_stmt 0 discriminator 2 view .LVU72
 296 00a4 0135     		adds	r5, r5, #1
 297              	.LVL21:
 142:Core/Src/main.c ****         {
 298              		.loc 1 142 61 discriminator 2 view .LVU73
 299 00a6 ADB2     		uxth	r5, r5
 300              	.LVL22:
 301              	.L14:
 142:Core/Src/main.c ****         {
 302              		.loc 1 142 9 discriminator 1 view .LVU74
 303 00a8 B542     		cmp	r5, r6
 304 00aa F5D3     		bcc	.L24
 305              	.LVL23:
 306              	.L19:
 142:Core/Src/main.c ****         {
 307              		.loc 1 142 9 discriminator 1 view .LVU75
 308              	.LBE6:
  99:Core/Src/main.c ****   char msg[30];
 309              		.loc 1 99 3 is_stmt 1 view .LVU76
 100:Core/Src/main.c ****   /* USER CODE END 2 */
 310              		.loc 1 100 3 view .LVU77
 105:Core/Src/main.c ****   {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccZkT0ak.s 			page 14


 311              		.loc 1 105 3 view .LVU78
 312              	.LBB7:
 112:Core/Src/main.c ****     uint8_t i = 0, myInt = 0;
 313              		.loc 1 112 5 view .LVU79
 112:Core/Src/main.c ****     uint8_t i = 0, myInt = 0;
 314              		.loc 1 112 13 is_stmt 0 view .LVU80
 315 00ac 0023     		movs	r3, #0
 316 00ae 0193     		str	r3, [sp, #4]
 317 00b0 0293     		str	r3, [sp, #8]
 318 00b2 8DF80C30 		strb	r3, [sp, #12]
 113:Core/Src/main.c ****     uint16_t goal2;
 319              		.loc 1 113 5 is_stmt 1 view .LVU81
 320              	.LVL24:
 114:Core/Src/main.c ****     if (HAL_UART_Receive(&huart1, buffer, 1, 1000) == HAL_OK && buffer[0] == '!') //only read if se
 321              		.loc 1 114 5 view .LVU82
 115:Core/Src/main.c ****     {
 322              		.loc 1 115 5 view .LVU83
 115:Core/Src/main.c ****     {
 323              		.loc 1 115 9 is_stmt 0 view .LVU84
 324 00b6 4FF47A73 		mov	r3, #1000
 325 00ba 0122     		movs	r2, #1
 326 00bc 0CA9     		add	r1, sp, #48
 327 00be 0C48     		ldr	r0, .L25+4
 328 00c0 FFF7FEFF 		bl	HAL_UART_Receive
 329              	.LVL25:
 115:Core/Src/main.c ****     {
 330              		.loc 1 115 8 view .LVU85
 331 00c4 0446     		mov	r4, r0
 332 00c6 0028     		cmp	r0, #0
 333 00c8 F0D1     		bne	.L19
 115:Core/Src/main.c ****     {
 334              		.loc 1 115 71 discriminator 1 view .LVU86
 335 00ca 9DF83030 		ldrb	r3, [sp, #48]	@ zero_extendqisi2
 115:Core/Src/main.c ****     {
 336              		.loc 1 115 62 discriminator 1 view .LVU87
 337 00ce 212B     		cmp	r3, #33
 338 00d0 ECD1     		bne	.L19
 339 00d2 BDE7     		b	.L11
 340              	.LVL26:
 341              	.L18:
 151:Core/Src/main.c ****         HAL_Delay(1);
 342              		.loc 1 151 9 is_stmt 1 discriminator 2 view .LVU88
 343 00d4 054B     		ldr	r3, .L25
 344 00d6 1B68     		ldr	r3, [r3]
 345 00d8 9D63     		str	r5, [r3, #56]
 152:Core/Src/main.c ****         }
 346              		.loc 1 152 9 discriminator 2 view .LVU89
 347 00da 0120     		movs	r0, #1
 348 00dc FFF7FEFF 		bl	HAL_Delay
 349              	.LVL27:
 149:Core/Src/main.c ****         {
 350              		.loc 1 149 61 is_stmt 0 discriminator 2 view .LVU90
 351 00e0 013D     		subs	r5, r5, #1
 352              	.LVL28:
 149:Core/Src/main.c ****         {
 353              		.loc 1 149 61 discriminator 2 view .LVU91
 354 00e2 ADB2     		uxth	r5, r5
ARM GAS  C:\Users\user\AppData\Local\Temp\ccZkT0ak.s 			page 15


 355              	.LVL29:
 356              	.L17:
 149:Core/Src/main.c ****         {
 357              		.loc 1 149 9 discriminator 1 view .LVU92
 358 00e4 B542     		cmp	r5, r6
 359 00e6 F5D8     		bhi	.L18
 149:Core/Src/main.c ****         {
 360              		.loc 1 149 9 discriminator 1 view .LVU93
 361 00e8 E0E7     		b	.L19
 362              	.L26:
 363 00ea 00BF     		.align	2
 364              	.L25:
 365 00ec 00000000 		.word	htim2
 366 00f0 00000000 		.word	huart1
 367 00f4 00000000 		.word	.LC0
 368              	.LBE7:
 369              		.cfi_endproc
 370              	.LFE68:
 372              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 373              		.align	2
 374              	.LC0:
 375 0000 54686520 		.ascii	"The goal is: %d \012\015\000"
 375      676F616C 
 375      2069733A 
 375      20256420 
 375      0A0D00
 376              		.text
 377              	.Letext0:
 378              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 379              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 380              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 381              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 382              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 383              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 384              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 385              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 386              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 387              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 388              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 389              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 390              		.file 15 "Core/Inc/tim.h"
 391              		.file 16 "Core/Inc/usart.h"
 392              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\lib\\gcc\\arm-none-ea
 393              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 394              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 395              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 396              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 397              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 398              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 399              		.file 24 "Core/Inc/gpio.h"
 400              		.file 25 "<built-in>"
ARM GAS  C:\Users\user\AppData\Local\Temp\ccZkT0ak.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\user\AppData\Local\Temp\ccZkT0ak.s:16     .text.Error_Handler:00000000 $t
C:\Users\user\AppData\Local\Temp\ccZkT0ak.s:24     .text.Error_Handler:00000000 Error_Handler
C:\Users\user\AppData\Local\Temp\ccZkT0ak.s:56     .text.SystemClock_Config:00000000 $t
C:\Users\user\AppData\Local\Temp\ccZkT0ak.s:63     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\user\AppData\Local\Temp\ccZkT0ak.s:156    .text.main:00000000 $t
C:\Users\user\AppData\Local\Temp\ccZkT0ak.s:163    .text.main:00000000 main
C:\Users\user\AppData\Local\Temp\ccZkT0ak.s:365    .text.main:000000ec $d
C:\Users\user\AppData\Local\Temp\ccZkT0ak.s:373    .rodata.main.str1.4:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_USART1_UART_Init
MX_TIM2_Init
HAL_TIM_PWM_Start
atoi
HAL_UART_Receive
sprintf
strlen
HAL_UART_Transmit
HAL_Delay
htim2
huart1
